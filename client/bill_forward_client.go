package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	httptransport "github.com/go-swagger/go-swagger/httpkit/client"
	"github.com/go-swagger/go-swagger/spec"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/authclub/billforward/client/accounts"
	"github.com/authclub/billforward/client/addresses"
	"github.com/authclub/billforward/client/payment_methods"
	"github.com/authclub/billforward/client/product_rate_plans"
	"github.com/authclub/billforward/client/products"
	"github.com/authclub/billforward/client/profiles"
	"github.com/authclub/billforward/client/subscriptions"
	"github.com/authclub/billforward/client/tokenization"
)

// The Default bill forward HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new bill forward HTTP client.
func NewHTTPClient(formats strfmt.Registry) *BillForward {
	swaggerSpec, err := spec.New(SwaggerJSON, "")
	if err != nil {
		// the swagger spec is valid because it was used to generated this code.
		panic(err)
	}
	if formats == nil {
		formats = strfmt.Default
	}
	return New(httptransport.New(swaggerSpec), formats)
}

// New creates a new bill forward client
func New(transport client.Transport, formats strfmt.Registry) *BillForward {
	cli := new(BillForward)
	cli.Transport = transport

	cli.Accounts = accounts.New(transport, formats)

	cli.Addresses = addresses.New(transport, formats)

	cli.PaymentMethods = payment_methods.New(transport, formats)

	cli.ProductRatePlans = product_rate_plans.New(transport, formats)

	cli.Products = products.New(transport, formats)

	cli.Profiles = profiles.New(transport, formats)

	cli.Subscriptions = subscriptions.New(transport, formats)

	cli.Tokenization = tokenization.New(transport, formats)

	return cli
}

// BillForward is a client for bill forward
type BillForward struct {
	Accounts *accounts.Client

	Addresses *addresses.Client

	PaymentMethods *payment_methods.Client

	ProductRatePlans *product_rate_plans.Client

	Products *products.Client

	Profiles *profiles.Client

	Subscriptions *subscriptions.Client

	Tokenization *tokenization.Client

	Transport client.Transport
}

// SetTransport changes the transport on the client and all its subresources
func (c *BillForward) SetTransport(transport client.Transport) {
	c.Transport = transport

	c.Accounts.SetTransport(transport)

	c.Addresses.SetTransport(transport)

	c.PaymentMethods.SetTransport(transport)

	c.ProductRatePlans.SetTransport(transport)

	c.Products.SetTransport(transport)

	c.Profiles.SetTransport(transport)

	c.Subscriptions.SetTransport(transport)

	c.Tokenization.SetTransport(transport)

}
