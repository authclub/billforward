package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/swag"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetAccountByIDParams creates a new GetAccountByIDParams object
// with the default values initialized.
func NewGetAccountByIDParams() *GetAccountByIDParams {
	var ()
	return &GetAccountByIDParams{}
}

/*GetAccountByIDParams contains all the parameters to send to the API endpoint
for the get account by ID operation typically these are written to a http.Request
*/
type GetAccountByIDParams struct {

	/*AccountID*/
	AccountID string
	/*Organizations*/
	Organizations []string
}

// WithAccountID adds the accountId to the get account by ID params
func (o *GetAccountByIDParams) WithAccountID(accountId string) *GetAccountByIDParams {
	o.AccountID = accountId
	return o
}

// WithOrganizations adds the organizations to the get account by ID params
func (o *GetAccountByIDParams) WithOrganizations(organizations []string) *GetAccountByIDParams {
	o.Organizations = organizations
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetAccountByIDParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// path param account-ID
	if err := r.SetPathParam("account-ID", o.AccountID); err != nil {
		return err
	}

	valuesOrganizations := o.Organizations

	joinedOrganizations := swag.JoinByFormat(valuesOrganizations, "multi")
	// query array param organizations
	if err := r.SetQueryParam("organizations", joinedOrganizations...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
