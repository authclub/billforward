{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "BillForward REST API"
    },
    "host": "localhost:8080",
    "basePath": "/RestAPI",
    "tags": [{
        "name": "usage-periods"
    }, {
        "name": "synchAppConfigs"
    }, {
        "name": "dunning-lines"
    }, {
        "name": "coupon-instance"
    }, {
        "name": "payment-method-subscription-links"
    }, {
        "name": "usage-rounding-strategies"
    }, {
        "name": "payment-methods"
    }, {
        "name": "fixed-terms"
    }, {
        "name": "search"
    }, {
        "name": "permissions"
    }, {
        "name": "charges"
    }, {
        "name": "coupon-modifier"
    }, {
        "name": "passwords"
    }, {
        "name": "pricing-calculator"
    }, {
        "name": "roles"
    }, {
        "name": "pricing-component-values"
    }, {
        "name": "coupons"
    }, {
        "name": "configurations"
    }, {
        "name": "credit-notes"
    }, {
        "name": "tokenization"
    }, {
        "name": "webhooks"
    }, {
        "name": "addresses"
    }, {
        "name": "usernames"
    }, {
        "name": "coupon-book-definition"
    }, {
        "name": "clients"
    }, {
        "name": "pricing-component-tiers"
    }, {
        "name": "usage"
    }, {
        "name": "users"
    }, {
        "name": "profiles"
    }, {
        "name": "fixed-term-definitions"
    }, {
        "name": "coupon-rule"
    }, {
        "name": "synchJobs"
    }, {
        "name": "taxation-strategies"
    }, {
        "name": "audit-logs"
    }, {
        "name": "coupon-definition"
    }, {
        "name": "amendments"
    }, {
        "name": "payments"
    }, {
        "name": "pricing-components"
    }, {
        "name": "products"
    }, {
        "name": "subscriptions"
    }, {
        "name": "quotes"
    }, {
        "name": "metadata"
    }, {
        "name": "product-rate-plans"
    }, {
        "name": "refunds"
    }, {
        "name": "locustworld"
    }, {
        "name": "time"
    }, {
        "name": "vaulted-gateways"
    }, {
        "name": "taxation-links"
    }, {
        "name": "receipts"
    }, {
        "name": "notifications"
    }, {
        "name": "cybersource-tokens"
    }, {
        "name": "unit-of-measure"
    }, {
        "name": "synchConfigs"
    }, {
        "name": "coupon-book"
    }, {
        "name": "analytics"
    }, {
        "name": "accounts"
    }, {
        "name": "organizations"
    }, {
        "name": "usage-sessions"
    }, {
        "name": "periods"
    }, {
        "name": "invoices"
    }, {
        "name": "pricing-component-value-changes"
    }],
    "schemes": ["http"],
    "paths": {
        "/analytics/account-ltv/{account-id}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets an account's life-time value, as of a given end date.",
                "description": "{\"nickname\":\"Get account life-time value\",\"response\":\"getAccountLTV.html\"}",
                "operationId": "getAccountLTV",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-id",
                    "in": "path",
                    "description": "The id of the account.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/invoices//account/{account-ID}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoices specified by the account-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by account\",\"response\" : \"getInvoiceByAccountID.html\"}",
                "operationId": "getByAccountID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "description": "ID of the account.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/notifications/ack/{notification-ID}": {
            "get": {
                "tags": ["notifications"],
                "summary": "Acknowledge a newly recevied notification.",
                "description": "{\"nickname\":\"Acknowledge\",\"response\":\"getNotificationACK.html\"}",
                "operationId": "ackNotification",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "notification-ID",
                    "in": "path",
                    "description": "ID of the notification.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            }
        },
        "/amendments/actioning-time/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["amendments"],
                "summary": "Returns a collection of amendment objects with an actioning-time within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natrual order.",
                "description": "{\"nickname\":\"Retrieve by actioning\",\"response\":\"getAmendmentByActioningTime.html\"}",
                "operationId": "getAmendmentsByActioningTime",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Amendment"
                        }
                    }
                }
            }
        },
        "/invoices/aggregate": {
            "post": {
                "tags": ["invoices"],
                "summary": "Aggregate Invoices",
                "description": "{ \"nickname\" : \"Aggregate invoices\", \"response\" : \"AggregateResponse.html\", \"request\" : \"AggregateRequest.html\"}",
                "operationId": "aggregate",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/subscriptions/aggregating": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Create an aggregating subscription.",
                "description": "{\"nickname\":\"Create aggregating subscription\",\"response\":\"createAggregatingSubscription.html\",\"request\":\"createAggregatingSubscription.request.html\"}",
                "operationId": "createAggregatingSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateAggregatingSubscriptionRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/invoices/all.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of all invoices. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve all invoices\",\"response\" : \"getInvoiceAll.csv\"}",
                "operationId": "getAllCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/pricing-calculator/amendment-cost": {
            "post": {
                "tags": ["pricing-calculator"],
                "summary": "Calculates the price of a subscription's upgrading/downgrading to a new pricing component value.",
                "description": "{ \"nickname\" : \"Calculate upgrade price\", \"request\" : \"AmendmentPriceRequest.html\" ,\"response\" : \"AmendmentPriceNTime.html\" }",
                "operationId": "getAmendmentCost",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "ammendment-price-request",
                    "description": "An amendment pricing request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/coupon-book/attachable/{attachableness}/{has_code}": {
            "get": {
                "tags": ["coupon-book"],
                "summary": "Returns a collection of attachable coupon-books. An attachable coupon-book has at least one remaining use, and is not deleted. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get all attachable coupon books\",\"response\":\"getCouponBookAllAttachable.html\"}",
                "operationId": "getAllAttachableCouponBooks",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "attachableness",
                    "in": "path",
                    "description": "The attachableness of the coupon-book.",
                    "required": true,
                    "type": "boolean"
                }, {
                    "name": "has_code",
                    "in": "path",
                    "description": "Whether the coupon-books have book codes or not.",
                    "required": true,
                    "type": "boolean"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first coupon-book to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of coupon-books to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBook"
                        }
                    }
                }
            }
        },
        "/dunning-lines/attempt-index/{index}": {
            "get": {
                "tags": ["dunning-lines"],
                "summary": "Returns a collection of dunning-lines specified by the index parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by attempt\",\"response\":\"getDunningLineByID.html\"}",
                "operationId": "getDunningLineByAttemptIndex",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "index",
                    "in": "path",
                    "description": "The attempt index of the dunning-line.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DunningLine"
                        }
                    }
                }
            }
        },
        "/tokenization/auth-capture": {
            "post": {
                "tags": ["tokenization"],
                "summary": "[Note: this API can be invoked more simply by our client-side card capture library, <a href=\"https://github.com/billforward/billforward-js\">BillForward.js</a>; you should not need to interact with this API manually unless you have particularly bespoke requirements] ",
                "description": "{\"nickname\":\"Authorized card capture\",\"response\":\"BFJSAuthCapture.html\",\"request\":\"BFJSAuthCapture.request.html\"}",
                "operationId": "authCapture",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "AuthCaptureRequest",
                    "description": "The auth capture request.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AuthCaptureRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/authorize-net": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Create an authorize-net-token.",
                "description": "{\"nickname\":\"Create a authorize-net-token\",\"request\":\"createAuthorizeNetTokenRequest.html\",\"response\":\"createAuthorizeNetTokenResponse.html\"}",
                "operationId": "createAuthorizeNetToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "authorize-net-token",
                    "description": "The authorize-net-token object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/subscriptions/batch": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Create multiple subscriptions.",
                "description": "{\"nickname\":\"Create multiple subscriptions\",\"response\":\"createMultipleSubscriptionViaHelper.html\",\"request\":\"createMultipleSubscriptionViaHelper.request.html\"}",
                "operationId": "batchCreate",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateSubscriptionBatchRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/analytics/billforward-managed-payments/{start-datetime}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets all payments managed by BillForward, within a date range.",
                "description": "{\"nickname\":\"Get managed payments\",\"response\":\"getManagedPayments.html\"}",
                "operationId": "getBillforwardManagedPayments",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "start-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/coupon-books/book-code/{book-code}": {
            "get": {
                "tags": ["coupon-book"],
                "summary": "Returns a single coupon-book, specified by the book-code parameter.",
                "description": "{\"nickname\":\"Retrieve by book code\",\"response\":\"getCouponBookByBookCode.html\"}",
                "operationId": "getCouponBookByBookCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "book-code",
                    "in": "path",
                    "description": "The unique coupon-book-code.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBook"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/braintree": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Create a braintree-token.",
                "description": "{\"nickname\":\"Create a braintree-token\",\"request\":\"createBraintreeTokenRequest.html\",\"response\":\"BraintreeTokenResponse.html\"}",
                "operationId": "createBraintreeToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "braintree-token",
                    "description": "The braintree-token object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/braintree/{accountID}": {
            "get": {
                "tags": ["vaulted-gateways"],
                "summary": "Returns a list of braintree-token, specified by the accountID parameter.",
                "description": "{ \"nickname\" : \"Retrieve a list of braintree-token\",\"response\" : \"getBraintreeByAccountID.html\"}",
                "operationId": "getBraintreeByAccountID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "accountID",
                    "in": "path",
                    "description": "The string ID of the account-ID.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the query parameter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/analytics/churn/{start-datetime}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets churn, within a date range.",
                "description": "{\"nickname\":\"Get churn\",\"response\":\"getChurn.html\"}",
                "operationId": "getChurn",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "start-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/pricing-component-value-changes/component-ID/{pricing-component-ID}": {
            "get": {
                "tags": ["pricing-component-value-changes"],
                "summary": "Returns a collection of pricing-component-value-changes, specified by the pricing-component-value-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by Component-ID\",\"response\" : \"getPricingComponentValueChangeByID.html\"}",
                "operationId": "getByComponentID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "pricing-component-ID",
                    "in": "path",
                    "description": "The string ID of the pricing-component-value.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component-value-change to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-component-value-changes to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InsertableBillingEntity"
                        }
                    }
                }
            }
        },
        "/taxation-strategies/country/{country}": {
            "get": {
                "tags": ["taxation-strategies"],
                "summary": "Returns a collection of taxation-strategies, specified by the country parameter. By default 10 values are returned. Records are returned in natural order. To return schedule or historic tax changes the include_retired query parameter should be set to true.",
                "description": "{\"nickname\":\"Retrieve by country\",\"response\":\"getTaxationStrategyByCountry.html\"}",
                "operationId": "getTaxationStrategyByCountry",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "country",
                    "in": "path",
                    "description": "The country",
                    "required": true,
                    "type": "string",
                    "enum": ["UK", "USA", "Canada", "Mexico", "Brazil", "Argentina", "China", "France", "Germany", "Ireland"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-strategy to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-strategies to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/coupon-books/coupon-book-definition/{coupon-book-definition-ID}": {
            "get": {
                "tags": ["coupon-book"],
                "summary": "Returns a collection of coupon-books, specified by coupon-book-definition-ID parameter. By default 10 coupon-books are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by coupon book definition\",\"response\":\"getCouponBookByCouponBookDefinitionID.html\"}",
                "operationId": "getCouponBookByCouponBookDefinitionID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-book-definition-ID",
                    "in": "path",
                    "description": "The string coupon-book-definition-ID of the coupon-book.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first coupon-book to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of coupon-books to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired coupon-books should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBook"
                        }
                    }
                }
            }
        },
        "/coupon-modifier/coupon-code/{coupon-code}": {
            "get": {
                "tags": ["coupon-modifier"],
                "summary": "Returns a collection of coupon-modifiers, specified by the coupon-code parameter.",
                "description": "{\"nickname\":\"Retrieve by coupon code\",\"response\":\"getCouponCode.html\"}",
                "operationId": "getCouponModifierByCouponCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-code",
                    "in": "path",
                    "description": "The coupon-code.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first product-rate-plan to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of product-rate-plans to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponModifierBase"
                        }
                    }
                }
            }
        },
        "/coupon-rule/coupon-definition/{coupon-definition-ID}": {
            "get": {
                "tags": ["coupon-rule"],
                "summary": "Returns a single coupon-definition, specified by the coupon-definition-ID parameter.",
                "description": "{\"nickname\":\"Retrieve by coupon definition\",\"response\" : \"getCouponRuleByCouponDefinitionID.html\"}",
                "operationId": "getCouponRuleByCouponDefinitionID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-definition-ID",
                    "in": "path",
                    "description": "ID of the coupon-definition.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponRule"
                        }
                    }
                }
            }
        },
        "/pricing-calculator/coupon-instance/initialisation": {
            "post": {
                "tags": ["pricing-calculator"],
                "summary": "Calculates the price of a subscription to a rate plan, at specified values of pricing component values, and with the specified coupon applied.",
                "description": "{ \"nickname\" : \"Calculate price with a coupon\",\"request\" : \"PriceRequestWithCoupon.html\" ,\"response\" : \"PriceCalculationWithCoupon.html\" }",
                "operationId": "getCouponInstanceInitialisationCost",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "coupon-instance-initialisation-request",
                    "description": "A coupon instance initialisation request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/coupon-book/coupon/{coupon-code}": {
            "get": {
                "tags": ["coupon-book"],
                "summary": "Returns a single coupon-book, specified by the coupon-code parameter.",
                "description": "{\"nickname\":\"Retrieve by coupon code\",\"response\":\"getCouponBookByBookCode.html\"}",
                "operationId": "getCouponBookByCouponCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-code",
                    "in": "path",
                    "description": "The unique coupon-code.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBook"
                        }
                    }
                }
            }
        },
        "/subscriptions/create": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Create a subscription (V2).",
                "description": "{\"nickname\":\"Create a subscription (V2)\",\"response\":\"createSubscriptionViaHelper.html\",\"request\":\"createSubscriptionViaHelper.request.html\"}",
                "operationId": "createSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateSubscriptionRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/users/create-user-login": {
            "post": {
                "tags": ["users"],
                "summary": "Create a user.",
                "description": "{\"nickname\":\"Create a new user with login\",\"request\":\"createUserWithLoginRequest.html\",\"response\":\"createUserWithLoginResponse.html\"}",
                "operationId": "createUserLogin",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "user",
                    "description": "The user object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UserCreationRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserCreationRequest"
                        }
                    }
                }
            }
        },
        "/accounts/created/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["accounts"],
                "summary": "Returns a collection of account objects with created times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natrual order.",
                "description": "{ \"nickname\" : \"Retrieve by creation\",\"response\" : \"getAccountByCreated.html\"}",
                "operationId": "getByCreated",
                "produces": ["text/plain", "application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/invoices/credit.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves credit note-paid from InvoicePayments upon line items, in CSV format.",
                "description": "{ \"nickname\" : \"Credit InvoiceLinePayments CSV\",\"response\" : \"Credit InvoiceLinePayments.csv\"}",
                "operationId": "getCreditInvoiceLinePaymentsFromInvoicesAsCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "recognition_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which credit payments will be recognised (example input: 2015-09-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "recognition_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which credit payments will be recognised (example input: 2015-10-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InvoiceLinePayment"
                        }
                    }
                }
            }
        },
        "/refunds/csv": {
            "get": {
                "tags": ["refunds"],
                "summary": "Retrieves refunds in CSV format.",
                "description": "{ \"nickname\":\"Refunds CSV\",\"response\":\"refunds.csv\"}",
                "operationId": "getRefundsAsCSV",
                "produces": ["application/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "completed_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which refunds were completed.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "completed_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which refunds were completed.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first refund to return.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of refunds to return.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Refund"
                        }
                    }
                }
            }
        },
        "/taxation-strategies/currency/{currency}": {
            "get": {
                "tags": ["taxation-strategies"],
                "summary": "Returns a collection of taxation-strategies, specified by the currency parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by currency\",\"response\":\"getTaxationStrategyByProvince.html\"}",
                "operationId": "getTaxationStrategyByCurrency",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "currency",
                    "in": "path",
                    "description": "The currency",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-strategy to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-strategies to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/organizations/customer-code/{customer-code}": {
            "get": {
                "tags": ["organizations"],
                "summary": "Returns a single organization, specified by the customer-code parameter.",
                "description": "{\"nickname\":\"Retrieve by Customer-Code\",\"response\":\"getOrganizationByCustomer.html\"}",
                "operationId": "getOrganizationByCustomerCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "customer-code",
                    "in": "path",
                    "description": "The unique customer code of the organization.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/receipts/debits.csv": {
            "get": {
                "tags": ["receipts"],
                "summary": "Retrieves debit payments in CSV format.",
                "description": "{ \"nickname\":\"Debit payments CSV\",\"response\":\"Debit payments.csv\"}",
                "operationId": "getReceiptsForDebitPaymentsAsCSV",
                "produces": ["application/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "received_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which payments were received.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "received_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which payments were received.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first payment to return.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of payments to return.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    }
                }
            }
        },
        "/profiles/email/{email}": {
            "get": {
                "tags": ["profiles"],
                "summary": "Returns a single profile, specified by the email parameter.",
                "description": "{\"nickname\":\"Retrieve by e-mail\",\"response\":\"getProfileByEmail.html\"}",
                "operationId": "getProfileByEmailAddress",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "email",
                    "in": "path",
                    "description": "The email address of the profile.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organizations used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first profile to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of profiles to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired profiles should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                }
            }
        },
        "/notifications/{entity-ID}/{subscription-ID}": {
            "get": {
                "tags": ["notifications"],
                "summary": "Returns a collection of notifications, specified by the entity-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by entity\",\"response\":\"getNotificationBySubscriptionID.html\"}",
                "operationId": "getNotificationByEntityID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "entity-ID",
                    "in": "path",
                    "description": "The string entity-ID of the notification.",
                    "required": true,
                    "type": "string"
                }, 
                {
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "The id of the subscription.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first notification to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of notificiations to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            }
        },
        "/audit-logs/entity-type/{entity-type}": {
            "get": {
                "tags": ["audit-logs"],
                "summary": "Returns a collection of audit-log entries, specified by the entity-type parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by entity type\",\"response\":\"getAuditByEntityType.html\"}",
                "operationId": "getAuditEntryByEntityType",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "entity-type",
                    "in": "path",
                    "description": "The type of the entity whose changes are documented by the audit log.",
                    "required": true,
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first account to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of accounts to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AuditEntry"
                        }
                    }
                }
            }
        },
        "/audit-logs/entity/{entity-ID}": {
            "get": {
                "tags": ["audit-logs"],
                "summary": "Returns a collection of audit-log entries, specified by the entity-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by entity-ID\",\"response\":\"getAuditByEntityID.html\"}",
                "operationId": "getAuditEntryByEntityID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "entity-ID",
                    "in": "path",
                    "description": "The string ID of the entity whose changes are documented by the audit log.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first account to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of accounts to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AuditEntry"
                        }
                    }
                }
            }
        },
        "/payments/gateway/{gateway}": {
            "get": {
                "tags": ["payments"],
                "summary": "Returns a collection of payments, specified by the gateway parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by gateway\",\"response\":\"getPaymentByGateway.html\"}",
                "operationId": "getPaymentByPaymentGateway",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "gateway",
                    "in": "path",
                    "description": "The payment gateway which generated the payment.",
                    "required": true,
                    "type": "string",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first payment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of payments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                }
            }
        },
        "/invoices/generate-line-payments": {
            "post": {
                "tags": ["invoices"],
                "summary": "Generates InvoiceLinePayments for all existing InvoicePayments.",
                "description": "{ \"nickname\" : \"Generate InvoiceLinePayments\",\"response\" : \"Generate InvoiceLinePayments.html\"}",
                "operationId": "generateLinePayments",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InvoiceLinePayment"
                        }
                    }
                }
            }
        },
        "/invoices/import": {
            "post": {
                "tags": ["invoices"],
                "summary": "",
                "description": "{ \"nickname\" : \"Import invoice\", \"response\" : \"ImportInvoiceResponse.html\", \"request\" : \"ImportInvoiceRequest.html\"}",
                "operationId": "importInvoice",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/subscriptions/initial-period-start/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieves a collection of subscription objects with period-end times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by initial period-start\",\"response\":\"getSubscriptionByInitialPeriodStart.html\"}",
                "operationId": "getByInitialPeriodStart",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/pricing-component-value-changes/invoice/{invoice-ID}": {
            "get": {
                "tags": ["pricing-component-value-changes"],
                "summary": "Returns a collection of pricing-component-value-changes, specified by the invoice-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by Invoice-ID\",\"response\" : \"getPricingComponentValueChangeByInvoiceID.html\"}",
                "operationId": "getByInvoiceID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "description": "The string invoice-ID of the pricing-component-value-change.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component-value-change to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-component-value-changes to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InsertableBillingEntity"
                        }
                    }
                }
            }
        },
        "/invoices/line-payments": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves all InvoiceLine payment attributions.",
                "description": "{ \"nickname\" : \"Retrieve InvoiceLine payment attributions\",\"response\" : \"getInvoiceLinePayments.csv\"}",
                "operationId": "getLinePayments",
                "produces": ["application/json", "text/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "recognition_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which credit payments will be recognised (example input: 2015-09-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "recognition_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which credit payments will be recognised (example input: 2015-10-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InvoiceLinePayment"
                        }
                    }
                }
            }
        },
        "/payment-methods/link-id/{linkID}": {
            "get": {
                "tags": ["payment-methods"],
                "summary": "Returns a single payment-method, specified by the linkID parameter.",
                "description": "{\"nickname\":\"Retrieve by subscription link\",\"response\":\"getPaymentMethodByLinkID.html\"}",
                "operationId": "getPaymentMethodByLinkID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "linkID",
                    "in": "path",
                    "description": "The link-id of the payment-method.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            }
        },
        "/organizations/mine": {
            "get": {
                "tags": ["organizations"],
                "summary": "Returns a collection of all my asociated organizations. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get Mine\",\"response\":\"getOrganizationAll.html\"}",
                "operationId": "getAllMyOrganizations",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first organization to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of organizations to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/organizations/name/{name}": {
            "get": {
                "tags": ["organizations"],
                "summary": "Returns a single Organization, specified by the name parameter.",
                "description": "{\"nickname\":\"Retrieve by Name\",\"response\":\"getOrganizationByName.html\"}",
                "operationId": "getOrganizationByName",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "name",
                    "in": "path",
                    "description": "The name of the Organization.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/refunds/original-payment/{payment-ID}": {
            "get": {
                "tags": ["refunds"],
                "summary": "Returns a refund for the original payment.",
                "description": "{\"nickname\":\"Retrieve by originating payment\",\"response\":\"getRefundsByPayment.html\"}",
                "operationId": "getRefundForOriginalPayment",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-ID",
                    "in": "path",
                    "description": "ID of the Payment.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Refund"
                        }
                    }
                }
            }
        },
        "/users/password-reset-code/{reset-code}": {
            "get": {
                "tags": ["users"],
                "summary": "Returns a single User, specified by the password-reset-code parameter.",
                "description": "{ \"nickname\" : \"Retrieve by reset code\",\"response\" : \"getUserByPasswordResetCode.html\"}",
                "operationId": "getUserByPasswordResetCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "reset-code",
                    "in": "path",
                    "description": "The unique password reset code of the User.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/password-update": {
            "post": {
                "tags": ["users"],
                "summary": "Update a user's password.",
                "description": "{ \"nickname\" : \"Update password using reset code\", \"request\" : \"updateUserPassword.html\" ,\"response\" : \"updateUserPasswordResponse.html\" }",
                "operationId": "updateUserPassword",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "passwordReset",
                    "description": "The password reset object.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/payments/payment-method/{payment-method-ID}": {
            "get": {
                "tags": ["payments"],
                "summary": "Returns a collection of payments, specified by the payment-method-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by payment method\",\"response\":\"getPaymentByPaymentMethod.html\"}",
                "operationId": "getPaymentByPaymentMethodID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-method-ID",
                    "in": "path",
                    "description": "ID of the payment method",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first payment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of payments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                }
            }
        },
        "/receipts/payment/{payment-ID}": {
            "get": {
                "tags": ["receipts"],
                "summary": "Returns a collection of receipts for the payment.",
                "description": "{\"nickname\":\"Retrieve by payment\",\"response\":\"getreceiptsByPayment.html\"}",
                "operationId": "getReceiptsByPayment",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-ID",
                    "in": "path",
                    "description": "ID of the payment.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first receipt to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of receipts to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    }
                }
            }
        },
        "/analytics/payments-per-product": {
            "post": {
                "tags": ["analytics"],
                "summary": "Gets hourly payments per product, within a date range.",
                "description": "{\"nickname\" : \"Get payments per product\",\"response\" : \"getProductPayments.html\"}",
                "operationId": "getProductPayments",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Payments-per-product",
                    "description": "The payments-per-product object.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/analytics/payments/accounts": {
            "post": {
                "tags": ["analytics"],
                "summary": "Gets hourly payments per product, within a date range.",
                "description": "{\"nickname\" : \"Get payments per account\",\"response\" : \"getAccountPayments.html\"}",
                "operationId": "getAccountPayments",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Payments-per-account",
                    "description": "The payments-per-account object.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/analytics/payments/accounts/outstanding": {
            "post": {
                "tags": ["analytics"],
                "summary": "Gets outstanding debts per account, within a date range.",
                "description": "{\"nickname\" : \"Get account debts\",\"response\" : \"getAccountDebts.html\"}",
                "operationId": "getAccountDebts",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "debts-per-account",
                    "description": "The payments-per-account object.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/analytics/payments/outstanding/{start-datetime}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets debts within a date range.",
                "description": "{\"nickname\":\"Get debts\",\"response\":\"getDebts.html\"}",
                "operationId": "getDebts",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "start-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/analytics/payments/product-rate-plan": {
            "post": {
                "tags": ["analytics"],
                "summary": "Gets hourly payments per product, within a date range.",
                "description": "{\"nickname\" : \"Get payments per rate plan\",\"response\" : \"getRatePlanPayments.html\"}",
                "operationId": "getProductRatePlanPayments",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Payments-per-product-rate-plan",
                    "description": "The payments-per-product-rate-plan object.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/analytics/payments/{start-datetime}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets payments within a date range.",
                "description": "{\"nickname\":\"Get all payments\",\"response\":\"getPayments.html\"}",
                "operationId": "getPayments",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "start-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/tokenization/payvision-shout-v1": {
            "post": {
                "tags": ["tokenization"],
                "summary": "[Note: this API is intended to be invoked by the PayVision servers -- they are BillForward's way of informing client-side of the result of card-capture from within an iframe] Generates iframe to which customer will be directed upon success or failure. The iframe contains JavaScript which attempts to send a message to BillForward.js on the client-side, which will handle the result.",
                "description": "{\"nickname\":\"Generate PayVision iframe redirect\",\"response\":\"payVisionShoutV1.html\",\"request\":\"payVisionShoutV1.request.html\"}",
                "operationId": "payVisionShoutV1",
                "consumes": ["application/x-www-form-urlencoded"],
                "produces": ["text/html"],
                "parameters": [{
                    "name": "resourcePath",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/invoices/period-end/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoice objects with period-end times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by period-end\",\"response\" : \"getInvoiceByPeriodEnd.html\"}",
                "operationId": "getByPeriodEnd",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/period-start/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoice objects with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by period-start\",\"response\" : \"getInvoiceByPeriodStart.html\"}",
                "operationId": "getByPeriodStart",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/period-start/{lower-threshold}/{upper-threshold}.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoice objects with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by period-start\",\"response\" : \"getInvoiceByPeriodStart.csv\"}",
                "operationId": "getByPeriodStartCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "tags": ["permissions"],
                "summary": "Retrieves a collection of all permissions. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve all permissions\",\"response\":\"getPermissionAll.html\"}",
                "operationId": "getAllPermissions",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BFPermission"
                        }
                    }
                }
            },
            "post": {
                "tags": ["permissions"],
                "summary": "Create a new permission.",
                "description": "{\"nickname\":\"Create a new permission\",\"request\":\"createPermissionRequest.html\",\"response\":\"createPermissionResponse.html\"}",
                "operationId": "createPermission",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Permission request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BFPermission"
                        }
                    }
                }
            }
        },
        "/permissions/resources": {
            "get": {
                "tags": ["permissions"],
                "summary": "Retrieves all available resource.",
                "description": "{\"nickname\":\"Retrieve available resources\",\"response\":\"getAvailableResources.html\"}",
                "operationId": "getAvailableResources",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BFPermission"
                        }
                    }
                }
            }
        },
        "/permissions/resources/{resource}": {
            "get": {
                "tags": ["permissions"],
                "summary": "Retrieves all the available actions for the specified resource.",
                "description": "{\"nickname\":\"Retrieve available actions\",\"response\":\"getAvailableActions.html\"}",
                "operationId": "getAvailableActionsForResource",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "resource",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "enum": ["All", "Account", "Address", "Amendment", "Analytics", "Audit", "BFAdmin", "BFJS", "Charge", "Client", "Configuration", "CouponBook", "CouponBookDefinition", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "Coupon", "Credit", "CybersourceToken", "Dunning", "FixedTerm", "Gateway", "Invoice", "Notification", "Organization", "Password", "PaymentMethod", "Payment", "Permission", "PricingComponent", "PricingComponentTier", "PricingComponentValueChange", "PricingComponentValue", "ProductRatePlan", "Product", "ProductResources", "Profile", "Quote", "Receipt", "Refund", "Search", "Subscription", "Tax", "UnitOfMeasure", "Usage", "Username", "User", "UserResources", "Webhook"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BFPermission"
                        }
                    }
                }
            }
        },
        "/permissions/{permission-ID}": {
            "get": {
                "tags": ["permissions"],
                "summary": "Retrieves a single permission, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve a permission\",\"response\":\"getPermissionByID.html\"}",
                "operationId": "getPermissionByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "permission-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BFPermission"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["permissions"],
                "summary": "Revokes a permission",
                "description": "{\"nickname\":\"Revoke permission\",\"response\":\"revokePermission.html\",\"request\":\"revokePErmissionRequest.html\"}",
                "operationId": "revokePermission",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "permission-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BFPermission"
                        }
                    }
                }
            }
        },
        "/tokenization/pre-auth": {
            "post": {
                "tags": ["tokenization"],
                "summary": "[Note: this API can be invoked more simply by our client-side card capture library, <a href=\"https://github.com/billforward/billforward-js\">BillForward.js</a>; you should not need to interact with this API manually unless you have particularly bespoke requirements] ",
                "description": "{\"nickname\":\"Pre-authorize card capture\",\"response\":\"BFJSPreAuth.html\",\"request\":\"BFJSPreAuth.request.html\"}",
                "operationId": "preAuth",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "PreAuthRequest",
                    "description": "The auth request.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/InsertableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/usage-rounding-strategies/pricing-component/{pricing-component-ID}": {
            "get": {
                "tags": ["usage-rounding-strategies"],
                "summary": "Returns a collection of usage-rounding-strategies, specified by the pricing-component-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by pricing component\",\"response\":\"getUsageRoundingStrategiesByPricingComponent.html\"}",
                "operationId": "getUsageRoundingStrategyByPricingComponentID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "pricing-component-ID",
                    "in": "path",
                    "description": "The string pricing-component-ID of the pricing-component.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-components to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/pricing-calculator/product-rate-plan": {
            "post": {
                "tags": ["pricing-calculator"],
                "summary": "Calculates the price of a subscription to a rate plan, at specified values of pricing component values.",
                "description": "{ \"nickname\" : \"Calculate price\", \"request\" : \"PriceRequest.html\" ,\"response\" : \"PriceCalculation.html\" }",
                "operationId": "getProductRatePlanCosts",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "price-request",
                    "description": "A price request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/taxation-links/product-rate-plan/{product-rate-plan-ID}": {
            "get": {
                "tags": ["taxation-links"],
                "summary": "Returns a collection of taxation-links, specified by the product-rate-plan-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by rate-plan\",\"response\":\"getTaxationLinkByPRPID.html\"}",
                "operationId": "getTaxationLinkByProductRatePlan",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "description": "The ID of the product-rate-plan",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/product-rate-plans/product/{product-ID}": {
            "get": {
                "tags": ["product-rate-plans"],
                "summary": "Returns a collection of product-rate-plans, specified by the product-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by product\",\"response\":\"getPRPByProductID.html\"}",
                "operationId": "getRatePlanByProduct",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first product-rate-plan to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of product-rate-plans to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductRatePlan"
                        }
                    }
                }
            }
        },
        "/product-rate-plans/product/{product-ID}/rate-plan/{rate-plan-ID}": {
            "get": {
                "tags": ["product-rate-plans"],
                "summary": "Returns a collection of product-rate-plans, specified by the product-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by name\",\"response\":\"getPRPByNameAndProduct.html\"}",
                "operationId": "getRatePlanByProductAndRatePlan",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first product-rate-plan to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of product-rate-plans to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductRatePlan"
                        }
                    }
                }
            }
        },
        "/taxation-strategies/province/{province}": {
            "get": {
                "tags": ["taxation-strategies"],
                "summary": "Returns a collection of taxation-strategies, specified by the province parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by province\",\"response\":\"getTaxationStrategyByProvince.html\"}",
                "operationId": "getTaxationStrategyByProvince",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "province",
                    "in": "path",
                    "description": "The province",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-strategy to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-strategies to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/cybersource-tokens/recurring-subscription-info/{recurring-subscription-ID}": {
            "get": {
                "tags": ["cybersource-tokens"],
                "summary": "Returns a single cybersource-token, specified by the recurring-subscription-ID parameter.",
                "description": "{\"nickname\":\"NICKNAME\",\"response\":\"getCybersourceTokenByID.html\"}",
                "operationId": "getCybersourceTokenByRecurringSubscriptionID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "recurring-subscription-ID",
                    "in": "path",
                    "description": "The recurring-subscription-info-subscription-ID of the cybersource token.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/refunds/refund-payment/{payment-ID}": {
            "get": {
                "tags": ["refunds"],
                "summary": "Returns a refund for the refund payment.",
                "description": "{\"nickname\":\"Retrieve by refund payment\",\"response\":\"getRefundsByPayment.html\"}",
                "operationId": "getRefundForRefundPayment",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-ID",
                    "in": "path",
                    "description": "ID of the Payment.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Refund"
                        }
                    }
                }
            }
        },
        "/invoices/refund.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves awarded refunds from InvoicePayments upon line items, in CSV format.",
                "description": "{ \"nickname\" : \"Refund InvoiceLinePayments CSV\",\"response\" : \"Refund InvoiceLinePayments.csv\"}",
                "operationId": "getRefundInvoiceLinePaymentsFromInvoicesAsCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "recognition_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which refunds will be recognised (example input: 2015-09-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "recognition_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which refunds will be recognised (example input: 2015-10-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InvoiceLinePayment"
                        }
                    }
                }
            }
        },
        "/receipts/refunds.csv": {
            "get": {
                "tags": ["receipts"],
                "summary": "Retrieves refunded payments in CSV format.",
                "description": "{ \"nickname\":\"Refunded payments CSV\",\"response\":\"Refunded payments.csv\"}",
                "operationId": "getReceiptsForRefundPaymentsAsCSV",
                "produces": ["application/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "completed_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which payments were received.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "completed_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which payments were received.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first payment to return.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of payments to return.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    }
                }
            }
        },
        "/invoices/revenue.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves received revenue from InvoicePayments upon line items, in CSV format.",
                "description": "{ \"nickname\" : \"Debit InvoiceLinePayments CSV\",\"response\" : \"Debit InvoiceLinePayments.csv\"}",
                "operationId": "getDebitInvoiceLinePaymentsFromInvoicesAsCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "recognition_start",
                    "in": "query",
                    "description": "The UTC DateTime specifying the start of the interval within which revenue will be recognised (example input: 2015-09-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "recognition_end",
                    "in": "query",
                    "description": "The UTC DateTime specifying the end of the interval within which revenue will be recognised (example input: 2015-10-13T11:50:24).",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InvoiceLinePayment"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": ["roles"],
                "summary": "Retrieves a collection of all roles. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve all roles\",\"response\":\"getRoleAll.html\"}",
                "operationId": "getAllRoles",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "post": {
                "tags": ["roles"],
                "summary": "Create a new role.",
                "description": "{\"nickname\":\"Create a new role\",\"request\":\"createRoleRequest.html\",\"response\":\"createRoleResponse.html\"}",
                "operationId": "createRole",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Role request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "put": {
                "tags": ["roles"],
                "summary": "Update a role.",
                "description": "{\"nickname\":\"Update a role\",\"request\":\"updateRoleRequest.html\",\"response\":\"updateRoleResponse.html\"}",
                "operationId": "updateRole",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Role request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/roles/{role}": {
            "get": {
                "tags": ["roles"],
                "summary": "Retrieves a single role, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve a role\",\"response\":\"getRoleByID.html\"}",
                "operationId": "getRoleByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "role",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["roles"],
                "summary": "Revokes a role",
                "description": "{\"nickname\":\"Revoke role\",\"response\":\"revokeRole.html\",\"request\":\"revokeRoleRequest.html\"}",
                "operationId": "revokeRole",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "role",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/roles/{role}/permission/{resource}/{action}": {
            "delete": {
                "tags": ["roles"],
                "summary": "Revokes a particular permission",
                "description": "{\"nickname\":\"Remove Permission from role\",\"response\":\"removePermissionFromGroup.html\",\"request\":\"removePermissionFromGroupRequest.html\"}",
                "operationId": "removePermissionFromRole",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "role",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "resource",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "enum": ["All", "Account", "Address", "Amendment", "Analytics", "Audit", "BFAdmin", "BFJS", "Charge", "Client", "Configuration", "CouponBook", "CouponBookDefinition", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "Coupon", "Credit", "CybersourceToken", "Dunning", "FixedTerm", "Gateway", "Invoice", "Notification", "Organization", "Password", "PaymentMethod", "Payment", "Permission", "PricingComponent", "PricingComponentTier", "PricingComponentValueChange", "PricingComponentValue", "ProductRatePlan", "Product", "ProductResources", "Profile", "Quote", "Receipt", "Refund", "Search", "Subscription", "Tax", "UnitOfMeasure", "Usage", "Username", "User", "UserResources", "Webhook"]
                }, {
                    "name": "action",
                    "in": "path",
                    "required": true,
                    "type": "string",
                    "enum": ["All", "AddToInvoice", "AddToProductRatePlan", "AddToSubscription", "Advance", "RemoveFromInvoice", "RemoveFromProductRatePlan", "RemoveFromSubscription", "Cancel", "Create", "Delete", "Edit", "Execute", "Freeze", "Import", "InvoiceCharges", "Issue", "Migrate", "Read", "Recalculate", "Reset", "Resume", "Revive", "Stop", "Tokenize", "Void"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/sagepay-notify-v3-00": {
            "post": {
                "tags": ["tokenization"],
                "summary": "[Note: this API is intended to be invoked by the SagePay servers -- they are BillForward's way of receiving a callback from a SagePay card capture operation, using SagePay's FORM Protocol, v3.0] Handles SagePay Notification.",
                "description": "{\"nickname\":\"Handle SagePay Notification\",\"response\":\"sagePayNotifyV3_00.html\",\"request\":\"sagePayNotifyV3_00.request.html\"}",
                "operationId": "sagePayNotifyV3_00",
                "consumes": ["application/x-www-form-urlencoded"],
                "produces": ["text/plain"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the queryparameter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "billForwardURLRoot",
                    "in": "query",
                    "description": "The URL through which BFJS connected to BillForward.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "access_token",
                    "in": "query",
                    "description": "The public token through which BFJS connected to BillForward.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "VPSProtocol",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "TxType",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "VendorTxCode",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "Status",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "VPSTxId",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "CardType",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "Token",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "StatusDetail",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "Last4Digits",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "VPSSignature",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "ExpiryDate",
                    "in": "formData",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tokenization/sagepay-shout-v3-00": {
            "get": {
                "tags": ["tokenization"],
                "summary": "[Note: this API is intended to be invoked by the SagePay servers -- they are BillForward's way of informing client-side of the result of card-capture from within an iframe, using SagePay's FORM Protocol, v3.0] Generates iframe to which customer will be directed upon success or failure. The iframe contains JavaScript which attempts to send a message to BillForward.js on the client-side, which will handle the result.",
                "description": "{\"nickname\":\"Generate SagePay iframe redirect\",\"response\":\"sagePayShoutV3_00.html\",\"request\":\"sagePayShoutV3_00.request.html\"}",
                "operationId": "sagePayShoutV3_00",
                "consumes": ["text/plain"],
                "produces": ["text/html"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the queryparameter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "s",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "t",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "c",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "e",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "l",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "d",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/sms-password-reset-code/{reset-code}": {
            "get": {
                "tags": ["users"],
                "summary": "Returns a single User, specified by the reset-code parameter.",
                "description": "{ \"nickname\" : \"Retrieve by sms reset code\",\"response\" : \"getUserBySMSPasswordResetCode.html\"}",
                "operationId": "getUserBySMSPasswordResetCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "reset-code",
                    "in": "path",
                    "description": "The unique SMS password reset code of the User.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/usage-sessions/start": {
            "post": {
                "tags": ["usage-sessions"],
                "summary": "Start a new session",
                "description": "{\"nickname\":\"Start a new session\",\"request\":\"createStartUsageSessionRequest.html\",\"response\":\"createStartUsageSessionResponse.html\"}",
                "operationId": "startUsageSession",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "usageSessions",
                    "description": "An array of 'Usage Session' objects whose sessions you wish to start.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CompoundUsageSession"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UsageSession"
                        }
                    }
                }
            }
        },
        "/invoices/state/{state}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoices, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by state\",\"response\" : \"getInvoiceByState.html\"}",
                "operationId": "getByState",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "state",
                    "in": "path",
                    "description": "The current state of the invoice, either Paid, Pending,  Unpaid or Voided.",
                    "required": true,
                    "type": "string",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "ID"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/state/{state}.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoices, specified by the state parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by state\",\"response\" : \"getInvoiceByState.csv\"}",
                "operationId": "getByStateCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "state",
                    "in": "path",
                    "description": "The current state of the invoice, either Paid, Pending,  Unpaid or Voided.",
                    "required": true,
                    "type": "string",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "ID"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/state/{state}/period-start/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoice objects specified by the state parameter and with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by state and period-start\",\"response\" : \"getInvoiceByStateAndPeriodStart.html\"}",
                "operationId": "getByStateAndPeriodStart",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "state",
                    "in": "path",
                    "description": "The current state of the invoice, either Paid, Pending,  Unpaid or Voided.",
                    "required": true,
                    "type": "string",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                }, {
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/state/{state}/period-start/{lower-threshold}/{upper-threshold}.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoice objects specified by the state parameter and with period-start times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by state and period-start\",\"response\" : \"getInvoiceByStateAndPeriodStart.csv\"}",
                "operationId": "getByStateAndPeriodStartCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "state",
                    "in": "path",
                    "description": "The current state of the invoice, either Paid, Pending,  Unpaid or Voided.",
                    "required": true,
                    "type": "string",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                }, {
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/usage-sessions/stop": {
            "post": {
                "tags": ["usage-sessions"],
                "summary": "Stop a specified session",
                "description": "{\"nickname\":\"Stop a specified session\",\"request\":\"createStopUsageSessionRequest.html\",\"response\":\"createStopUsageSessionResponse.html\"}",
                "operationId": "stopUsageSession",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "usageSessions",
                    "description": "An array of 'Usage Session' objects whose sessions you wish to stop.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CompoundUsageSession"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UsageSession"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Create a stripe-token.",
                "description": "{\"nickname\":\"Create a stripe-token\",\"request\":\"createstripeTokenRequest.html\",\"response\":\"createstripeTokenResponse.html\"}",
                "operationId": "createStripeToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "stripe-token",
                    "description": "The stripe-token object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "put": {
                "tags": ["vaulted-gateways"],
                "summary": "Update a stripe-token.",
                "description": "{\"nickname\":\"Update a stripe-token\",\"request\":\"updatestripeTokenRequest.html\",\"response\":\"updatestripeTokenResponse.html\"}",
                "operationId": "updateStripeToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "stripe-token",
                    "description": "The stripe-token object to be updated.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe-ACH": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Create a stripe-ACH-token.",
                "description": "{\"nickname\":\"Create a stripe-ACH-token\",\"request\":\"createstripeACHTokenRequest.html\",\"response\":\"createstripeACHTokenResponse.html\"}",
                "operationId": "createStripeACHToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "stripe-ACH-token",
                    "description": "The stripe-ACH-token object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "put": {
                "tags": ["vaulted-gateways"],
                "summary": "Update a stripe-ACH-token.",
                "description": "{\"nickname\":\"Update a stripe-ACH-token\",\"request\":\"updatestripeACHTokenRequest.html\",\"response\":\"updatestripeACHTokenResponse.html\"}",
                "operationId": "updateStripeACHToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "stripe-token",
                    "description": "The stripe-ACH-token object to be updated.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe-ACH/{stripeACHTokenID}": {
            "get": {
                "tags": ["vaulted-gateways"],
                "summary": "Returns a single stripe-ACH-token, specified by the stripeACHTokenID parameter.",
                "description": "{ \"nickname\" : \"Retrieve a stripe-ACH-token\",\"response\" : \"getStripeACHTokenByID.html\"}",
                "operationId": "getStripeACH",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "stripeACHTokenID",
                    "in": "path",
                    "description": "The string ID of the stripe-ACH-token.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the query parameter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe/card-details-id/{cardDetailsID}": {
            "get": {
                "tags": ["vaulted-gateways"],
                "summary": "Returns a single stripe-token, specified by the cardDetailsID parameter.",
                "description": "{ \"nickname\" : \"Retrieve a stripe-token by cardDetailsID\",\"response\" : \"getStripeTokenByCardDetailsID.html\"}",
                "operationId": "getByCardDetailsID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "cardDetailsID",
                    "in": "path",
                    "description": "The card details id of the stripe-token.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe/verify-bank-account": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Verify Stripe bank account.",
                "description": "{\"nickname\":\"Verify Stripe bank account\",\"response\":\"verifyStripeBankAccount.html\"}",
                "operationId": "verifyBankAccount",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "Bank-Account-Verification",
                    "description": "The Bank-Account-Verification object.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe/webhook": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Receive and handle webhook from Stripe.",
                "description": "{\"nickname\":\"Receive Stripe webhook\",\"response\":\"receiveStripeWebhook.html\"}",
                "operationId": "webhook",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "event",
                    "description": "The event received.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Event"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/stripe/{stripeTokenID}": {
            "get": {
                "tags": ["vaulted-gateways"],
                "summary": "Returns a single stripe-token, specified by the stripeTokenID parameter.",
                "description": "{\"nickname\":\"Retrieve a stripe-token\",\"response\":\"getStripeTokenByID.html\"}",
                "operationId": "getStripeToken",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "stripeTokenID",
                    "in": "path",
                    "description": "The string ID of the stripe-token.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.Multiple organization-IDs may be specified by repeated use of the query parameter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/analytics/subscription-ltv/{subscription-id}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets a subscription's life-time value, as of a given end date.",
                "description": "{\"nickname\":\"Get sub life-time value\",\"response\":\"getSubscriptionLTV.html\"}",
                "operationId": "getSubscriptionLTV",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-id",
                    "in": "path",
                    "description": "The id of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/invoices/subscription/version/{subscription-version-ID}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a collection of invoices specified by the subscription-version-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by subscription version\",\"response\" : \"getInvoiceBySubscriptionVersionID.html\"}",
                "operationId": "getBySubscriptionVersionID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-version-ID",
                    "in": "path",
                    "description": "Version ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/analytics/subscription/{subscription-ID}": {
            "get": {
                "tags": ["pricing-component-value-changes"],
                "summary": "Returns a collection of pricing-component-value-changes, specified by the subscription-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by Subscription-ID\",\"response\" : \"getPricingComponentValueChangeBySubscriptionID.html\"}",
                "operationId": "getBySubscriptionID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component-value-change to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-component-value-changes to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InsertableBillingEntity"
                        }
                    }
                }
            }
        },
        "/subscriptions/successful-periods/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieves a collection of subscription objects whose successful periods count falls within the range specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by successful period\",\"response\":\"getSubscriptionBySuccessfulPeriods.html\"}",
                "operationId": "getBySuccessfulPeriods",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The lower threshold of the range",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The upper threshold of the range.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/time/swagger-end-point": {
            "get": {
                "tags": ["time"],
                "summary": "",
                "description": "{\"nickname\":\"\",\"request\":\"advanceSubscriptionRequest.html\",\"response\":\"advanceSubscription.html\"}",
                "operationId": "getTimeSwagger",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "description": "The request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/TimeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeResponse"
                        }
                    }
                }
            }
        },
        "/invoices/swagger-end-point/{query-string}": {
            "get": {
                "tags": ["invoices"],
                "summary": "",
                "description": "{ \"nickname\" : \"\",\"response\" : \"\"}",
                "operationId": "getSwagger",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "query-string",
                    "in": "path",
                    "description": "The query string used to search.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The starting index of the search results.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The number of search results to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "format",
                    "in": "query",
                    "description": "The response format, either JSON or XML.",
                    "required": false,
                    "type": "string",
                    "default": "JSON"
                }, {
                    "name": "wildcard",
                    "in": "query",
                    "description": "Toggle if we search for full words or whether a wildcard is used.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }, {
                    "name": "entity",
                    "in": "query",
                    "description": "Is an entity returned with the search results.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SwaggerTypeListInv"
                        }
                    }
                }
            }
        },
        "/synchAppConfigs": {
            "post": {
                "tags": ["synchAppConfigs"],
                "summary": "Create a synch app configuration.",
                "description": "{\"nickname\":\"Create a new synch app configuration\",\"request\":\"createSynchAppConfigurationRequest.html\",\"response\":\"createSynchAppConfigurationResponse.html\"}",
                "operationId": "createSyncAppConfig",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "synchAppConfig",
                    "description": "The data synch app config object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "put": {
                "tags": ["synchAppConfigs"],
                "summary": "Update a synch app configuration.",
                "description": "{ \"nickname\" : \"Update a sync app configuration\", \"request\" : \"updateSyncAppConfigRequest.html\" ,\"response\" : \"updateSyncAppConfigResponse.html\" }",
                "operationId": "updateSyncAppConfig",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "synchAppConfig",
                    "description": "The synch app configuration object to be updated.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchAppConfigs/platform/{platform}": {
            "get": {
                "tags": ["synchAppConfigs"],
                "summary": "Returns a collection configurations, specified by the platform parameter.",
                "description": "{ \"nickname\" : \"Retrieve by platform\",\"response\" : \"getSynchAppConfigsByPlatform.html\"}",
                "operationId": "getSyncAppConfigByPlatform",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "platform",
                    "in": "path",
                    "description": "The type of the synch app configuration.",
                    "required": true,
                    "type": "string",
                    "enum": ["Salesforce"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchAppConfigs/{synchAppConfigs-ID}": {
            "get": {
                "tags": ["synchAppConfigs"],
                "summary": "Returns a single config, specified by the ID parameter.",
                "description": "{ \"nickname\" : \"Retrieve an existing synch config\",\"response\" : \"getSynchAppConfigByID.html\"}",
                "operationId": "getSyncAppConfig",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "synchAppConfigs-ID",
                    "in": "path",
                    "description": "ID of the Synch App Configuration.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization -IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchConfigs": {
            "get": {
                "tags": ["synchConfigs"],
                "summary": "Returns a collection of Users. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Get all synch configs\",\"response\" : \"getSynchConfigsAll.html\"}",
                "operationId": "getAllSyncConfigs",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first synch configuration to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of configs to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "post": {
                "tags": ["synchConfigs"],
                "summary": "Create a synch configuration.",
                "description": "{\"nickname\":\"Create a new synch configuration\",\"request\":\"createSynchConfigRequest.html\",\"response\":\"createSynchConfigResponse.html\"}",
                "operationId": "createSyncConfig",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "synchConfig",
                    "description": "The data synch config object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "put": {
                "tags": ["synchConfigs"],
                "summary": "Update a synch configuration.",
                "description": "{ \"nickname\" : \"Update a synch config\", \"request\" : \"updateSyncConfigRequest.html\" ,\"response\" : \"updateSyncConfigResponse.html\" }",
                "operationId": "updateSyncConfig",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "synchConfig",
                    "description": "The synch configuration object to be updated.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchConfigs/platform/{platform}": {
            "get": {
                "tags": ["synchConfigs"],
                "summary": "Returns a collection configurations, specified by the platform parameter.",
                "description": "{ \"nickname\" : \"Retrieve by platform\",\"response\" : \"getSynchConfigsByPlatform.html\"}",
                "operationId": "getSyncConfigByPlatform",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "platform",
                    "in": "path",
                    "description": "The type of the synch configuration.",
                    "required": true,
                    "type": "string",
                    "enum": ["Salesforce"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchConfigs/username/{username}": {
            "get": {
                "tags": ["synchConfigs"],
                "summary": "Returns a collection configurations, specified by the username parameter.",
                "description": "{ \"nickname\" : \"Retrieve by username\",\"response\" : \"getSynchConfigByUsername.html\"}",
                "operationId": "getSyncConfigByUsername",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "username",
                    "in": "path",
                    "description": "The username in the synch configuration.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchConfigs/{synchConfigs-ID}": {
            "get": {
                "tags": ["synchConfigs"],
                "summary": "Returns a single config, specified by the ID parameter.",
                "description": "{ \"nickname\" : \"Retrieve an existing synch config\",\"response\" : \"getSynchConfigByID.html\"}",
                "operationId": "getSyncConfig",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "synchConfigs-ID",
                    "in": "path",
                    "description": "ID of the Synch Configuration.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization -IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchJobs": {
            "get": {
                "tags": ["synchJobs"],
                "summary": "Returns a collection of Users. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get all synch jobs\",\"response\":\"getSynchJobsAll.html\"}",
                "operationId": "getAllSyncJobs",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first synch job to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of synch jobs to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "post": {
                "tags": ["synchJobs"],
                "summary": "Create a synch job.",
                "description": "{\"nickname\":\"Create a new sync job\",\"request\":\"createSynchJobRequest.html\",\"response\":\"createSynchJobResponse.html\"}",
                "operationId": "createSyncJob",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "synchJob",
                    "description": "The data synch job object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "put": {
                "tags": ["synchJobs"],
                "summary": "Update a synch job.",
                "description": "{\"nickname\":\"Update a synch job\",\"request\":\"updateSyncJobRequest.html\",\"response\":\"updateSyncJobResponse.html\"}",
                "operationId": "updateSyncJob",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "synchJob",
                    "description": "The synch job object to be updated.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchJobs/scope/{scope}": {
            "get": {
                "tags": ["synchJobs"],
                "summary": "Returns a collection jobs, specified by the scope parameter.",
                "description": "{\"nickname\":\"Retrieve by scope\",\"response\":\"getSyncJobByScope.html\"}",
                "operationId": "getSyncJobByScope",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "scope",
                    "in": "path",
                    "description": "The scope of the synch job.",
                    "required": true,
                    "type": "string",
                    "enum": ["Manual", "Scheduled"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchJobs/state/{state}": {
            "get": {
                "tags": ["synchJobs"],
                "summary": "Returns a collection jobs, specified by the state parameter.",
                "description": "{\"nickname\":\"Retrieve by state\",\"response\":\"getSyncJobByState.html\"}",
                "operationId": "getSyncJobByState",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "state",
                    "in": "path",
                    "description": "The state of the synch job.",
                    "required": true,
                    "type": "string",
                    "enum": ["Pending", "Complete", "Failed", "Cancelled", "Processing"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchJobs/target/{target}": {
            "get": {
                "tags": ["synchJobs"],
                "summary": "Returns a collection jobs, specified by the target parameter.",
                "description": "{\"nickname\":\"Retrieve by target\",\"response\":\"getSyncJobByTarget.html\"}",
                "operationId": "getSyncJobByTarget",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "target",
                    "in": "path",
                    "description": "The target of the synch job.",
                    "required": true,
                    "type": "string",
                    "enum": ["Salesforce"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchJobs/type/{type}": {
            "get": {
                "tags": ["synchJobs"],
                "summary": "Returns a collection jobs, specified by the type parameter.",
                "description": "{\"nickname\":\"Retrieve by type\",\"response\":\"getSyncJobByType.html\"}",
                "operationId": "getSyncJobByType",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "type",
                    "in": "path",
                    "description": "The type of the synch job.",
                    "required": true,
                    "type": "string",
                    "enum": ["Incremental", "Full"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/synchJobs/{synchJob-ID}": {
            "get": {
                "tags": ["synchJobs"],
                "summary": "Returns a single job, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing synch job\",\"response\":\"getSyncJobByID.html\"}",
                "operationId": "getSyncJobByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "synchJob-ID",
                    "in": "path",
                    "description": "ID of the Sync Job.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization -IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/coupon-instances/target-entity/{target}": {
            "get": {
                "tags": ["coupon-instance"],
                "summary": "Returns a collection of coupon-instances, specified by target parameter. By default 10 coupon-instances are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by target type\",\"response\":\"getCouponInstanceByTarget.html\"}",
                "operationId": "getCouponInstanceByTargetType",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "target",
                    "in": "path",
                    "description": "The string target of the coupon-instance.",
                    "required": true,
                    "type": "string",
                    "enum": ["none", "subscription", "account"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first coupon-instance to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of coupon-instances to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired coupon-instances should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponInstance"
                        }
                    }
                }
            }
        },
        "/coupon-instances/target/{target-ID}": {
            "get": {
                "tags": ["coupon-instance"],
                "summary": "Returns a collection of coupon-instances, specified by target-ID parameter. By default 10 coupon-instances are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by target\",\"response\":\"getCouponInstanceByTargetID.html\"}",
                "operationId": "getCouponInstanceByTargetID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "target-ID",
                    "in": "path",
                    "description": "The string target-ID of the coupon-instance.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first coupon-instance to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of coupon-instances to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired coupon-instances should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponInstance"
                        }
                    }
                }
            }
        },
        "/taxation-links/taxation-strategy/{taxation-strategy-ID}": {
            "get": {
                "tags": ["taxation-links"],
                "summary": "Returns a collection of taxation-links, specified by the taxation-strategy-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by taxation strategy\",\"response\":\"getTaxationLinkByTSID.html\"}",
                "operationId": "getTaxationLinkByTaxationStrategy",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "taxation-strategy-ID",
                    "in": "path",
                    "description": "The ID of the taxation-strategy",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/vaulted-gateways/trustCommerce": {
            "post": {
                "tags": ["vaulted-gateways"],
                "summary": "Create a trust-commerce-token.",
                "description": "{\"nickname\":\"Create a trust-commerce-token\",\"request\":\"createTrustCommerceTokenRequest.html\",\"response\":\"TrustCommerceTokenResponse.html\"}",
                "operationId": "createTrustCommerceToken",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "trust-commerce-token",
                    "description": "The trust-commerce-token object to be created.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/configurations/type/{configuration-type}": {
            "get": {
                "tags": ["configurations"],
                "summary": "Returns a single configuration, specified by the type parameter.",
                "description": "{\"nickname\":\"Retrieve by payment gateway\",\"response\":\"getConfigurationByType.html\"}",
                "operationId": "getAPIConfigurationsByType",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "configuration-type",
                    "in": "path",
                    "description": "The unique type of the configuration.",
                    "required": true,
                    "type": "string",
                    "enum": ["Balanced", "Braintree", "Cybersource", "Paypal", "Stripe", "AuthorizeNet", "Spreedly", "SagePay", "TrustCommerce", "Payvision", "Kash"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-components to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/subscriptions/update": {
            "put": {
                "tags": ["subscriptions"],
                "summary": "Update a subscription (V2).",
                "description": "{\"nickname\":\"Update subscription (V2)\",\"response\":\"updateSubscriptionViaHelper.html\",\"request\":\"updateSubscriptionViaHelper.request.html\"}",
                "operationId": "updateSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/UpdateSubscriptionRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/accounts/updated/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["accounts"],
                "summary": "Returns a collection of account objects with updated times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natrual order.",
                "description": "{ \"nickname\" : \"Retrieve by updated\",\"response\" : \"getAccountByUpdated.html\"}",
                "operationId": "getByUpdated",
                "produces": ["text/plain", "application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/analytics/upgrades/{start-datetime}/{end-datetime}": {
            "get": {
                "tags": ["analytics"],
                "summary": "Gets upgrades, within a date range.",
                "description": "{\"nickname\":\"Get upgrades\",\"response\":\"getUpgrades.html\"}",
                "operationId": "getUpgrades",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "start-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "end-datetime",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/accounts/user/{user-ID}": {
            "get": {
                "tags": ["accounts"],
                "summary": "Returns a collection of accounts, specified by the user-ID parameter.  By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"Retrieve by user\", \"response\" : \"getAccountByUserID.html\"}",
                "operationId": "getByUserID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "user-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first account to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of accounts to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/users/username/{username}": {
            "get": {
                "tags": ["users"],
                "summary": "Returns a single User, specified by the username parameter, this is by default the e-mail address of the user.",
                "description": "{ \"nickname\" : \"Retrieve by username\",\"response\" : \"getUserByUsername.html\"}",
                "operationId": "getUserByUsername",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "username",
                    "in": "path",
                    "description": "The unique username of the User.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/webhooks/verify/{verification-ID}": {
            "get": {
                "tags": ["webhooks"],
                "summary": "New webhooks must be verified before use, use the verificationID of the webhook to perform verification.",
                "description": "{\"nickname\":\"Verify a webhook\",\"response\":\"verifyWebhook.html\"}",
                "operationId": "verifyWebhook",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "verification-ID",
                    "in": "path",
                    "description": "verificationID of the webhook.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/invoices/version/{version-ID}": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a single invoice, specified by the version-ID parameter.",
                "description": "{ \"nickname\" : \"Retrieve by version\",\"response\" : \"getInvoiceByVersionID.html\"}",
                "operationId": "getByVersionID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json", "text/xml"],
                "parameters": [{
                    "name": "version-ID",
                    "in": "path",
                    "description": "The version-ID of the invoice.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["taxation-strategies"],
                "summary": "Retires the taxation-strategy specified by taxation-strategy-ID parameter. Only the version of the tax which has an unbounded (null) validTill can be removed. Removing a tax change will make the previous tax come into effect. For example if you have a Tax in January and 5% and a new tax at 7% from February onwards, you can remove the February tax. Remove the February tax will re-instate the January tax.",
                "description": "{\"nickname\":\"Remove a tax change\",\"response\":\"deleteSubscription.html\"}",
                "operationId": "retireTaxationStrategy",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "version-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/pricing-component-value-changes/{ID}": {
            "get": {
                "tags": ["pricing-component-value-changes"],
                "summary": "Returns a single pricing-component-value-changes, specified by the ID parameter.",
                "description": "{ \"nickname\" : \"Retrieve by id\",\"response\" : \"getPricingComponentValueChangeByID.html\"}",
                "operationId": "get",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "ID",
                    "in": "path",
                    "description": "The string ID of the pricing-component-value-change.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InsertableBillingEntity"
                        }
                    }
                }
            }
        },
        "/invoices/{ID}.csv": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a single invoice specified by the ID parameter.",
                "description": "{ \"nickname\" : \"CSV invoice\",\"response\" : \"getInvoiceByID.csv\"}",
                "operationId": "getInvoiceByIDAsCSV",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/csv"],
                "parameters": [{
                    "name": "ID",
                    "in": "path",
                    "description": "The ID of the invoice.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{ID}.html": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a single invoice specified by the ID parameter.",
                "description": "{ \"nickname\" : \"HTML invoice\",\"response\" : \"getInvoiceByID.HTML.html\"}",
                "operationId": "getHTML",
                "consumes": ["text/plain", "application/json"],
                "produces": ["text/html"],
                "parameters": [{
                    "name": "ID",
                    "in": "path",
                    "description": "The ID of the invoice.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }, {
                    "name": "tier_breakdown",
                    "in": "query",
                    "description": "Whether to provide a breakdown of charge tiering.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{ID}.pdf": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieves a single invoice specified by the ID parameter.",
                "description": "{ \"nickname\" : \"PDF Invoice\",\"response\" : \"getInvoiceByID.pdf\"}",
                "operationId": "getPDF",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/pdf"],
                "parameters": [{
                    "name": "ID",
                    "in": "path",
                    "description": "The ID of the invoice.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first invoice to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of invoices to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }, {
                    "name": "tier_breakdown",
                    "in": "query",
                    "description": "Whether to provide a breakdown of charge tiering.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/accounts/{account-ID}": {
            "get": {
                "tags": ["accounts"],
                "summary": "Returns a single account, specified by the account-ID parameter.",
                "description": "{ \"nickname\" : \"Retrieve an existing account\",\"response\" : \"getAccountByID.html\"}",
                "operationId": "getAccountByID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.\t\t\t\t\t\t\t\t   Multiple organization-IDs may be specified by repeated use of the query\t\t\t\t\t\t\t\t   paramter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["accounts"],
                "summary": "Delete the account specified by the account-ID parameter.",
                "description": "{\"nickname\":\"Retire\",\"response\":\"deleteAccount.html\"}",
                "operationId": "deleteAccount",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/accounts/{account-ID}/credit": {
            "get": {
                "tags": ["accounts"],
                "summary": "Returns all available credit-notes for the specified account. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get available credit\",\"response\":\"getAvailableCreditAccount.html\"}",
                "operationId": "getAvailableCreditOnAccount",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "description": "The ID of the account",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            },
            "post": {
                "tags": ["accounts"],
                "summary": "Creates a credit-note which may be used by any subscription of this account.",
                "description": "{\"nickname\":\"Add Credit\",\"request\":\"addCreditNoteToAccountRequest.html\", \"response\":\"addCreditNoteToAccount.html\"}",
                "operationId": "addCreditNoteToAccount",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "description": "ID of the account.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "credit-note",
                    "description": "The credit-note request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreditAccountRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/accounts/{account-ID}/credit/{value}": {
            "delete": {
                "tags": ["accounts"],
                "summary": "Decrease the amount of credit by the value specified or entirely if no value provided.",
                "description": "{\"nickname\":\"Remove Credit\",\"response\":\"removeCreditForAccount.html\"}",
                "operationId": "removeCreditFromAccount",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "value",
                    "in": "path",
                    "description": "<p>Either a credit note ID or a currency value.</p><p>If a credit note ID is provided any remaining credit will be removed from this credit note.</p><p>If a currency value is provided the format should be in the form of valueCurrency, where value is the value to remove. The currency should be an ISO 4217 Currency Code. For example setting the value as 10USD will reduce the credit on this account by $10 or 9.86USD would reduce the credit by $9.86. Note: the value will be reduced from any credit notes with available balance.</p>",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/accounts/{account-ID}/metadata": {
            "get": {
                "tags": ["accounts"],
                "summary": "Retrieve any associated metadata.",
                "description": "{\"nickname\":\"Retrieve metadata on account\",\"request\":\"getAccountMetadataRequest.html\",\"response\":\"getAccountMetadataResponse.html\"}",
                "operationId": "getMetadataForAccount",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "post": {
                "tags": ["accounts"],
                "summary": "Remove any existing metadata keys and create the provided data.",
                "description": "{\"nickname\":\"Set metadata on account\",\"request\":\"setAccountMetadataRequest.html\",\"response\":\"setAccountMetadataResponse.html\"}",
                "operationId": "setMetadataOnAccount",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "put": {
                "tags": ["accounts"],
                "summary": "Update any existing metadata key-values and insert any new key-values, no keys will be removed.",
                "description": "{\"nickname\":\"Upsert metadata on account\",\"request\":\"upsertAccountMetadataRequest.html\",\"response\":\"upsertAccountMetadataResponse.html\"}",
                "operationId": "upsertMetadataOnAccount",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["accounts"],
                "summary": "Remove any associated metadata.",
                "description": "{\"nickname\":\"Clear metadata from account\",\"request\" :\"deleteAccountMetadataRequest.html\",\"response\":\"deleteAccountMetadataResponse.html\"}",
                "operationId": "deleteMetadataFromAccount",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/accounts/{account-ID}/roles": {
            "get": {
                "tags": ["accounts"],
                "summary": "Retrieves a collection of permission groups, specified by the account-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve by account\",\"response\":\"getRoleByAccount.html\"}",
                "operationId": "getPermissions",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/accounts/{account-ID}/roles/{permission-identifier}": {
            "post": {
                "tags": ["accounts"],
                "summary": "Add a permission group to the account",
                "description": "{ \"nickname\" : \"Add Permission\",\"response\" : \"addPermissionToAccount.html\"}",
                "operationId": "addPermission",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "description": "ID of the account.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "permission-identifier",
                    "in": "path",
                    "description": "The permission identifier",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["accounts"],
                "summary": "Revoke the specified permission group.",
                "description": "{\"nickname\":\"Remove Permission Group\",\"response\":\"removePermissionForAccount.html\"}",
                "operationId": "removePermissionFromAccount",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "account-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "permission-identifier",
                    "in": "path",
                    "description": "The name or ID of the Permission Group",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/amendments/{amendment-ID}": {
            "get": {
                "tags": ["amendments"],
                "summary": "Returns a single amendment, specified by the amendment-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing amendment\",\"response\":\"getAmendmentByID.html\"}",
                "operationId": "getAmendmentByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "amendment-ID",
                    "in": "path",
                    "description": "The unique string-ID of the amendment.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Amendment"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["amendments"],
                "summary": "Retires the amendment specified by the amendment-ID parameter. Retiring a amendment causes it to cancel based on the specificed retirement settings for the product.",
                "description": "{\"nickname\":\"Delete an amendment\",\"response\":\"deleteAmendment.html\"}",
                "operationId": "retireAmendment",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "amendment-ID",
                    "in": "path",
                    "description": "ID of the amendment.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Amendment"
                        }
                    }
                }
            }
        },
        "/audit-logs/{audit-ID}": {
            "get": {
                "tags": ["audit-logs"],
                "summary": "Returns a single audit-log entry, specified by the audit-ID parameter.",
                "description": "{\"nickname\":\"Retrieve by id\",\"response\":\"getAuditByID.html\"}",
                "operationId": "getAuditEntryByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "audit-ID",
                    "in": "path",
                    "description": "The string ID of the audit-log entry.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls. Multiple organization-IDs may be specified by repeated use of the query parameter. Example: ...&organizations=org1&organizations=org2",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AuditEntry"
                        }
                    }
                }
            }
        },
        "/charges/{charge-ID}": {
            "get": {
                "tags": ["charges"],
                "summary": "Retrieves a single charge, specified by the id parameter.",
                "description": "{\"nickname\":\"Retrieve a charge\",\"response\":\"getChargeByID.html\"}",
                "operationId": "getSubscriptionChargeByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "charge-ID",
                    "in": "path",
                    "description": "The unique string-ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["charges"],
                "summary": "Void the charge with the specified charge-ID.",
                "description": "{\"nickname\":\"Void charge\",\"response\":\"deleteCharge.html\"}",
                "operationId": "voidSubscriptionCharge",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "charge-ID",
                    "in": "path",
                    "description": "Unique id of the charge.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            }
        },
        "/charges/{charge-ID}/recalculate": {
            "post": {
                "tags": ["charges"],
                "summary": "Recalculate a charge.",
                "description": "{\"nickname\":\"Re-calculate a charge\",\"request\":\"recalculateChargeRequest.html\",\"response\":\"recalculateChargeResponse.html\"}",
                "operationId": "recalculateSubscriptionCharge",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "name": "charge-ID",
                    "in": "path",
                    "description": "Unique id of the charge.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "charge",
                    "description": "The charge to be re-calculated.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/RecalculateChargeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            }
        },
        "/clients/{client-ID}": {
            "get": {
                "tags": ["clients"],
                "summary": "Returns a single client, specified by the client-ID parameter.",
                "description": "{\"nickname\":\"Retrieve by id\",\"response\":\"getClientByID.html\"}",
                "operationId": "getClientByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "client-ID",
                    "in": "path",
                    "description": "The string ID of the client.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                }
            }
        },
        "/coupons/{code}": {
            "get": {
                "tags": ["coupons"],
                "summary": "Returns the coupon for the specified code that can be applied to a subscription.",
                "description": "{ \"nickname\":\"Retrieve coupon\",\"response\":\"getCouponByCode.html\"}",
                "operationId": "getCouponCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "code",
                    "in": "path",
                    "description": "The parent coupon code to use in the generation of the unique codes.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponUniqueCodesResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupons"],
                "summary": "<p>This method has 2 main behaviours depending on what is passed in. If the parent coupon code, for example SUMMER, is given no new coupons can be issued or claimed from this code. Deleting will result in the deleted property being set to true.</p><p>If a unique coupon code, for example SUMMER-AGH8, is given this will stop the coupon from being applied to the subscription from that point onwards. When a coupon is deleted the validUntil property is set which is the date/time it stopped applying to the target.</p>",
                "description": "{ \"nickname\":\"Retire coupon\",\"response\":\"retireCoupon.html\"}",
                "operationId": "retireCoupon",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "code",
                    "in": "path",
                    "description": "ID of the coupon to remove.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupons/{code}/applied": {
            "get": {
                "tags": ["coupons"],
                "summary": "Returns a list of unique coupons which have been applied.",
                "description": "{ \"nickname\":\"Retrieve used unique coupons\",\"response\":\"getAppliedCodesForCode.html\"}",
                "operationId": "getAppliedCoupons",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "code",
                    "in": "path",
                    "description": "The base code to use in the generation of the unique codes.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/coupons/{code}/codes": {
            "get": {
                "tags": ["coupons"],
                "summary": "Returns a list of available unique coupon codes for the specified parent coupon code that can be applied to a subscription.",
                "description": "{ \"nickname\":\"Retrieve unused unique coupons\",\"response\":\"getAvailableCodesForCode.html\"}",
                "operationId": "getAvailableCouponCodesForCode",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "code",
                    "in": "path",
                    "description": "The base code to use in the generation of the unique codes.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponUniqueCodesResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": ["coupons"],
                "summary": "Create a list of unique coupon codes that can be applied to a subscription.",
                "description": "{ \"nickname\":\"Create unique coupon codes\",\"request\":\"createUniqueCodesRequest.html\",\"response\":\"createUniqueCodesResponse.html\"}",
                "operationId": "createCouponUniqueCodes",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "code",
                    "in": "path",
                    "description": "The coupon code to use in the generation of the unique codes.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "The request object that specifies the number of codes to be created.",
                    "required": false,
                    "schema": {
                        "$ref": "#/definitions/CouponUniqueCodesRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponUniqueCodesResponse"
                        }
                    }
                }
            }
        },
        "/coupons/{code}/subscriptions": {
            "get": {
                "tags": ["coupons"],
                "summary": "Retrieves a collection of the coupons by this coupon code which have been applied.",
                "description": "{ \"nickname\":\"Retrieve subscriptions to which the given coupon code has been applied.\",\"response\":\"getSubscriptionApplications.html\"}",
                "operationId": "getSubscriptionApplicationsOfCoupons",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "code",
                    "in": "path",
                    "description": "Base code of the coupon.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/coupon-book/{coupon-book-ID}": {
            "get": {
                "tags": ["coupon-book"],
                "summary": "Returns a single coupon-book, specified by the coupon-book-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing coupon book\",\"response\":\"getCouponBookByID.html\"}",
                "operationId": "getCouponBookByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-book-ID",
                    "in": "path",
                    "description": "ID of the coupon-book.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBook"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupon-book"],
                "summary": "Retire a coupon-book, specified by the coupon-book-ID parameter.",
                "description": "{\"nickname\":\"Delete coupon book\",\"response\":\"deleteCouponBookByID.html\"}",
                "operationId": "deleteCouponBook",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-book-ID",
                    "in": "path",
                    "description": "ID of the coupon-book.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBook"
                        }
                    }
                }
            }
        },
        "/coupon-book-definition/{coupon-book-definition-ID}": {
            "get": {
                "tags": ["coupon-book-definition"],
                "summary": "Returns a single coupon-book-definition, specified by the coupon-book-definition-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing book definition\",\"response\":\"getCouponBookDefinitionByID.html\"}",
                "operationId": "getCouponBookDefinitionByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-book-definition-ID",
                    "in": "path",
                    "description": "ID of the coupon-book-definition.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBookDefinition"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupon-book-definition"],
                "summary": "Retire a coupon-book-definition, specified by the coupon-book-definition-ID parameter.",
                "description": "{\"nickname\":\"Delete book definition\",\"response\":\"deleteCouponBookDefinitionByID.html\"}",
                "operationId": "deleteCouponBookDefinition",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-book-definition-ID",
                    "in": "path",
                    "description": "ID of the coupon-definition.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponBookDefinition"
                        }
                    }
                }
            }
        },
        "/coupon-definition/{coupon-definition-ID}": {
            "get": {
                "tags": ["coupon-definition"],
                "summary": "Returns a single coupon-definition, specified by the coupon-definition-ID parameter.",
                "description": "{\"nickname\":\"Get existing coupon definition\",\"response\":\"getCouponDefinitionByID.html\"}",
                "operationId": "getCouponDefinitionByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-definition-ID",
                    "in": "path",
                    "description": "ID of the coupon-definition.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponDefinition"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupon-definition"],
                "summary": "Retire a coupon-definition, specified by the coupon-definition-ID parameter.",
                "description": "{\"nickname\":\"Delete a definition\",\"response\":\"deleteCouponDefinitionByID.html\"}",
                "operationId": "deleteCouponDefinition",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-definition-ID",
                    "in": "path",
                    "description": "ID of the coupon-definition.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponDefinition"
                        }
                    }
                }
            }
        },
        "/coupon-instance/{coupon-instance-ID}": {
            "get": {
                "tags": ["coupon-instance"],
                "summary": "Returns a single coupon-instance, specified by the coupon-instance-ID parameter.",
                "description": "{\"nickname\":\"Get existing coupon\",\"response\":\"getCouponInstanceByID.html\"}",
                "operationId": "getCouponInstanceByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-instance-ID",
                    "in": "path",
                    "description": "ID of the coupon-instance.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponInstance"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupon-instance"],
                "summary": "Retire a coupon-instance, specified by the coupon-instance-ID parameter.",
                "description": "{\"nickname\":\"Delete a coupon\",\"response\":\"deleteCouponInstanceByID.html\"}",
                "operationId": "deleteCouponInstance",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-instance-ID",
                    "in": "path",
                    "description": "ID of the coupon-instance.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponInstance"
                        }
                    }
                }
            }
        },
        "/coupon-modifier/{coupon-modifier-ID}": {
            "get": {
                "tags": ["coupon-modifier"],
                "summary": "Returns a single coupon-modifier, specified by the coupon-modifier-ID parameter.",
                "description": "{\"nickname\":\"Get existing modifier\",\"response\":\"getCouponModifierByID.html\"}",
                "operationId": "getCouponModifierByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-modifier-ID",
                    "in": "path",
                    "description": "ID of the coupon-modifier.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponModifierBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupon-modifier"],
                "summary": "Retire a coupon-modifier, specified by the coupon-modifier-ID parameter.",
                "description": "{\"nickname\":\"Delete a modifier\",\"response\":\"deleteCouponModifierByID.html\"}",
                "operationId": "deleteCouponModifier",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-modifier-ID",
                    "in": "path",
                    "description": "ID of the coupon-modifier.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponModifierBase"
                        }
                    }
                }
            }
        },
        "/coupon-rule/{coupon-rule-ID}": {
            "get": {
                "tags": ["coupon-rule"],
                "summary": "Returns a single coupon-rule, specified by the coupon-rule-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing rule\",\"response\" : \"getCouponRuleByID.html\"}",
                "operationId": "getCouponRuleByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-rule-ID",
                    "in": "path",
                    "description": "ID of the coupon-rule.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponRule"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["coupon-rule"],
                "summary": "Retire a coupon-rule, specified by the coupon-rule-ID parameter.",
                "description": "{\"nickname\":\"Delete a rule\",\"response\" : \"deleteCouponRuleByID.html\"}",
                "operationId": "deleteCouponRule",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "coupon-rule-ID",
                    "in": "path",
                    "description": "ID of the coupon-rule.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CouponRule"
                        }
                    }
                }
            }
        },
        "/credit-notes/{credit-note-ID}": {
            "get": {
                "tags": ["credit-notes"],
                "summary": "Returns a single credit-note, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing credit note\",\"response\":\"getCreditNoteByID.html\"}",
                "operationId": "getCreditNoteByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "credit-note-ID",
                    "in": "path",
                    "description": "ID of the credit-note.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["credit-notes"],
                "summary": "Removes any remaining value from credit note",
                "description": "{\"nickname\":\"Removes remaining value from credit note\",\"response\":\"deleteCreditNote.html\"}",
                "operationId": "retireCreditNote",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "credit-note-ID",
                    "in": "path",
                    "description": "ID of the credit-note.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/dunning-lines/{dunning-line-ID}": {
            "get": {
                "tags": ["dunning-lines"],
                "summary": "Returns a single dunning-line, specified by the dunning-line-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing dunning line\",\"response\":\"getDunningLineByID.html\"}",
                "operationId": "getDunningLineByID",
                "consumes": ["text/plain"],
                "produces": ["application/json", "text/xml"],
                "parameters": [{
                    "name": "dunning-line-ID",
                    "in": "path",
                    "description": "ID of the dunning-line.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DunningLine"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["dunning-lines"],
                "summary": "Retires the specified dunning-line.",
                "description": "{\"nickname\":\"Delete a dunning line\",\"response\":\"deleteDunningLine.html\"}",
                "operationId": "retireDunningLine",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "dunning-line-ID",
                    "in": "path",
                    "description": "ID of the dunning-line.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DunningLine"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice-ID}": {
            "delete": {
                "tags": ["invoices"],
                "summary": "Voids the invoice specified by the invoice identifier parameter.",
                "description": "{ \"nickname\" : \"Void an invoice\",\"response\" : \"voidInvoice.html\"}",
                "operationId": "voidInvoice",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "description": "ID of the invoice.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice-ID}/charges": {
            "get": {
                "tags": ["invoices"],
                "summary": "Returns all charges for the specified invoice. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"List on invoice\",\"response\":\"getChargesInvoice.html\"}",
                "operationId": "getChargesOnInvoice",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "state",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "enum": ["Voided", "Pending", "AwaitingPayment", "Paid", "Failed"]
                }, {
                    "name": "type",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "enum": ["Setup", "Upgrade", "Manual", "ProductRatePlanMigration", "Arrears", "Advance", "Coupon", "Usage", "PricingComponent"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            },
            "post": {
                "tags": ["invoices"],
                "summary": "Creates a charge on the specified invoice.",
                "description": "{\"nickname\":\"Add to invoice\",\"response\":\"addChargeToInvoice.html\",\"request\":\"addChargeToInvoiceRequest.html\"}",
                "operationId": "addChargeToInvoice",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "description": "ID of the invoice.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "charge",
                    "description": "The charge request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AddChargeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice-ID}/charges/{charge-ID}": {
            "delete": {
                "tags": ["invoices"],
                "summary": "Removes the specified charge from the specified Invoice.",
                "description": "{\"nickname\":\"Remove from invoice\",\"response\":\"deleteChargesInvoice.html\"}",
                "operationId": "removeChargeFromInvoice",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "charge-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice-ID}/execute": {
            "post": {
                "tags": ["invoices"],
                "summary": "Attempt payment for the outstanding value of an invoice",
                "description": "{ \"nickname\" : \"Execute invoice\", \"response\" : \"executeInvoiceResponse.html\", \"request\" : \"ExecuteInvoiceRequest.html\"}",
                "operationId": "execute",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice-ID}/metadata": {
            "get": {
                "tags": ["invoices"],
                "summary": "Retrieve any associated metadata.",
                "description": "{\"nickname\":\"Retrieve metadata on invoice\",\"request\":\"getInvoiceMetadataRequest.html\",\"response\":\"getInvoiceMetadataResponse.html\"}",
                "operationId": "getMetadataFromInvoice",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "post": {
                "tags": ["invoices"],
                "summary": "Remove any existing metadata keys and create the provided data.",
                "description": "{\"nickname\":\"Set metadata on invoice\",\"request\":\"setInvoiceMetadataRequest.html\",\"response\":\"setInvoiceMetadataResponse.html\"}",
                "operationId": "setMetadataOnInvoice",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "put": {
                "tags": ["invoices"],
                "summary": "Update any existing metadata key-values and insert any new key-values, no keys will be removed.",
                "description": "{\"nickname\":\"Upsert metadata on invoice\",\"request\":\"upsertInvoiceMetadataRequest.html\",\"response\":\"upsertInvoiceMetadataResponse.html\"}",
                "operationId": "upsertMetadataOnInvoice",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["invoices"],
                "summary": "Remove any associated metadata.",
                "description": "{\"nickname\":\"Clear metadata from invoice\",\"request\" :\"deleteInvoiceMetadataRequest.html\",\"response\":\"deleteInvoiceMetadataResponse.html\"}",
                "operationId": "removeMetadataFromInvoice",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/invoices/{invoice-ID}/recalculate": {
            "post": {
                "tags": ["invoices"],
                "summary": "Re-calculate an Invoice.",
                "description": "{\"nickname\":\"Re-calculate an invoice\",\"response\":\"recalculateInvoiceResponse.html\",\"request\":\"RecalculateInvoiceRequest.html\"}",
                "operationId": "recalculateInvoice",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "invoice-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/InvoiceRecalculationRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/payment-method-subscription-links/{link-ID}": {
            "delete": {
                "tags": ["payment-method-subscription-links"],
                "summary": "Retires the payment-method-subscription-link specified by the link-ID parameter.",
                "description": "{\"nickname\":\"Remove a payment method from a subscription\",\"response\":\"deletePaymentMethodSubscriptionLink.html\"}",
                "operationId": "retirePaymentMethodSubscriptionLink",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "link-ID",
                    "in": "path",
                    "description": "ID of the link.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodSubscriptionLink"
                        }
                    }
                }
            }
        },
        "/notifications/{lower-threshold}/{upper-threshold}": {
            "get": {
                "tags": ["notifications"],
                "summary": "Returns a collection of notification objects with created times within the period specified by the lower-threshold and upper-threshold parameters. By default 10 values are returned. Records are returned in natrual order.",
                "description": "{\"nickname\":\"Retrieve by creation\",\"response\":\"getNotificationByCreated.html\"}",
                "operationId": "getNotificationsWithinDateRange",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            }
        },
        "/notifications/{lower-threshold}/{upper-threshold}/{webhookID}": {
            "get": {
                "tags": ["notifications"],
                "summary": "Returns a collection of notification objects with created times within the period specified by the lower-threshold and upper-threshold parameters for the given webhook id. By default 10 values are returned. Records are returned in natrual order.",
                "description": "{\"nickname\":\"Retrieve by creation\",\"response\":\"getNotificationByCreated.html\"}",
                "operationId": "getNotificationsByWebhookID",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "lower-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the start of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "upper-threshold",
                    "in": "path",
                    "description": "The UTC DateTime specifying the end of the result period.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "webhookID",
                    "in": "path",
                    "description": "The id of the webhook.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            }
        },
        "/notifications/{notification-ID}": {
            "get": {
                "tags": ["notifications"],
                "summary": "Returns a single notification, specified by the notification-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing notification\",\"response\":\"getNotificationByID.html\"}",
                "operationId": "getNotificationByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "notification-ID",
                    "in": "path",
                    "description": "ID of the notification.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            }
        },
        "/organizations/{organization-ID}": {
            "get": {
                "tags": ["organizations"],
                "summary": "Returns a single Organization, specified by the organization-ID parameter.",
                "description": "{\"nickname\":\"Retrieve by id\",\"response\":\"getOrganizationByID.html\"}",
                "operationId": "getOrganizationByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "organization-ID",
                    "in": "path",
                    "description": "ID of the organization.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/locustworld/{payment-ID}": {
            "get": {
                "tags": ["locustworld"],
                "summary": "Returns a single locustworld payment, specified by the payment-ID parameter.",
                "description": "{\"samples\":[{\"response\":\"getLocustworldByID\"}]}",
                "operationId": "get",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-ID",
                    "in": "path",
                    "description": "The unique sting ID of the locustworld payment.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/payment-methods/{payment-method-ID}": {
            "get": {
                "tags": ["payment-methods"],
                "summary": "Returns a single payment-method, specified by the payment-method-ID parameter.",
                "description": "{\"nickname\":\"Get existing payment method\",\"response\":\"getPaymentMethodByID.html\"}",
                "operationId": "getPaymentMethodByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-method-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["payment-methods"],
                "summary": "Deletes the payment-method specified by the payment-method-ID parameter.",
                "description": "{\"nickname\":\"Delete payment method\",\"response\":\"deletePaymentMethod.html\"}",
                "operationId": "deletePaymentMethod",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "payment-method-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            }
        },
        "/pricing-components/{pricing-component-ID}": {
            "get": {
                "tags": ["pricing-components"],
                "summary": "Returns a collection of pricing-components, specified by the pricing-component-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve an existing pricing-component\",\"response\":\"getPricingComponentsByID.html\"}",
                "operationId": "getPricingComponent",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "pricing-component-ID",
                    "in": "path",
                    "description": "The string ID of the pricing-component.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-components to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PricingComponent"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["pricing-components"],
                "summary": "Retires the pricing-component specified by the pricing-component-ID parameter.",
                "description": "{\"nickname\":\"Delete a pricing-component\"}",
                "operationId": "retirePricingComponent",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "pricing-component-ID",
                    "in": "path",
                    "description": "The string ID of the pricing-component.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PricingComponent"
                        }
                    }
                }
            }
        },
        "/pricing-component-tiers/{pricing-component-tier-ID}": {
            "get": {
                "tags": ["pricing-component-tiers"],
                "summary": "Returns a collection of pricing-component-tier-tiers, specified by the pricing-component-tier-ID parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve an existing tier\",\"response\":\"getPricingComponentTiersByID.html\"}",
                "operationId": "getPricingComponentTier",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "pricing-component-tier-ID",
                    "in": "path",
                    "description": "The string ID of the pricing-component-tier-tier.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component-tier-tier to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-component-tier-tiers to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PricingComponentTier"
                        }
                    }
                }
            }
        },
        "/products/{product-ID}": {
            "get": {
                "tags": ["products"],
                "summary": "Returns a single product, specified by the product-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing product\",\"response\":\"getProductByID.html\"}",
                "operationId": "getProductByID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-ID",
                    "in": "path",
                    "description": "ID or name of the product.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first product-rate-plan to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of product-rate-plans to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["products"],
                "summary": "Deletes the product specified by the product-ID parameter. Any existing subscriptions will continue; it is a soft delete.",
                "description": "{\"nickname\":\"Delete a product\",\"response\":\"deleteProduct.html\"}",
                "operationId": "retireProduct",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-ID",
                    "in": "path",
                    "description": "ID of the Product.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                }
            }
        },
        "/products/{product-ID}/metadata": {
            "get": {
                "tags": ["products"],
                "summary": "Retrieve any associated metadata.",
                "description": "{\"nickname\":\"Retrieve metadata on product\",\"request\":\"getProductMetadataRequest.html\",\"response\":\"getProductMetadataResponse.html\"}",
                "operationId": "getMetadata",
                "consumes": ["application/json", "text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "post": {
                "tags": ["products"],
                "summary": "Remove any existing metadata keys and create the provided data.",
                "description": "{\"nickname\":\"Set metadata on product\",\"request\":\"setProductMetadataRequest.html\",\"response\":\"setProductMetadataResponse.html\"}",
                "operationId": "setMetadataOnProduct",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "product-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "put": {
                "tags": ["products"],
                "summary": "Update any existing metadata key-values and insert any new key-values, no keys will be removed.",
                "description": "{\"nickname\":\"Upsert metadata on product\",\"request\":\"upsertProductMetadataRequest.html\",\"response\":\"upsertProductMetadataResponse.html\"}",
                "operationId": "upsertMetadataForProduct",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "product-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["products"],
                "summary": "Remove any associated metadata.",
                "description": "{\"nickname\":\"Clear metadata from product\",\"request\" :\"deleteProductMetadataRequest.html\",\"response\":\"deleteProductMetadataResponse.html\"}",
                "operationId": "deleteMetadataForProduct",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/product-rate-plans/{product-rate-plan-ID}": {
            "get": {
                "tags": ["product-rate-plans"],
                "summary": "Returns product-rate-plans, specified by the product-rate-plan id or name.",
                "description": "{\"nickname\":\"Retrieve an existing rate-plan\",\"response\":\"getPRPByID.html\"}",
                "operationId": "getProductRatePlanByID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "description": "id or name of the product-rate-plan.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first product-rate-plan to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of product-rate-plans to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductRatePlan"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["product-rate-plans"],
                "summary": "Retires the product-rate-plan specified product-rate-plan-ID.",
                "description": "{\"nickname\":\"Delete a rate-plan\",\"response\":\"deletePRP.html\"}",
                "operationId": "retireRatePlan",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductRatePlan"
                        }
                    }
                }
            }
        },
        "/product-rate-plans/{product-rate-plan-ID}/metadata": {
            "get": {
                "tags": ["product-rate-plans"],
                "summary": "Retrieve any associated metadata.",
                "description": "{\"nickname\":\"Retrieve metadata on rate-plan\",\"request\":\"getRatePlanMetadataRequest.html\",\"response\":\"getRatePlanMetadataResponse.html\"}",
                "operationId": "getMetadataForRatePlan",
                "consumes": ["application/json", "text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "post": {
                "tags": ["product-rate-plans"],
                "summary": "Remove any existing metadata keys and create the provided data.",
                "description": "{\"nickname\":\"Set metadata on rate-plan\",\"request\":\"setRatePlanMetadataRequest.html\",\"response\":\"setRatePlanMetadataResponse.html\"}",
                "operationId": "setMetadataForRatePlan",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "put": {
                "tags": ["product-rate-plans"],
                "summary": "Update any existing metadata key-values and insert any new key-values, no keys will be removed.",
                "description": "{\"nickname\":\"Upsert metadata on rate-plan\",\"request\":\"upsertRatePlanMetadataRequest.html\",\"response\":\"upsertRatePlanMetadataResponse.html\"}",
                "operationId": "upsertMetadataForRatePlan",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["product-rate-plans"],
                "summary": "Remove any associated metadata.",
                "description": "{\"nickname\":\"Clear metadata from rate-plan\",\"request\" :\"deleteRatePlanMetadataRequest.html\",\"response\":\"deleteRatePlanMetadataResponse.html\"}",
                "operationId": "deleteMetadataFromRatePlan",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/product-rate-plans/{product-rate-plan-ID}/tax": {
            "get": {
                "tags": ["product-rate-plans"],
                "summary": "Returns all available taxes for the specified product-rate-plan. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"List taxes\",\"response\":\"getAvailableTaxationStrategies.html\"}",
                "operationId": "getAvailableTaxationStrategiesForRatePlan",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "post": {
                "tags": ["product-rate-plans"],
                "summary": "Adds or re-enables the specified taxation-strategy for the given product-rate-plan.",
                "description": "{\"nickname\":\"Add tax\",\"response\":\"addTaxationStrategy.html\",\"request\":\"addTaxationStrategy.request.html\"}",
                "operationId": "addTaxationStrategyToRatePlan",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "taxationStrategy",
                    "description": "The taxation-strategy",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AddTaxationStrategyRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/product-rate-plans/{product-rate-plan-ID}/tax/{taxation-strategy-ID}": {
            "delete": {
                "tags": ["product-rate-plans"],
                "summary": "Removes the specified taxation-strategy for the given product-rate-plan.",
                "description": "{\"nickname\":\"Remove tax\",\"response\":\"removeTaxationStrategy.html\"}",
                "operationId": "removeTaxationStrategyFromRatePlan",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "product-rate-plan-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "taxation-strategy-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/profiles/{profile-ID}": {
            "get": {
                "tags": ["profiles"],
                "summary": "Returns a single profile, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing profile\",\"response\":\"getProfileByID.html\"}",
                "operationId": "getProfile",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "profile-ID",
                    "in": "path",
                    "description": "ID of the Profile.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                }
            }
        },
        "/search/{query-string}": {
            "get": {
                "tags": ["search"],
                "summary": "Returns the results of the global search specified by the query-string.",
                "description": "{\"nickname\":\"Search an organizations data\",\"response\":\"getSearchByID.html\"}",
                "operationId": "performSearch",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "query-string",
                    "in": "path",
                    "description": "The query string used to search.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "types",
                    "in": "query",
                    "description": "A list of entities which will be checked when searching",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The starting index of the search results.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The number of search results to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "wildcard",
                    "in": "query",
                    "description": "Toggle if we search for full words or whether a wildcard is used.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }, {
                    "name": "entity",
                    "in": "query",
                    "description": "Is an entity returned with the search results.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/receipts/{receipt-ID}": {
            "get": {
                "tags": ["receipts"],
                "summary": "Returns a single receipt, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing receipt\",\"response\":\"getreceiptByID.html\"}",
                "operationId": "getReceiptByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "receipt-ID",
                    "in": "path",
                    "description": "ID of the receipt.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    }
                }
            }
        },
        "/refunds/{refund-ID}": {
            "get": {
                "tags": ["refunds"],
                "summary": "Returns a single refund, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing refund\",\"response\":\"getRefundByID.html\"}",
                "operationId": "getRefundByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "refund-ID",
                    "in": "path",
                    "description": "ID of the Refund.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Refund"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieves a single subscription, specified by the ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing subscription\",\"response\":\"getSubscriptionByID.html\"}",
                "operationId": "getSubscriptionByID",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/advance": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Advance the subscription through time.",
                "description": "{\"nickname\":\"Advance\",\"request\":\"advanceSubscriptionRequest.html\",\"response\":\"advanceSubscription.html\"}",
                "operationId": "advance",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "The request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/TimeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimeResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/applicable-coupons": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieves a collection of the coupons which can be applied to this subscription.",
                "description": "{ \"nickname\" : \"Retrieve applicable coupons\",\"response\" : \"getApplicableCoupons.html\" }",
                "operationId": "getApplicableCoupons",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/cancel": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Retires the subscription specified by the subscription-ID parameter. Retiring a subscription causes it to cancel based on the specified retirement settings for the product.",
                "description": "{\"nickname\":\"Cancel subscription\",\"response\":\"deleteSubscription.html\",\"request\":\"deleteSubscriptionRequest.html\"}",
                "operationId": "cancelSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "subscription-cancellation",
                    "description": "The cancellation request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/charge": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Creates a charge on the specified subscription.",
                "description": "{\"nickname\":\"Add Charge\",\"response\":\"addChargeToSubscriptionRequest.html\",\"response\":\"addChargeToSubscription.html\"}",
                "operationId": "addChargeToSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "charge",
                    "description": "The charge request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AddChargeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/charges": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Returns all charges for the specified subscription. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get charges\",\"response\":\"getChargesSubscription.html\"}",
                "operationId": "getChargesOnSubscription",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "state",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "enum": ["Voided", "Pending", "AwaitingPayment", "Paid", "Failed"]
                }, {
                    "name": "type",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "enum": ["Setup", "Upgrade", "Manual", "ProductRatePlanMigration", "Arrears", "Advance", "Coupon", "Usage", "PricingComponent"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCharge"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/children": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Return all entities whose invoices will be aggregated by the specified subscription By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get Aggregated Entities\",\"response\":\"getAggregatedEntities.html\"}",
                "operationId": "getChildren",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/coupons": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieves a collection of the coupons and the unique codes currently applied to the subscription.",
                "description": "{\"nickname\":\"Retrieve coupons\",\"response\":\"getCoupons.html\"}",
                "operationId": "getCoupons",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            },
            "post": {
                "tags": ["subscriptions"],
                "summary": "Applies a coupon to a subscription.",
                "description": "{\"nickname\":\"Apply coupon\", \"request\":\"addCouponCodeRequest.html\",\"response\":\"addCouponCodeResponse.html\"}",
                "operationId": "addCoupon",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "Request containing the coupon code.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AddCouponCodeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/coupons/{coupon-code}": {
            "delete": {
                "tags": ["subscriptions"],
                "summary": "Removes the coupon from the subscription.",
                "description": "{\"nickname\":\"Remove coupon\",\"response\":\"removeCouponResponse.html\"}",
                "operationId": "removeCoupon",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "coupon-code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/credit": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Returns all available credit-notes for the specified subscription. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Get available credit\",\"response\":\"getAvailableCreditSubscription.html\"}",
                "operationId": "getAvailableCreditSubscription",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired subscriptions should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            },
            "post": {
                "tags": ["subscriptions"],
                "summary": "Creates a credit-note which may be used by only the specified subscription.",
                "description": "{\"nickname\":\"Add Credit\",\"request\":\"addCreditNoteToSubscriptionRequest.html\", \"response\":\"addCreditNoteToSubscription.html\"}",
                "operationId": "addCreditNoteToSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "credit-note",
                    "description": "The credit-note request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreditSubscriptionRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/credit/{value}": {
            "delete": {
                "tags": ["subscriptions"],
                "summary": "Decrease the amount of credit available to the specified subscription.",
                "description": "{\"nickname\":\"Remove Credit\",\"response\":\"removeCreditForSubscription.html\"}",
                "operationId": "removeCreditFromSubscription",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "value",
                    "in": "path",
                    "description": "<p>Either a credit note ID or a currency value.</p><p>If a credit note ID is provided any remaining credit will be removed.</p><p>If a decimal is provided this value will be removed from any credit available to the subscription. For example if the subscription is in USD setting the value as 10 will reduce credit by $10 (USD), setting 9.86  would reduce the credit by $9.86 (USD). The value will be reduced from any credit available.</p>",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreditNote"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/freeze": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Freeze the subscription.",
                "description": "{\"nickname\":\"Freeze\",\"request\":\"freezeSubscriptionRequest.html\",\"response\":\"freezeSubscription.html\"}",
                "operationId": "freeze",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "The request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/PauseRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/invoice-charges": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Invoice any outstanding charges for the subscription.",
                "description": "{\"nickname\":\"Invoice Charges\",\"request\":\"invoiceChargesRequest.html\",\"response\":\"invoiceCharges.html\"}",
                "operationId": "invoiceCharges",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "charge",
                    "description": "The charge request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/InvoiceChargeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/metadata": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieve any associated metadata.",
                "description": "{\"nickname\":\"Retrieve on subscription\",\"request\":\"getSubscriptionMetadataRequest.html\",\"response\":\"getSubscriptionMetadataResponse.html\"}",
                "operationId": "getSubscriptionMetadata",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "post": {
                "tags": ["subscriptions"],
                "summary": "Remove any existing metadata keys and create the provided data.",
                "description": "{\"nickname\":\"Set on subscription\",\"request\":\"setSubscriptionMetadataRequest.html\",\"response\":\"setSubscriptionMetadataResponse.html\"}",
                "operationId": "setSubscriptionMetadata",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "put": {
                "tags": ["subscriptions"],
                "summary": "Update any existing metadata key-values and insert any new key-values, no keys will be removed.",
                "description": "{\"nickname\":\"Upsert on subscription\",\"request\":\"upsertSubscriptionMetadataRequest.html\",\"response\":\"upsertSubscriptionMetadataResponse.html\"}",
                "operationId": "upsertMetadataOnSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "metadata",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["subscriptions"],
                "summary": "Remove any associated metadata.",
                "description": "{\"nickname\":\"Clear from subscription\",\"request\" :\"deleteSubscriptionMetadataRequest.html\",\"response\":\"deleteSubscriptionMetadataResponse.html\"}",
                "operationId": "deleteSubscriptionMetadata",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/migrate": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Migrate the subscription to a new plan.",
                "description": "{\"nickname\":\"Migrate\",\"request\":\"migrateSubscriptionRequest.html\", \"response\":\"migrateSubscription.html\"}",
                "operationId": "migrateSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "The migration request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/MigrationRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/parent": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Return the parent of the given subscription.",
                "description": "{\"nickname\":\"Get parent\",\"response\":\"getParentSubscription.html\"}",
                "operationId": "getParentSubscription",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/payment-methods": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Returns all available payment methods for the specified subscription. By default 10 values are returned. Records are returned in natural order.",
                "description": "{ \"nickname\" : \"List on subscription\",\"response\" : \"getAvailablePaymentMethods.html\"}",
                "operationId": "availablePaymentMethods",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first subscription to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of subscriptions to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "id"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            },
            "post": {
                "tags": ["subscriptions"],
                "summary": "Enables the payment method to pay invoices of this subscription.",
                "description": "{\"nickname\":\"Add payment-method to subscription\",\"response\":\"addPaymentMethod.html\",\"request\":\"addPaymentMethod.request.html\"}",
                "operationId": "addPaymentMethod",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "payment-method",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AddPaymentMethodRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/payment-methods/{payment-method-ID}": {
            "delete": {
                "tags": ["subscriptions"],
                "summary": "Removes the specified payment method for the given subscription.",
                "description": "{\"nickname\":\"Remove payment-method\",\"response\":\"removePaymentMethod.html\",\"request\":\"removePaymentMethod.request.html\"}",
                "operationId": "removePaymentMethod",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "payment-method-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/pricing-component-values": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Sets upon this subscription a new value for the specified pricing-component without performing an upgrade.",
                "description": "{\"nickname\":\"Set values\",\"request\":\"setPricingComponentValuesRequest.html\",\"response\":\"setPricingComponentValues.html\"}",
                "operationId": "setPricingComponentValueOnSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "pricing-component-value",
                    "description": "The pricing-component-value request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/PricingComponentValue"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PricingComponentValue"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/resume": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Resume the frozen subscription.",
                "description": "{\"nickname\":\"Resume\",\"request\":\"resumeSubscriptionRequest.html\",\"response\":\"resumeSubscription.html\"}",
                "operationId": "resume",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "The request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ResumeRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/revive": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Revives a cancelled subscription and returns it to its previous state",
                "description": "{\"nickname\":\"Revive subscription\",\"request\":\"reviveSubscriptionRequest.html\", \"response\":\"reviveSubscription.html\"}",
                "operationId": "reviveSubscription",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "request",
                    "description": "The revive request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/values": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Gets the subscription's current pricing-component values.",
                "description": "{\"nickname\":\"Get values\",\"response\":\"getPricingComponentValues.html\"}",
                "operationId": "getPricingComponentValues",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "description": "ID of the subscription.",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PricingComponentValue"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription-ID}/values/{pricing-component}": {
            "post": {
                "tags": ["subscriptions"],
                "summary": "Upgrades/downgrades this subscription to some new value for the specified pricing-component.",
                "description": "{\"nickname\":\"Set value\",\"request\":\"setPricingComponentValueRequest.html\",\"response\":\"setPricingComponentValue.html\"}",
                "operationId": "setPricingComponentValueOnSubscriptionV2",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "pricing-component",
                    "in": "path",
                    "description": "Name or ID of the pricing-component.",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "value",
                    "description": "The pricing-component-value request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/PricingComponentValueRequest"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["subscriptions"],
                "summary": "Discards from the subscription any scheduled changes in the value of the specified pricing-component.",
                "description": "{\"nickname\":\"Discard value changes\",\"response\":\"removePricingComponentValueChange.html\"}",
                "operationId": "removePricingComponentValueChange",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "pricing-component",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    }
                }
            }
        },
        "/periods/{subscription-id}": {
            "get": {
                "tags": ["periods"],
                "summary": "Retrieve by subscription)",
                "description": "{ \"nickname\" : \"Retrieve by subscription\",\"response\" : \"getPeriodsForSubscription.html\"}",
                "operationId": "getAllPeriodsForSubscription",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-id",
                    "in": "path",
                    "description": "The subscriptionID of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Period"
                        }
                    }
                }
            }
        },
        "/usage-sessions/{subscription-id}/active": {
            "get": {
                "tags": ["usage-sessions"],
                "summary": "Get active by subscription",
                "description": "{\"nickname\":\"Get active by subscription\",\"response\":\"getActiveSessions.html\"}",
                "operationId": "getUsageForUsageSession",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-id",
                    "in": "path",
                    "description": "The subscription-id of the subscription whose active sessions you wish to GET.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UsageSession"
                        }
                    }
                }
            }
        },
        "/usage-periods/{subscription-id}/invoice/{invoice-id}": {
            "get": {
                "tags": ["usage-periods"],
                "summary": "Retrieve by invoice)",
                "description": "{ \"nickname\" : \"Retrieve by invoice\",\"response\" : \"getUsagePeriodForInvoice.html\"}",
                "operationId": "getUsagePeriodForInvoice",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-id",
                    "in": "path",
                    "description": "The subscription-id of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "invoice-id",
                    "in": "path",
                    "description": "The invoice-id of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BillingEntityBase"
                        }
                    }
                }
            }
        },
        "/usage/{subscription-id}/{period-id}": {
            "get": {
                "tags": ["usage"],
                "summary": "Retrieve by subscription and period",
                "description": "{\"nickname\":\"Retrieve by subscription and period\",\"response\":\"getUsageForPeriod.html\"}",
                "operationId": "getUsageByID",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-id",
                    "in": "path",
                    "description": "The subscription-id of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "period-id",
                    "in": "path",
                    "description": "The period-id of the usage.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Usage"
                        }
                    }
                }
            }
        },
        "/usage/{subscription-id}/{uom}/{period-id}/{usage-type}": {
            "get": {
                "tags": ["usage"],
                "summary": "Retrieve by subscription, period and type",
                "description": "{\"nickname\":\"Retrieve by subscription, period and type\",\"response\":\"getDetailedUsageForPeriod.html\"}",
                "operationId": "getUsageBySubscriptionIDUoMPeriodAndUsageType",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscription-id",
                    "in": "path",
                    "description": "The subscription-id of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "uom",
                    "in": "path",
                    "description": "The uom of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "period-id",
                    "in": "path",
                    "description": "The period-id of the usage.",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "usage-type",
                    "in": "path",
                    "description": "The type of the usage.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first amendment to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of amendments to return.",
                    "required": false,
                    "type": "integer",
                    "default": "8766",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "The direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "ASC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Usage"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionID}/invoices/{state}": {
            "get": {
                "tags": ["subscriptions"],
                "summary": "Retrieves a collection of invoice objects of the specified state for the given subscription. By default 10 values are returned. Records are returned in natrual order.",
                "description": "{\"nickname\":\"Retrieve invoices by state for subscription\",\"response\":\"getInvoicesForSubscriptionByState.html\"}",
                "operationId": "getInvoicesByState",
                "consumes": ["text/plain", "application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "subscriptionID",
                    "in": "path",
                    "description": "The unique id of the subscription.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "state",
                    "in": "path",
                    "description": "The state of the invoices to retrieve.",
                    "required": true,
                    "type": "string",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-link to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-links to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                }
            }
        },
        "/taxation-links/{taxation-link-ID}": {
            "get": {
                "tags": ["taxation-links"],
                "summary": "Returns a single taxation-link, specified by the taxation-link-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing taxation link\",\"response\":\"getTaxationLinkByID.html\"}",
                "operationId": "getTaxationLinkByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "taxation-link-ID",
                    "in": "path",
                    "description": "The unique ID of the Taxation Link.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/taxation-strategies/{taxation-strategy-ID}": {
            "get": {
                "tags": ["taxation-strategies"],
                "summary": "Returns the tax currently being applied for the taxation-strategy-ID. To return schedule or historic tax changes the include_retired query parameter should be set to true.",
                "description": "{\"nickname\":\"Retrieve an existing tax \",\"response\":\"getTaxationStrategyByID.html\"}",
                "operationId": "getTaxationStrategyByConsistentID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "taxation-strategy-ID",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first taxation-strategy to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of taxation-strategies to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "false"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/cybersource-tokens/{token-ID}": {
            "get": {
                "tags": ["cybersource-tokens"],
                "summary": "Returns a single cybersource-token, specified by the token-ID parameter.",
                "description": "{\"nickname\":\"NICKNAME\",\"response\":\"getCybersourceTokenByID.html\"}",
                "operationId": "getCybersourceTokenByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "token-ID",
                    "in": "path",
                    "description": "The unique sting ID of the cybersource token.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["cybersource-tokens"],
                "summary": "Retires the cybersource token specified by the token-ID parameter.",
                "description": "{\"nickname\":\"NICKNAME\",\"response\":\"deleteCybersourceToken.html\"}",
                "operationId": "retireCybersourceToken",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "token-ID",
                    "in": "path",
                    "description": "ID of the cybersource-token.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/unit-of-measure/{unit-of-measure-identifier}": {
            "get": {
                "tags": ["unit-of-measure"],
                "summary": "Returns a single unit-of-measure corresponding to the unique id or name specified.",
                "description": "{\"nickname\":\"Retrieve an existing unit of measure\",\"response\":\"getUnitOfMeasureByID.html\"}",
                "operationId": "getUnitOfMeasureByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "unit-of-measure-identifier",
                    "in": "path",
                    "description": "The unique id or name of the unit-of-measure.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/usage-rounding-strategies/{usage-rounding-strategies-ID}": {
            "get": {
                "tags": ["usage-rounding-strategies"],
                "summary": "Returns a collection of usage-rounding-strategies, specified by the usage-rounding-strategies-id parameter. By default 10 values are returned. Records are returned in natural order.",
                "description": "{\"nickname\":\"Retrieve an existing round strategy\",\"response\":\"getUsageRoundingStrategiesByID.html\"}",
                "operationId": "getUsageRoundingStrategyByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "usage-rounding-strategies-ID",
                    "in": "path",
                    "description": "The string ID of the usage-rounding-strategies.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "The offset from the first pricing-component to return.",
                    "required": false,
                    "type": "integer",
                    "default": "0",
                    "format": "int32"
                }, {
                    "name": "records",
                    "in": "query",
                    "description": "The maximum number of pricing-components to return.",
                    "required": false,
                    "type": "integer",
                    "default": "10",
                    "format": "int32"
                }, {
                    "name": "order_by",
                    "in": "query",
                    "description": "Specify a field used to order the result set.",
                    "required": false,
                    "type": "string",
                    "default": "created"
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Ihe direction of any ordering, either ASC or DESC.",
                    "required": false,
                    "type": "string",
                    "default": "DESC",
                    "enum": ["ASC", "DESC"]
                }, {
                    "name": "include_retired",
                    "in": "query",
                    "description": "Whether retired products should be returned.",
                    "required": false,
                    "type": "boolean",
                    "default": "true"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        },
        "/users/{user-ID}": {
            "get": {
                "tags": ["users"],
                "summary": "Returns a single User, specified by the ID parameter.",
                "description": "{ \"nickname\" : \"Retrieve an existing user\",\"response\" : \"getUserByID.html\"}",
                "operationId": "getUserByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "user-ID",
                    "in": "path",
                    "description": "ID of the User.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization -IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["users"],
                "summary": "Retires the user with the specified user-ID.",
                "description": "{ \"nickname\" : \"Delete a user\",\"response\" : \"deleteUser.html\"}",
                "operationId": "retireUser",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "user-ID",
                    "in": "path",
                    "description": "ID of the User.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{user-ID}/password-reset": {
            "get": {
                "tags": ["users"],
                "summary": "Generate a new password reset code.",
                "description": "{ \"nickname\" : \"Reset a users password\",\"response\" : \"userPasswordReset.html\"}",
                "operationId": "resetUserPassword",
                "consumes": ["application/json"],
                "produces": ["text/xml", "application/xml", "application/json"],
                "parameters": [{
                    "name": "user-ID",
                    "in": "path",
                    "description": "ID of the user.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/webhooks/{webhook-ID}": {
            "get": {
                "tags": ["webhooks"],
                "summary": "Returns a single webhook, specified by the webhook-ID parameter.",
                "description": "{\"nickname\":\"Retrieve an existing webhook\",\"response\":\"getWebhookByID.html\"}",
                "operationId": "getWebhookByID",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "webhook-ID",
                    "in": "path",
                    "description": "ID of the webhook.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["webhooks"],
                "summary": "Retires the specified webhook.",
                "description": "{\"nickname\":\"Remove a webhook\",\"response\":\"deleteWebhook.html\"}",
                "operationId": "retireWebhook",
                "consumes": ["text/plain"],
                "produces": ["application/json"],
                "parameters": [{
                    "name": "webhook-ID",
                    "in": "path",
                    "description": "ID of the webhook.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "organizations",
                    "in": "query",
                    "description": "A list of organization-IDs used to restrict the scope of API calls.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MutableBillingEntity"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": ["accountNonExpired", "accountNonLocked", "credentialsNonExpired", "enabled", "id", "organizationID", "password", "passwordResetValidTill", "timezone", "username"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the Organization to which the User belongs.\",\"verbs\":[\"GET\",\"POST\"]}"
                },
                "password": {
                    "type": "array",
                    "description": "{\"description\":\"Passwords associated with the user. A user must have one currently active password to login.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "items": {
                        "$ref": "#/definitions/Password"
                    }
                },
                "username": {
                    "type": "array",
                    "description": "{\"description\":\"Usernames associated with the user. A user may have more than one username currently active. Usernames are enforced to be formatted as e-mail addresses.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "items": {
                        "$ref": "#/definitions/Username"
                    }
                },
                "passwordResetValidTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"The UTC DateTime when a password reset would no longer be valid with the current code.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "bfAdmin": {
                    "type": "boolean",
                    "default": false
                },
                "accountNonExpired": {
                    "type": "boolean",
                    "description": "{\"description\":\"Whether the User has expired.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "accountNonLocked": {
                    "type": "boolean",
                    "description": "{\"description\":\"Is the User locked.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "default": false
                },
                "credentialsNonExpired": {
                    "type": "boolean",
                    "description": "{\"description\":\"Are the User credentials expired.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "default": false
                },
                "enabled": {
                    "type": "boolean",
                    "description": "{\"description\":\"Is the User enabled.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "default": false
                },
                "timezone": {
                    "description": "{\"description\":\"The timezone used when displaying time series data to the user.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "$ref": "#/definitions/TimeZone"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "User",
            "xml": {
                "name": "user"
            }
        },
        "InvoicePayment": {
            "type": "object",
            "required": ["actualAmount", "currency", "gateway", "invoiceID", "nominalAmount", "organizationID", "paymentID", "refundedAmount"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "paymentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the payment used.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the invoice associated with the payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the invoice-payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "currency": {
                    "description": "{ \"description\" : \"The currency of the payment specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "gateway": {
                    "type": "string",
                    "description": "Payment gateway associated with the payment",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                },
                "nominalAmount": {
                    "type": "number",
                    "description": "{ \"description\" : \"The value that this payment-line represents.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "actualAmount": {
                    "type": "number",
                    "description": "{ \"description\" : \"The value of the payment used by payment-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "refundedAmount": {
                    "type": "number",
                    "description": "{ \"description\" : \"The refunded amount of the invoice-payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "An invoice-payment specifies the amount of a particular payment used to pay part or entirety of the outstanding balance of the associated invoice.",
            "xml": {
                "name": "invoicePayments"
            }
        },
        "FlatPricingComponent": {
            "allOf": [{
                "$ref": "#/definitions/PricingComponent"
            }, {
                "type": "object",
                "required": ["chargeModel", "chargeType", "consistentID", "defaultQuantity", "dummyField", "name", "organizationID", "productRatePlan", "productRatePlanID", "unitOfMeasureID", "validFrom"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["TieredPricingComponent", "FlatPricingComponent", "TieredVolumePricingComponent"]
                    },
                    "id": {
                        "type": "string",
                        "xml": {
                            "name": "versionID"
                        },
                        "description": "{ \"description\" : \"Version ID of the pricing-component. Unique ID for each version of a pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "consistentID": {
                        "type": "string",
                        "xml": {
                            "name": "id"
                        },
                        "description": "{ \"description\" : \"ID of the pricing-component. This ID does not change with new versions of the pricing component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] } When associating a pricing component with a product rate plan, this ID should be used."
                    },
                    "productRatePlanID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "unitOfMeasureID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[] }"
                    },
                    "name": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "description": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "chargeType": {
                        "type": "string",
                        "description": "{ \"description\" : \"The charge type of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["setup", "subscription", "arrears", "usage"]
                    },
                    "invoicingType": {
                        "type": "string",
                        "description": "{ \"default\" : \"Aggregated\",  \"description\" : \"For <span class=\\\"label label-default\\\">setup</span> pricing components <span class=\\\"label label-default\\\">Immediate</span> invoicing will result in an invoice being issued on subscription being set to the AwaitingPayment state, irrespective of the subscription start date. <span class=\\\"label label-default\\\">Aggregated</span> invoicing will add a charge to the first invoice of the subscription.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["Immediate", "Aggregated"]
                    },
                    "chargeModel": {
                        "type": "string",
                        "description": "{ \"description\" : \"The charge model of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["flat", "tiered", "tiered_volume"]
                    },
                    "upgradeMode": {
                        "type": "string",
                        "description": "{\"default\":\"<span class=\\\"label label-default\\\">immediate</span>\",\"description\":\"Default behaviour when a value is upgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Upgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Upgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                        "enum": ["immediate", "delayed"]
                    },
                    "downgradeMode": {
                        "type": "string",
                        "description": "{\"default\":\"<span class=\\\"label label-default\\\">delayed</span>\",\"description\":\"Default behaviour when a value is downgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Downgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Downgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                        "enum": ["immediate", "delayed"]
                    },
                    "defaultQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The default quantity of the pricing-component. If no value is supplied on a subscription this value will be used. This is useful for setting an expected purchase level of for introducing new pricing components to existing subscriptions and not having to back-fill values\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "minQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"default\" : \"0\", \"description\" : \"The minimum quantity of the pricing-component.\", \"verbs\":[] }"
                    },
                    "maxQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The maximum quantity of the pricing-component.\", \"verbs\":[] }"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"default\" : \"current time\", \"description\" : \"The DateTime specifying when the pricing-component is valid from.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "validTill": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{  \"default\" : \"null\", \"description\" : \"The UTC DateTime specifying when the pricing-component is valid till.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "tiers": {
                        "type": "array",
                        "description": "{  \"default\" : \"[]\", \"description\" : \"The pricing-component-tiers associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "items": {
                            "$ref": "#/definitions/PricingComponentTier"
                        }
                    },
                    "productRatePlan": {
                        "description": "{ \"description\" : \"The product-rate-plan associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "$ref": "#/definitions/ProductRatePlan"
                    },
                    "componentValue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "crmid": {
                        "type": "string"
                    },
                    "priceExplanation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceExplanationString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "pricingComponent"
                }
            }]
        },
        "CouponInstance": {
            "type": "object",
            "required": ["bookID", "couponBook", "couponDefinition", "couponDefinitionID", "couponInstanceExistingValues", "dateInitialised", "maxRemainingUses", "organizationID", "remainingUses", "subscription", "target", "validTill"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-instance.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "bookID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-book associated with the coupon-instance.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponDefinitionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-definition associated with the coupon-instance.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "targetID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Target ID of the coupon-instance. If the target is subscription, this is the subscription's ID. If the target is account, this is the account's ID.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "target": {
                    "type": "string",
                    "description": "{ \"description\" : \"Ttype of the target for the coupon-instance. Used in combination with the targetID.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["none", "subscription", "account"]
                },
                "couponCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"Code for the coupon. This code can be used to apply coupon-instances to subscriptions or accounts.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "dateInitialised": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime the coupon was initialised.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "validTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime the coupon-instance is valid until.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "remainingUses": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of remaining uses the coupon-instance has left.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "instanceDiscountValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"(Optional) The value to be used for dynamic price calculation, if the coupon definition has an 'instance' or 'instance_percent' coupon modifier. If it is not set, the effect amount of the coupon modifier will be used.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "maxRemainingUses": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of remaining uses the coupon-instance had upon initialisation.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscription": {
                    "description": "{ \"description\" : \"The subscription object associated with the coupon-instance\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Subscription"
                },
                "couponDefinition": {
                    "description": "{ \"description\" : \"The coupon-definition object associated with the coupon-instance\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/CouponDefinition"
                },
                "couponInstanceExistingValues": {
                    "type": "array",
                    "description": "{ \"description\" : \"The collection of coupon-instance-existing-value objects associated with the coupon-instance.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/CouponInstanceExistingValue"
                    }
                },
                "couponBook": {
                    "description": "{ \"description\" : \"The coupon-book object associated with the coupon-instance\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/CouponBook"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "finalPeriod": {
                    "type": "integer",
                    "format": "int32"
                },
                "currentPeriod": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "description": "A coupon-instance.",
            "xml": {
                "name": "couponInstance"
            }
        },
        "SubscriptionCharge": {
            "type": "object",
            "required": ["chargeType", "invoicingType", "remainingCreditBehaviour", "state", "type", "versionNumber"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "crmID": {
                    "type": "string",
                    "description": "{\"description\":\"Customer-relationship-management ID of the charge.\",\"verbs\":[\"GET\",\"PUT\",\"POST\"]}"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the account owning the subscription for which the charge was generated.\",\"verbs\":[\"GET\",\"POST\"]}"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the subscription for which the charge was generated.\",\"verbs\":[\"GET\",\"POST\"]}"
                },
                "subscriptionVersionID": {
                    "type": "string",
                    "description": "{\"description\":\"Version ID of the subscription for which the charge was generated.\",\"verbs\":[\"GET\",\"POST\"]}"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the invoice to which this charge applies (if the charge targets a specific invoice).\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"Friendly name given to the charge to help identify it.\",\"verbs\":[\"POST\",\"GET\",\"PUT\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"description\":\"Description given to the charge.\",\"verbs\":[\"POST\",\"GET\",\"PUT\"]}"
                },
                "amount": {
                    "type": "number",
                    "description": "{\"description\":\"Monetary amount of the charge &mdash; including any tax applied to the final amount.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "amountExcludingTax": {
                    "type": "number",
                    "description": "{\"description\":\"Monetary amount of the charge &mdash; excluding any tax applied to the final amount.\",\"verbs\":[\"GET\"]}"
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the invoice specified by a three character ISO 4217 currency code.\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(Now)\",\"description\":\"The time-beginning of the interval to which the charge applies. This can be used to apply a charge across partial or multiple periods,to pro-rate its price.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "periodEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(End of current period)\",\"description\":\"The time-ending of the interval to which the charge applies. This can be used to apply a charge across partial or multiple periods,to pro-rate its price.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "type": {
                    "type": "string",
                    "description": "{\"description\":\"A type describing the nature of the charge.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Setup", "Upgrade", "Manual", "ProductRatePlanMigration", "Arrears", "Advance", "Coupon", "Usage", "PricingComponent"]
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Aggregated</span>\",\"description\":\"The strategy for how this charge will raise invoices.<br><span class=\\\"label label-default\\\">Immediate</span> &mdash; Generate straight-away an invoice containing this charge.<br><span class=\\\"label label-default\\\">Aggregated</span> &mdash; Add this charge to the next invoice which is generated naturally &mdash; i.e. the invoice raised at the current period's end.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Immediate", "Aggregated"]
                },
                "state": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Pending</span>\",\"description\":\"The current state of the charge.\",\"verbs\":[\"POST\",\"GET\",\"PUT\"]}",
                    "enum": ["Voided", "Pending", "AwaitingPayment", "Paid", "Failed"]
                },
                "chargeType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Debit</span>\",\"description\":\"Whether this charge represents money given to or taken from the customer.<br><span class=\\\"label label-default\\\">Credit</span> &mdash; This is a charge for money given to the customer.<br><span class=\\\"label label-default\\\">Debit</span> &mdash; This is a charge for money taken from the customer.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Credit", "Debit"]
                },
                "calculation": {
                    "type": "string",
                    "description": "{\"default\":\"(Empty string)\",\"description\":\"A human-readable explanation of how the value of the charge was calculated.\",\"verbs\":[\"GET\"]}"
                },
                "remainingCreditBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Rollover</span>\",\"description\":\"Defines the behaviour applied to any outstanding credit resulting from the application of the charge..<br><span class=\\\"label label-default\\\">Rollover</span> &mdash; Outstanding credit is returned to the accounts credit pool.<br><span class=\\\"label label-default\\\">Discard</span> &mdash; Outstanding credit is lost.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Rollover", "Discard"]
                },
                "trial": {
                    "type": "boolean",
                    "description": "{\"default\":\"false\",\"description\":\"(Applicable only if any of [`pricingComponentName`, `pricingComponentID`] are defined)<br>Whether the charge was created for a subscription whilst in a trial period.<br><span class=\\\"label label-default\\\">false</span> &mdash; This is a non-trial charge, so funds will be sought from the customer.<br><span class=\\\"label label-default\\\">true</span> &mdash; This is a trial charge, soThe charge can be considered 'Paid' without taking any funds from the customer.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "versionID": {
                    "type": "string",
                    "description": "{\"description\":\"The version ID of the charge.\",\"verbs\":[\"GET\"]}"
                },
                "versionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"The version number of the charge. The first version of a charge is version number 1.\",\"verbs\":[\"GET\"]}"
                },
                "invoice": {
                    "description": "{\"description\":\"The invoice to which this charge applies (if the charge targets a specific invoice).\",\"verbs\":[\"GET\"]}",
                    "$ref": "#/definitions/Invoice"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Represents a monetary amount &mdash; or quantity consumed &mdash; attributed to some invoice or subscription.",
            "xml": {
                "name": "subscriptionCharge"
            }
        },
        "Payment": {
            "type": "object",
            "required": ["actualValue", "currency", "gateway", "invoiceID", "nominalValue", "organizationID", "paymentMethodID", "refundedValue", "remainingValue", "type"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "paymentMethodID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the payment method associated with the payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the invoice associated with the payment. This may be null when a payment is not explicitly associated with an invoice. Payments may be used across multiple invoices.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "gateway": {
                    "type": "string",
                    "description": "{ \"description\" : \"Payment gateway associated with the payment\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                },
                "currency": {
                    "description": "{ \"description\" : \"The currency of the payment specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "nominalValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"Nominal value of the payment. This is the theoretical value of the payment, thus the value this payment can pay off an invoice. For example a coupon has a nominal value of the discount, and the actual value is zero.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "actualValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"Actual monetary value of the payment. This is real value of the payment amount, thus the amount of currency received for this payment. A coupon has a real value of zero, even though the nominal amount it pays may be greater than zero.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "remainingValue": {
                    "type": "number",
                    "xml": {
                        "name": "remainingNominalValue"
                    },
                    "description": "{ \"description\" : \"Remaining nominal value of the payment not used. In the case when a payment is used across a range of invoices a payment may be used multiple times, each use reducing the available blance of the payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "paymentReceived": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"UTC DateTime specifying when payment was received for the invoice.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "refundedValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"Refunded nominal value of the payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "type": {
                    "type": "string",
                    "description": "{ \"description\" : \"Type of payment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["credit", "debit"]
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Payment",
            "xml": {
                "name": "payment"
            }
        },
        "Seconds": {
            "type": "object",
            "properties": {
                "fieldType": {
                    "$ref": "#/definitions/DurationFieldType"
                },
                "seconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodType": {
                    "$ref": "#/definitions/PeriodType"
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "currencyCode": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "defaultFractionDigits": {
                    "type": "integer",
                    "format": "int32"
                },
                "numericCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "ImportInvoiceLine": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "calculation": {
                    "type": "string"
                },
                "pricingComponent": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "tax": {
                    "type": "number"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "periodEnd": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CreditAccountRequest": {
            "type": "object",
            "required": ["currency", "value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "value": {
                    "type": "number",
                    "description": "{ \"description\" : \" Monetary value of the credit\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the credit\", \"verbs\":[\"POST\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Reference an invoice\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "CreditAccountRequest",
            "xml": {
                "name": "CreditAccountRequest"
            }
        },
        "StripeObject": {
            "type": "object"
        },
        "InvoiceNextExecutionAttemptAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "forcePaid", "internalState", "invoiceID", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "invoiceID": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the Invoice to which the amendment pertains.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "forcePaid": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Create an offline payment and force the invoice into the paid state.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "default": false
                    },
                    "invoices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "description": "Designates when to next attempt execution of an invoice.",
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "Profile": {
            "type": "object",
            "required": ["accountID", "email", "firstName", "lastName", "organizationID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the profile.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "email": {
                    "type": "string",
                    "description": "{ \"description\" : \"E-mail address\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "firstName": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "lastName": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "companyName": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "logoURL": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "addresses": {
                    "type": "array",
                    "description": "{ \"description\" : \"Address associated with the profile\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "mobile": {
                    "type": "string",
                    "description": "{ \"description\" : \"Mobile telephone number\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "landline": {
                    "type": "string",
                    "description": "{ \"description\" : \"Home telephone number\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "fax": {
                    "type": "string",
                    "description": "{ \"description\" : \"Fax number\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "dob": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"Date of birth in YYYY-MM-DD format\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "vatNumber": {
                    "type": "string",
                    "description": "{ \"description\" : \"VAT number\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "additionalInformation": {
                    "type": "string",
                    "description": "{ \"description\" : \"Any additional information\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Profile",
            "xml": {
                "name": "profile"
            }
        },
        "InvoiceChargeRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "includeAggregated": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Outstanding charges for which invoices will be generated:<br><span class=\\\"label label-default\\\">true</span> &mdash; Include charges marked with 'Aggregated' `invoicingType` (i.e. charges that would otherwise be included anyway in the next naturally-occurring invoice)<br><span class=\\\"label label-default\\\">false</span> &mdash; Exclude charges marked with 'Aggregated' `invoicingType` (i.e. prefer that these charges be included instead on the next naturally-occurring invoice).\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "includeInvoicedChargesOnly": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Outstanding charges for which invoices will be generated:<br><span class=\\\"label label-default\\\">true</span> &mdash; Include those charges raised with 'no invoice' specified (i.e. charges against the subscription) &mdash; as well as charges raised against some specific invoice.<br><span class=\\\"label label-default\\\">false</span> &mdash; Include only charges raised against some specific invoice.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "invoiceState": {
                    "type": "string",
                    "description": "{\"default\":null (invoice is raised in its default initial state),\"description\":\"Initial state with which any invoices will be generated.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for generating invoices for a subscription's every outstanding charge."
        },
        "Notification": {
            "type": "object",
            "required": ["ackEnabled", "action", "destinationURL", "domain", "entityID", "format", "organizationID", "state", "webhookID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "domain": {
                    "type": "string",
                    "description": "{ \"description\" : \"The domain of the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "Coupon", "CouponDiscount", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "WebhookSubscription", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "AuthorizeNetToken", "PaypalToken", "SpreedlyToken", "SagePayToken", "TrustCommerceToken", "PayVisionToken", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "SagePayTransaction", "GatewayRevenue", "Migration", "AdhocSubscription", "SubscriptionCharge", "ComponentChange", "Verification", "UsageRoundingStrategies", "PricingComponentValueMigrationChargeAmendmentMapping", "AmendmentDiscardAmendment", "EntityTime", "AggregatingComponent", "PricingComponentMigrationValue", "MetadataKeyValue", "Metadata", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "InvoiceLinePayment", "Unknown"]
                },
                "action": {
                    "type": "string",
                    "description": "{ \"description\" : \"The action associated with the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Accept", "Active", "AwaitingPayment", "AwaitingRefund", "Cancelled", "Completed", "Created", "Error", "Expiring", "Expired", "Failed", "Migrated", "NeedsAmendments", "Paid", "Pending", "Provisioned", "Refunded", "Reject", "Trial", "Unknown", "Unpaid", "Updated", "Voided", "PaymentFailed"]
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "webhookID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Webhook associated with the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "entityID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The id of the entity associated with the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "destinationURL": {
                    "type": "string",
                    "description": "{ \"description\" : \"The URL the notification will be sent to.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "format": {
                    "type": "string",
                    "description": "{ \"description\" : \"Format of the notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["JSON", "XML"]
                },
                "ackEnabled": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"If true notifications will continue to be sent until an acknowledgment is received.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "entity": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "changes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "lastSendAttempt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime of the notifications's last send attempt.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "nextSendAttempt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime of the notification's next send attempt.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "finalSendAttempt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime of the notification's final send attempt.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "totalSendAttempts": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of send attempts for this notification.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"Whether the notification has been sent.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Unsent", "Sending", "Sent"]
                },
                "acked": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the notification was acked if it is ack enabled.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Notification",
            "xml": {
                "name": "notifications"
            }
        },
        "CouponBookDefinition": {
            "type": "object",
            "required": ["couponDefinition", "couponDefinitionID", "definitionValidFrom", "description", "id", "instanceDuration", "maximum", "minimum", "name", "organizationID", "state", "step"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponDefinitionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The unique ID of the coupon-definition associated with the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable name of the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable description of the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "minimum": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The minimum number of coupon-instances a coupon-book can hold.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "maximum": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The maximum number of coupon-instances a coupon-book can hold.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "step": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The stepping parameter between the minimum and the maximum value. E.g. if the minimum is 100, the maximum is 150, and the step is 10, this means the coupon-books can hold 100, 110, 120, 130, 140 or 150 coupon-instances.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "definitionValidFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime that the coupon-book-definition is valid from.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "definitionValidTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime that the coupon-book-definition is valid until.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "instanceDuration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Reserved for future use.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "instanceDurationPeriod": {
                    "type": "string",
                    "description": "{ \"description\" : \"Reserved for future use.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["minutes", "hours", "days", "months", "years"]
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"The current state of the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["development", "production", "deleted"]
                },
                "couponDefinition": {
                    "description": "{ \"description\" : \"The coupon-definition associated with the coupon-book-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/CouponDefinition"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A coupon-book-definition.",
            "xml": {
                "name": "couponBookDefinition"
            }
        },
        "ResumeSubscriptionAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "internalState", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"ResumeSubscriptionAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "description": "Resume a subscription.",
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "TieredPricingComponent": {
            "allOf": [{
                "$ref": "#/definitions/PricingComponent"
            }, {
                "type": "object",
                "required": ["chargeModel", "chargeType", "consistentID", "defaultQuantity", "dummyField", "name", "organizationID", "productRatePlan", "productRatePlanID", "unitOfMeasureID", "validFrom"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["TieredPricingComponent", "FlatPricingComponent", "TieredVolumePricingComponent"]
                    },
                    "id": {
                        "type": "string",
                        "xml": {
                            "name": "versionID"
                        },
                        "description": "{ \"description\" : \"Version ID of the pricing-component. Unique ID for each version of a pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "consistentID": {
                        "type": "string",
                        "xml": {
                            "name": "id"
                        },
                        "description": "{ \"description\" : \"ID of the pricing-component. This ID does not change with new versions of the pricing component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] } When associating a pricing component with a product rate plan, this ID should be used."
                    },
                    "productRatePlanID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "unitOfMeasureID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[] }"
                    },
                    "name": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "description": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "chargeType": {
                        "type": "string",
                        "description": "{ \"description\" : \"The charge type of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["setup", "subscription", "arrears", "usage"]
                    },
                    "invoicingType": {
                        "type": "string",
                        "description": "{ \"default\" : \"Aggregated\",  \"description\" : \"For <span class=\\\"label label-default\\\">setup</span> pricing components <span class=\\\"label label-default\\\">Immediate</span> invoicing will result in an invoice being issued on subscription being set to the AwaitingPayment state, irrespective of the subscription start date. <span class=\\\"label label-default\\\">Aggregated</span> invoicing will add a charge to the first invoice of the subscription.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["Immediate", "Aggregated"]
                    },
                    "chargeModel": {
                        "type": "string",
                        "description": "{ \"description\" : \"The charge model of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["flat", "tiered", "tiered_volume"]
                    },
                    "upgradeMode": {
                        "type": "string",
                        "description": "{\"default\":\"<span class=\\\"label label-default\\\">immediate</span>\",\"description\":\"Default behaviour when a value is upgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Upgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Upgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                        "enum": ["immediate", "delayed"]
                    },
                    "downgradeMode": {
                        "type": "string",
                        "description": "{\"default\":\"<span class=\\\"label label-default\\\">delayed</span>\",\"description\":\"Default behaviour when a value is downgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Downgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Downgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                        "enum": ["immediate", "delayed"]
                    },
                    "defaultQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The default quantity of the pricing-component. If no value is supplied on a subscription this value will be used. This is useful for setting an expected purchase level of for introducing new pricing components to existing subscriptions and not having to back-fill values\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "minQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"default\" : \"0\", \"description\" : \"The minimum quantity of the pricing-component.\", \"verbs\":[] }"
                    },
                    "maxQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The maximum quantity of the pricing-component.\", \"verbs\":[] }"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"default\" : \"current time\", \"description\" : \"The DateTime specifying when the pricing-component is valid from.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "validTill": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{  \"default\" : \"null\", \"description\" : \"The UTC DateTime specifying when the pricing-component is valid till.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "tiers": {
                        "type": "array",
                        "description": "{  \"default\" : \"[]\", \"description\" : \"The pricing-component-tiers associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "items": {
                            "$ref": "#/definitions/PricingComponentTier"
                        }
                    },
                    "productRatePlan": {
                        "description": "{ \"description\" : \"The product-rate-plan associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "$ref": "#/definitions/ProductRatePlan"
                    },
                    "componentValue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "crmid": {
                        "type": "string"
                    },
                    "priceExplanation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceExplanationString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "pricingComponent"
                }
            }]
        },
        "CouponBook": {
            "type": "object",
            "required": ["cost", "couponBookDefinition", "couponBookDefinitionID", "deleted", "id", "maxRemainingCoupons", "maximumCouponUses", "name", "organizationID", "remainingCoupons"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-book.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the  the coupon-book.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponBookDefinitionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-book-definition associated with the coupon-book.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponBookDefinition": {
                    "description": "{ \"description\" : \"The coupon-book-definition associated with the coupon-book.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/CouponBookDefinition"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable name of the coupon-book.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "bookCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"The book code for the coupon-book. This is used to create coupon-instances which are associated with subscriptions.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "cost": {
                    "type": "number",
                    "description": "{ \"description\" : \"The cost of the coupon-book. Can be used to keep track of coupon-book sales.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "remainingCoupons": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of available coupon-instances left in the coupon-book.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "maxRemainingCoupons": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The original number of available coupon-instances that the coupon-book can hold.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "maximumCouponUses": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The maximum number of uses each coupon-instance created from this coupon-book can have.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Has the coupon book been deleted?\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A coupon-book.",
            "xml": {
                "name": "couponBook"
            }
        },
        "InsertableBillingEntity": {
            "type": "object",
            "required": ["applied", "asOf", "consistentPricingComponentID", "invoice", "invoiceID", "mode", "newValue", "oldValue", "organizationID", "state", "subscription", "subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "consistentPricingComponentID": {
                    "type": "string",
                    "xml": {
                        "name": "pricingComponentID"
                    },
                    "description": "{ \"description\" : \"ID of the pricing-component associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "unitOfMeasureID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the unit-of-measure associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the subscription associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the invoice associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The organizationID.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "newValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The new value of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "oldValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The new value of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "mode": {
                    "type": "string",
                    "description": "{ \"description\" : \"The value change mode.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["immediate", "delayed"]
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"The value change state.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["New", "Accepted", "Rejected", "ChargeCreated"]
                },
                "applied": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the pricing-component-value-change was processed.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "asOf": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the pricing-component-value-change was calculated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscription": {
                    "description": "{ \"description\" : \"The subscription object associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Subscription"
                },
                "invoice": {
                    "description": "{ \"description\" : \"The invoice object associated with the pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Invoice"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "discardable": {
                    "type": "boolean",
                    "default": false
                }
            },
            "description": "Insertable entities are those entities that can be created.",
            "xml": {
                "name": "pricingComponentValueChange"
            }
        },
        "EndTrialAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "internalState", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "CompoundUsageSession": {
            "type": "object",
            "required": ["usageSessions"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "usageSessions": {
                    "type": "array",
                    "description": "{ \"description\" : \"Array of Usage Sessions that you wish to operate on.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/UsageSession"
                    }
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization to which these usage sessions belong.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A wrapper for an array of usage sessions.",
            "xml": {
                "name": "CompoundUsageSession"
            }
        },
        "Period": {
            "type": "object",
            "required": ["organizationID", "period", "start", "state", "subscriptionID", "usageType"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the subscription to which this billing period pertains.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with this billing period.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"The current state of this billing period. Initially a period is '\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }ACTIVE_STATE'. Once the 'stop' date is passed, the billing period becomes HISTORIC_STATE.",
                    "enum": ["Active", "Historic"]
                },
                "period": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The incarnation of the subscription to which this billing period refers. The first incarnation of the subscription is in 'period 0'. A recurring subscription may enter 'period 1' and further.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The start date of this billing period, UTC DateTime\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "stop": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The end date of this billing period, UTC DateTime\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "usageType": {
                    "type": "string",
                    "description": "{ \"description\" : \"The type of usage measured within this billing period. Options are '\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }Temporal which refers to time-based usage and Itemized, which refers to one-off usages.",
                    "enum": ["Temporal", "Itemized"]
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Billing period",
            "xml": {
                "name": "period"
            }
        },
        "Environment": {
            "type": "object",
            "properties": {
                "baseURL": {
                    "type": "string"
                },
                "authURL": {
                    "type": "string"
                },
                "certificateFilenames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PauseRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "resume": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(No resumption is scheduled)\",\"description\":\"Schedules the frozen subscription to resume at some time.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for pausing a subscription's flow through time."
        },
        "Password": {
            "type": "object",
            "required": ["active", "organizationID", "password", "user", "userID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the password.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "userID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user associated with the password.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the user\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "password": {
                    "type": "string",
                    "description": "{ \"description\" : \"The password.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "active": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is this the active password.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "user": {
                    "description": "{ \"description\" : \"The user object associated with the password.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/User"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Password",
            "xml": {
                "name": "password"
            }
        },
        "AggregatingComponent": {
            "type": "object",
            "required": ["pricingComponentID", "pricingComponentName", "productRatePlan"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"default\":\"(Auto-populated using your authentication credentials)\",\"description\":\"ID of the BillForward Organization within which the requested pricing component should be created. If omitted: this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the rate plan upon which this AggregatingComponent is defined.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "productRatePlanName": {
                    "type": "string",
                    "description": "{\"description\":\"Name of the rate plan upon which this AggregatingComponent is defined.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the pricing component to which this AggregatingComponent's aggregation applies. The subscriber to the aggregating rate plan (which contains this AggregatingComponent), will consult its children at the end of each billing period, and collect from those children all charges whose pricing component matches this ID. Those charges' quantities will be counted, and used when calculating the price of consuming this AggregatingComponent. The aggregating subscription then raises a discount charge &mdash; to account for the more favourable price tiering that emerges when aggregating.\",\"verbs\":[\"POST\"]}"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{\"description\":\"Name of the pricing component to which this AggregatingComponent's aggregation applies. The subscriber to the aggregating rate plan (which contains this AggregatingComponent), will consult its children at the end of each billing period, and collect from those children all charges whose pricing component matches this ID. Those charges' quantities will be counted, and used when calculating the price of consuming this AggregatingComponent. The aggregating subscription then raises a discount charge &mdash; to account for the more favourable price tiering that emerges when aggregating.\",\"verbs\":[\"POST\"]}"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Whether the AggregatingComponent has been retired.\",\"verbs\":[\"GET\"]}",
                    "default": false
                },
                "productRatePlan": {
                    "description": "{ \"description\" : \"The product-rate-plan associated with the aggregating-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/ProductRatePlan"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "The aggregating component defines a component which should be re-priced upon invoice aggregation"
        },
        "AddChargeRequest": {
            "type": "object",
            "required": ["remainingCreditBehaviour"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{\"description\":\"ID of an existing charge to add to the invoice \",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"Friendly name given to the charge to help identify it.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the invoice specified by a three character ISO 4217 currency code.\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "amount": {
                    "type": "number",
                    "description": "{\"description\":\"Monetary amount for which to charge. Used only for ad-hoc charges i.e charges not associated with any pricing component. Applicable if pricingComponent is NOT defined\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "taxAmount": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Applicable if amount is specified and indicates whether or not to apply tax in addition to the value specified.<br><span class=\\\"label label-default\\\">true</span> &mdash; Tax will be added on top of the nominal price specified in amount &mdash; in accordance with any taxation strategies you have defined.<br><span class=\\\"label label-default\\\">false</span> &mdash; No tax will be applied on top of the price specified in amount.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "periodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"Now\",\"description\":\"Start of the interval to which the charge applies. This can be used to apply a charge across partial or multiple periods. Pro-rating the price of pricingComponents purchased\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "periodEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(End of current period)\",\"description\":\"(Applicable only if `pricingComponent` is defined)<br>End of the interval to which the charge applies. Used in pro-rata calculation\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Aggregated</span>\",\"description\":\"Applicable if adding a charge to the subscription.<br><span class=\\\"label label-default\\\">Immediate</span> &mdash; Generate straight-away an invoice containing these charges.<br><span class=\\\"label label-default\\\">Aggregated</span> &mdash; Add these charges to the next invoice &mdash; for example the invoice raised at the current period's end.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Immediate", "Aggregated"]
                },
                "chargeType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Debit</span>\",\"description\":\"Whether this charge represents an increase or decrease in invoice cost<br><span class=\\\"label label-default\\\">Credit</span> &mdash; This results in a reduction to the invoice cost<br><span class=\\\"label label-default\\\">Debit</span> &mdash; This will increase the invoice cost\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Credit", "Debit"]
                },
                "trial": {
                    "type": "boolean",
                    "description": "{\"default\":\"false\",\"description\":\"Whether the charge is meant in the context of a trial.<br><span class=\\\"label label-default\\\">false</span> &mdash; This is a non-trial charge, so funds will be sought from the customer.<br><span class=\\\"label label-default\\\">true</span> &mdash; This is a trial charge, soThe charge can be considered 'Paid' without taking any funds from the customer.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "remainingCreditBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Rollover</span>\",\"description\":\"Defines the behaviour applied to any outstanding credit resulting from the application of the charge.<br><span class=\\\"label label-default\\\">Rollover</span> &mdash; Outstanding credit is returned to the accounts credit pool.<br><span class=\\\"label label-default\\\">Discard</span> &mdash; Outstanding credit is lost.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Rollover", "Discard"]
                },
                "pricingComponent": {
                    "type": "string",
                    "description": "{\"description\":\"Specifies that this charge is for consumption of some quantity of this pricing component (whose name or ID can be provided).<br>If left blank:<br>The charge will be created as 'ad-hoc'. That is: a monetary lump sum, associated with no pricing component\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "pricingComponentValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"The value consumed of the pricing component which this charge concerns.Required if pricingComponent is defined\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Changes described in the response:<br><span class=\\\"label label-default\\\">true</span> &mdash; Are not actually performed; your subscription remains unchanged, no billing events run, and no invoices are executed.<br><span class=\\\"label label-default\\\">false</span> &mdash; Are actually performed and committed.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for raising a charge against a subscription or invoice."
        },
        "Usage": {
            "type": "object",
            "required": ["organizationID", "pricingComponentID", "pricingComponentName", "sessionID", "start", "subscriptionID", "uom", "usageType"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "sessionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"A (not guaranteed unique) identifier for the session from which this usage was generated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the subscription to which this usage instance pertains.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The ID of the pricing component this usage is for.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{ \"description\" : \"The name of the pricing component this usage is for.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "uom": {
                    "type": "string",
                    "description": "{ \"description\" : \"The unit-of-measure that this usage is for.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The organization associated with this usage instance.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "usagePeriod": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The usage period during which this usage occurred.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "usageDuration": {
                    "type": "integer",
                    "format": "int64",
                    "description": "{ \"description\" : \"The amount of time over which usage occurred (in milliseconds?). Relevant for 'temporal' usage only.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "usageType": {
                    "type": "string",
                    "description": "{ \"description\" : \"The type of usage ('Temporal' or 'Itemized').\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Temporal", "Itemized"]
                },
                "usageValue": {
                    "type": "integer",
                    "format": "int64",
                    "description": "{ \"description\" : \"The quantity of product consumed by this usage. Relevant for 'itemized' usage only.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "detailed": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is this usage a detailed entry?\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "createdBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"Some identifying information about who created this object.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"Some identifying information about who updated this object.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The start date of this usage instance, UTC DateTime\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "stop": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The end date of this usage instance, UTC DateTime\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was updated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "occurred_on": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the usage occurred.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "billing_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the usage is to be billed.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "An instance of usage",
            "xml": {
                "name": "usage"
            }
        },
        "BillingEntityBase": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Billing entities are models in the BillForward system, of objects in the real-world or otherwise."
        },
        "UpdateComponentValueAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "internalState", "pricingComponentID", "pricingComponentValueChangeID", "pricingComponentValueID", "state", "subscriptionID", "value"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"UpdateComponentValueAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "pricingComponentValueID": {
                        "type": "string",
                        "description": "{ \"description\" : \"The consistent ID of the associated pricing-component-value.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "pricingComponentValueChangeID": {
                        "type": "string",
                        "description": "{ \"description\" : \"The unique ID of the associated pricing-component-value-change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "pricingComponentID": {
                        "type": "string",
                        "description": "{ \"description\" : \"The consistent ID of the associated pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The new value of the pricing-component-value\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "InvoiceRecalculationAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "includeInvoicedChargesOnly", "internalState", "invoiceID", "newInvoiceState", "recalculationBehaviour", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"InvoiceRecalculationAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "invoiceID": {
                        "type": "string",
                        "description": "{ \"description\" : \"Identifier of the invoice to recalcaulte\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "recalculationBehaviour": {
                        "type": "string",
                        "description": "{ \"description\" : \"The recalculation behaviour of the invoice\", \"default\" : \"RecalculateAsLatestSubscriptionVersion\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["RecalculateAsLatestSubscriptionVersion", "RecalculateAsCurrentSubscriptionVersion"]
                    },
                    "newInvoiceState": {
                        "type": "string",
                        "description": "{ \"description\" : \"State of invoice once recalculated\", \"default\" : \"Pending\",  \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                    },
                    "includeInvoicedChargesOnly": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Only include charges which are already linked to the invoice being recalculated\", \"default\" : \"Pending\",  \"verbs\":[\"POST\",\"GET\"] }",
                        "default": false
                    },
                    "invoices": {
                        "type": "array",
                        "description": "{ \"description\" : \"List of invoices to recalculate\", \"verbs\":[] }",
                        "items": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "description": "Recalculates the value of an invoice, for example re-evaluating the contribution of its usage-based components.",
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "BFPermission": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                },
                "roleID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "resource": {
                    "type": "string",
                    "description": "{ \"description\" : \"BillForward resource associated with this permission.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "enum": ["All", "Account", "Address", "Amendment", "Analytics", "Audit", "BFAdmin", "BFJS", "Charge", "Client", "Configuration", "CouponBook", "CouponBookDefinition", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "Coupon", "Credit", "CybersourceToken", "Dunning", "FixedTerm", "Gateway", "Invoice", "Notification", "Organization", "Password", "PaymentMethod", "Payment", "Permission", "PricingComponent", "PricingComponentTier", "PricingComponentValueChange", "PricingComponentValue", "ProductRatePlan", "Product", "ProductResources", "Profile", "Quote", "Receipt", "Refund", "Search", "Subscription", "Tax", "UnitOfMeasure", "Usage", "Username", "User", "UserResources", "Webhook"]
                },
                "action": {
                    "type": "string",
                    "description": "{ \"description\" : \"Action they may be performed on the associated resource.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "enum": ["All", "AddToInvoice", "AddToProductRatePlan", "AddToSubscription", "Advance", "RemoveFromInvoice", "RemoveFromProductRatePlan", "RemoveFromSubscription", "Cancel", "Create", "Delete", "Edit", "Execute", "Freeze", "Import", "InvoiceCharges", "Issue", "Migrate", "Read", "Recalculate", "Reset", "Resume", "Revive", "Stop", "Tokenize", "Void"]
                },
                "revoked": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"If a permission is deleted it is set as revoked from this date. The role with this permission will no longer have its applied.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"default\" : \"false\", \"description\" : \"If a permission is deleted the role with this permission will no longer have its applied.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "default": false
                },
                "role": {
                    "$ref": "#/definitions/Role"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "BFPermission"
        },
        "CouponUniqueCodesRequest": {
            "type": "object",
            "required": ["organizationID", "quantity"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\"] }"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of unique codes that will be returned.\", \"verbs\":[\"POST\"] }"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Request object for the creation of unique coupon codes."
        },
        "ComponentCost": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ResumeRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "resume": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(Resume immediately)\",\"description\":\"Schedules the resumption to be actioned at some future time.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Changes described in the response:<br><span class=\\\"label label-default\\\">true</span> &mdash; Are not actually performed; your subscription remains unchanged, no billing events run, and no invoices are executed.<br><span class=\\\"label label-default\\\">false</span> &mdash; Are actually performed and committed.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for resuming a subscription's flow through time."
        },
        "CancellationAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["cancellationCredit", "deleted", "dummyField", "internalState", "serviceEnd", "source", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"CancellationAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "source": {
                        "type": "string",
                        "description": "{ \"description\" : \"Explanation for cancellation\", \"default\" : \"API\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "subscriptionCancellationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[] }"
                    },
                    "serviceEnd": {
                        "type": "string",
                        "description": "{ \"description\" : \"If the serviceEnd parameter is <span class=\\\"label label-default\\\">AtPeriodEnd</span> the cancellation will be delayed till the end of the current period.\", \"default\" : \"AtPeriodEnd\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["Immediate", "AtPeriodEnd"]
                    },
                    "cancellationCredit": {
                        "type": "string",
                        "description": "Specifies whether the service will end immediately on cancellation or if it will continue until the end of the current period. Default: AtPeriodEnd",
                        "enum": ["Credit", "None"]
                    },
                    "subscriptionCancellation": {
                        "description": "{ \"description\" : \"\", \"verbs\":[] }",
                        "$ref": "#/definitions/MutableBillingEntity"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "description": "Cancels a subscription.",
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "GrantedAuthority": {
            "type": "object",
            "properties": {
                "authority": {
                    "type": "string"
                }
            }
        },
        "Receipt": {
            "type": "object",
            "required": ["currency", "invoiceType", "refundID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "invoiceID": {
                    "type": "string"
                },
                "gatewayReferenceID": {
                    "type": "string"
                },
                "accountID": {
                    "type": "string"
                },
                "paymentID": {
                    "type": "string"
                },
                "paymentMethodID": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "cardholderName": {
                    "type": "string"
                },
                "cardLastFour": {
                    "type": "string"
                },
                "cardDescription": {
                    "type": "string"
                },
                "cardCountry": {
                    "type": "string"
                },
                "cardProvince": {
                    "type": "string"
                },
                "cardType": {
                    "type": "string"
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the invoice specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "value": {
                    "type": "number"
                },
                "paymentGateway": {
                    "type": "string",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                },
                "invoiceType": {
                    "type": "string",
                    "description": "{ \"description\" : \"The type of the invoice. A subscription invoice is raised every time a subscription recurs. An amendment is created for intra-contract changes. An Adhoc invoice is created for payment that is taken out-of-band of a subscription. Finally the invoice generated for a trial period is marked as Trial.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Subscription", "Trial", "Charge", "FinalArrears", "Amendment", "Aggregated"]
                },
                "executionAttempt": {
                    "type": "integer",
                    "format": "int32"
                },
                "decision": {
                    "type": "string",
                    "enum": ["Accept", "Reject", "Error"]
                },
                "reasonCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "rawReasonCode": {
                    "type": "string"
                },
                "rawData": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "refundID": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Receipt",
            "xml": {
                "name": "receipt"
            }
        },
        "ProductRatePlan": {
            "type": "object",
            "required": ["createZeroValuedInvoices", "currency", "durationPeriod", "failedPaymentBehaviour", "localisedTax", "migrationBehaviour", "name", "pricingComponents", "proRataMode", "productID", "taxStatus"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "productID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the product to which this rate plan belongs. A product is essentially a collection of rate plans, and describes the service conferred to a customer upon subscription to any of said product's rate plans. The product serves also as a template from which its rate plans can infer default attributes.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "currency": {
                    "description": "{\"description\":\"The currency of the product-rate-plan &mdash; as specified by a three-character ISO 4217 currency code (i.e. USD).\",\"verbs\":[\"POST\",\"GET\"]}",
                    "$ref": "#/definitions/Currency"
                },
                "taxStatus": {
                    "type": "string",
                    "description": "{\"default\":\"inclusive\",\"description\":\"The tax status of the product-rate-plan &mdash; either inclusive or exclusive.<br><span class=\\\"label label-default\\\">exclusive</span>pricing indicates that the cost of the Pricing Components do not include tax; when BillForward generates an Invoice, the tax will be calculated with this price as a base. <br>Tax-<span class=\\\"label label-default\\\">inclusive</span>pricing indicates that the Pricing components include Tax. BillForward will still calculate tax on each invoice. Tax will be calculated from the sales price.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["inclusive", "exclusive"]
                },
                "failedPaymentBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"None\",\"description\":\"The action that should be taken, should an invoice for some subscription to this rate plan remain unpaid despite the dunning period's being exceeded.<br><span class=\\\"label label-default\\\">CancelSubscription</span> &mdash; Demotes the subscription to the `Failed` state as soon as the dunning period is exceeded.<br><span class=\\\"label label-default\\\">None</span> &mdash; The subscription is allowed to continue in the `AwaitingPayment` state indefinitely even if the dunning period is exceeded.For slow payment cycles &mdash; or when manual invoice remediation is common &mdash; <span class=\\\"label label-default\\\">None</span> is recommended.<br>In a heavily-automated SaaS environment, automatic cancellation via <span class=\\\"label label-default\\\">CancelSubscription</span> is recommended.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["CancelSubscription", "None"]
                },
                "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Number of length-measures which constitute the rate plan's period. If left unspecified: the rate plan will use the same `duration` number as the Product to which it belongs.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "durationPeriod": {
                    "type": "string",
                    "description": "{\"description\":\"Measure describing the magnitude of the rate plan's period. If left unspecified: the rate plan will use the same `durationPeriod` magnitude as the Product to which it belongs.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["minutes", "days", "months", "years"]
                },
                "trial": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"default\":0,\"description\":\"Number of trial-length-measures which constitute the rate plan's trial period. If left unspecified: the rate plan will use the same `trial` number as the Product to which it belongs.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "trialPeriod": {
                    "type": "string",
                    "description": "{\"default\":\"none\",\"description\":\"Measure describing the magnitude of the rate plan's trial period. If left unspecified: the rate plan will use the same `trialPeriod` magnitude as the Product to which it belongs.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["none", "minutes", "days", "months"]
                },
                "productType": {
                    "type": "string",
                    "description": "{\"default\":\"recurring\",\"description\":\"The frequency of the rate plan &mdash; either recurring or non-recurring. If left unspecified: the rate plan will use the same `productType` frequency as the Product to which it belongs.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["nonrecurring", "recurring"]
                },
                "proRataMode": {
                    "type": "string",
                    "description": "{\"default\":\"WithCoupon\",\"description\":\"The pro-rata mode for the rate plan. <br><span class=\\\"label label-default\\\">None</span> &mdash; The pro-rata cost for upgrades will be ignored.<br><span class=\\\"label label-default\\\">WithCoupon</span> &mdash; The pro-rata cost for upgrades will be calculated based on the time remaining for the subscription. Discounts from any attached coupons will be deducted from the pro-rated cost.<br><span class=\\\"label label-default\\\">WithoutCoupon</span> &mdash; The pro-rata cost for upgrades will be calculated based on the time remaining for the subscription. Discounts from any attached coupons will not be deducted from the pro-rated cost. \",\"verbs\":[]}",
                    "enum": ["None", "WithCoupon", "WithoutCoupon", "Full"]
                },
                "localisedTax": {
                    "type": "boolean",
                    "description": "{\"default\":\"false\",\"description\":\"Whether the taxes of the rate plan take into account localised taxes.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "createZeroValuedInvoices": {
                    "type": "boolean",
                    "description": "{\"default\":\"true\",\"description\":\"Whether invoices are created if they have a zero valued cost before any discounts are applied.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"A friendly name &mdash; for your benefit &mdash; used to identify this rate plan within some product in BillForward. The name should reflect the fact that this rate plan provides to the customer a price tiering system within which a subscription to its Product can be made. <br>The rate plan's name could describe the nature of its price tiering (e.g. \\\"Default pricing\\\", \\\"Student pricing\\\").<br>Remember also that rate plans can override the timing prescribed by their product. If your rate plan is defined by its overriding the default timing of its product, then that can be reflected in that rate plan's name. (e.g. \\\"Student pricing - Annual\\\").\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "publicName": {
                    "type": "string",
                    "description": "{\"description\":\"A friendly non-unique name used to identify this product\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"The UTC DateTime specifying when the rate plan is valid from.\",\"verbs\":[\"GET\"]}"
                },
                "validTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"The UTC DateTime specifying when the product-rate-plan is valid till.\",\"verbs\":[\"GET\"]}"
                },
                "status": {
                    "type": "string",
                    "description": "{\"description\":\"The current status of the rate plan.\",\"verbs\":[]}"
                },
                "migrationBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"CreditAccount\",\"description\":\"The action that should be taken, should the pro-rata calculation result in a negative value.<br><span class=\\\"label label-default\\\">NoCharge</span> &mdash; Don't return to the customer any money.<br><span class=\\\"label label-default\\\">CreditAccount</span> &mdash; Credit the customer's account with the amount.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["NoCharge", "CreditAccount"]
                },
                "invoiceIssueType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Immediate</span>\",\"description\":\"The strategy for how invoices for this plan will be issued.<br><span class=\\\"label label-default\\\">Immediate</span> &mdash; All generated invoices move immediately to the 'Unpaid' state &mdash; beginning the payment pursuit process.<br><span class=\\\"label label-default\\\">Delayed</span> &mdash; All generated invoices begin in the 'Pending' state. An 'Issue Invoice' amendment is scheduled (based on the rate plan's `issueDuration` and `issuePeriod`) that will move the invoice to the 'Unpaid' state (beginning the payment pursuit process) in accordance with the rate plan's issuance schedule.<br><span class=\\\"label label-default\\\">Manual</span> &mdash; All generated invoices sit in the 'Pending' state &mdash; they will not be issued to the customer unless explicit action is taken. This gives you an opportunity to review or recalculate the invoice.\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Immediate", "Delayed", "Manual"]
                },
                "issueDuration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Number of issue-length-measures between issuance of invoices for this rate plan.\"\"verbs\":[\"POST\",\"GET\"]}"
                },
                "issuePeriod": {
                    "type": "string",
                    "description": "{\"description\":\"Measure describing the magnitude of the invoice issuance period.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["minutes", "days", "months", "years"]
                },
                "taxation": {
                    "type": "array",
                    "description": "{\"description\":\"A list linking taxation strategies to the rate plan.\",\"verbs\":[\"POST\",\"GET\",\"PUT\"]}",
                    "items": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                },
                "fixedTermDefinitions": {
                    "type": "array",
                    "description": "{\"description\":\"A list linking \\\"Fixed-Term Definitions\\\" to the rate plan.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "items": {
                        "$ref": "#/definitions/MutableBillingEntity"
                    }
                },
                "product": {
                    "description": "{\"description\":\"The product to which this rate plan belongs. A product is essentially a collection of rate plans, and describes the service conferred to a customer upon subscription to any of said product's rate plans. The product serves also as a template from which its rate plans can infer default attributes.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "$ref": "#/definitions/Product"
                },
                "pricingComponents": {
                    "type": "array",
                    "description": "{\"description\":\"The pricing-components which describe the price tiering system of this rate plan. A product rate plan may have 1 or more pricing components. Each pricing component represents a different charge associated with the subscription. Pricing components are versioned.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "items": {
                        "$ref": "#/definitions/PricingComponent"
                    }
                },
                "aggregatingComponents": {
                    "type": "array",
                    "description": "{\"default\":\"(empty list)\",\"description\":\"List of AggregatingComponents &mdash; these describe pricing components whose prices should be recalculated upon invoice aggregation. For example: two subscriptions' individual consumptions may be neither of them large enough to achieve bulk-buy discounts. When aggregated, though, the same two subscriptions' consumption may add up to a quantity which does merit a bulk buy discount within your tiering system.\",\"verbs\":[\"POST\"]}",
                    "items": {
                        "$ref": "#/definitions/AggregatingComponent"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "recursionType": {
                    "type": "string",
                    "enum": ["nonrecurring", "recurring"]
                }
            },
            "description": "A rate plan describes a pricing system under which a subscription can be made to a product.",
            "xml": {
                "name": "productRatePlan"
            }
        },
        "Client": {
            "type": "object",
            "required": ["accessTokenValiditySeconds", "additionalInformation", "authorities", "authorizedGrantTypes", "clientSecret", "organization", "organizationID", "refreshTokenValiditySeconds", "resourceIds", "scope"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "clientId": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the OAuth2 client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "{ \"description\" : \"Unique Client Secret of the client. This is used as the OAuth2 Client secret\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "scope": {
                    "type": "array",
                    "description": "{ \"description\" : \"Scopes associated with the client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "resourceIds": {
                    "type": "array",
                    "description": "{ \"description\" : \"Resources associated with the client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "authorizedGrantTypes": {
                    "type": "array",
                    "description": "{ \"description\" : \"Oauth2 Grant Types which may be used when authenticating with the client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "authorities": {
                    "type": "array",
                    "description": "{ \"description\" : \"Authorities associated with the client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/GrantedAuthority"
                    }
                },
                "accessTokenValiditySeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The amount of time in seconds that an access token for the client is valid.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "refreshTokenValiditySeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The amount of time in seconds that a refresh token for the client is valid.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "additionalInformation": {
                    "type": "object",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "organization": {
                    "description": "{ \"description\" : \"The organization associated with the client.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/MutableBillingEntity"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "registeredRedirectUri": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "scoped": {
                    "type": "boolean",
                    "default": false
                },
                "secretRequired": {
                    "type": "boolean",
                    "default": false
                }
            },
            "description": "An oAuth2 client with which BillForward users may authenticate.",
            "xml": {
                "name": "client"
            }
        },
        "CreateSubscriptionRequest": {
            "type": "object",
            "required": ["accountID", "productRatePlan"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the BillForward Account who will own this subscription. You should ensure beforehand that the customer has had a BillForward Account created for them.\",\"verbs\":[\"POST\"]}"
                },
                "productID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the product to which the subscription will be subscribing. If omitted: the product's ID will be inferred from the rate plan -- if and only if the rate plan is specified by ID.\",\"verbs\":[\"POST\"]}"
                },
                "productRatePlan": {
                    "type": "string",
                    "description": "{\"description\":\"ID or name of the rate plan to which the subscription will be subscribing. Lookup by name is only possible if a `productID` is specified.\",\"verbs\":[\"POST\"]}"
                },
                "productRatePlanID": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"default\":\"(Auto-populated using your authentication credentials)\",\"description\":\"ID of the BillForward Organization within which the requested Subscription should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"default\":\"(Subscription will be named after the rate plan to which the subscription subscribes)\",\"description\":\"Name of the created subscription. This is primarily for your benefit &mdash; for example, to enable you to identify subscriptions at a glance in the BillForward web interface (e.g. 'Customer 1425, guy@mail.com, Premium membership').\",\"verbs\":[\"POST\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"default\":\"(null)\",\"description\":\"Description of the created subscription. This is primarily for your benefit &mdash; for example, you could write here the mechanism through which you obtained this customer. (e.g. 'Customer obtained through Lazy Wednesdays promotion').\",\"verbs\":[\"POST\"]}"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(ServerNow upon receiving request)\",\"description\":\"ISO 8601 UTC DateTime (e.g. 2015-06-16T11:58:41Z) describing the date at which the subscription should enter its first service period.\",\"verbs\":[\"POST\"]}"
                },
                "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(1 period ahead of the `start` time)\",\"description\":\"ISO 8601 UTC DateTime (e.g. 2015-06-16T11:58:41Z) describing the date at which the subscription should finish its first service period.\",\"verbs\":[\"POST\"]}"
                },
                "state": {
                    "type": "string",
                    "description": "{\"default\":\"Provisioned\",\"description\":\"The state in which the created subscription will begin.<br><span class=\\\"label label-default\\\">Provisioned</span> &mdash; The subscription will wait (without raising any invoices or beginning its service) until explicit action is taken to change its state.<br><span class=\\\"label label-default\\\">AwaitingPayment</span> &mdash; The subscription is activated. After `start` time is surpassed, it will begin service and raise its first invoice.\",\"verbs\":[\"POST\"]}",
                    "enum": ["Trial", "Provisioned", "Paid", "AwaitingPayment", "Cancelled", "Failed", "Expired"]
                },
                "type": {
                    "type": "string",
                    "enum": ["Subscription", "FixedTerm", "Trial"]
                },
                "parentID": {
                    "type": "string",
                    "description": "{\"default\":\"(If a subscription exists which 'aggregates all subscriptions belonging to this BillForward Account', refer to the ID of that subscription. Otherwise: null)\",\"description\":\"ID of a parent subscription which will collect the charges raised by this subscription. The parent becomes responsible for paying those charges. If a subscription exists which 'aggregates all subscriptions belonging to this BillForward Account', then that parent will override any parent specified here.\",\"verbs\":[\"POST\"]}"
                },
                "aggregateAllSubscriptionsOnAccount": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Whether this subscription should become an 'aggregating subscription', collecting charges (starting now) from all other subscriptions (current and future) belonging to this BillForward Account.\",\"verbs\":[\"POST\"]}",
                    "default": false
                },
                "alignPeriodWithAggregatingSubscription": {
                    "type": "boolean",
                    "description": "{\"default\":true,\"description\":\"Whether to override the `end` date to line up with the current period end of the 'aggregating subscription' to which this subscription belongs.\",\"verbs\":[\"POST\"]}",
                    "default": false
                },
                "pricingComponentQuantities": {
                    "type": "array",
                    "description": "{\"default\":\"(empty list)\",\"description\":\"Quantities that this subscription possesses (upon beginning service), of pricing components upon the subscription's rate plan. For example: you can set the subscription to begin its service with '5 widgets' consumed. Otherwise the 'default quantity' will be observed instead, for each pricing component upon the rate plan.\",\"verbs\":[\"POST\"]}",
                    "items": {
                        "$ref": "#/definitions/BillingEntityBase"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Entity for requesting that a subscription be created."
        },
        "AddPaymentMethodRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "AddPaymentMethodRequest",
            "xml": {
                "name": "AddPaymentMethodRequest"
            }
        },
        "AddCouponCodeRequest": {
            "type": "object",
            "required": ["couponCode"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\"]}"
                },
                "couponCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"The couponCode can be either a unique code or the master code of a coupon.\", \"verbs\":[\"POST\"]}"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "<p> Request object containing the coupon code to be applied to the subscription.There are two choices when specifying the above mentioned code: </p>Unique Code - When specifying an existing unique code, the coupon associated to that code will be applied to the subscription, if it is still available.Master Code   - When specifying the base code of the coupon, an attempt will be made to generate an unique code if there is still availability to do so."
        },
        "UsageSession": {
            "type": "object",
            "required": ["pricingComponentID", "pricingComponentName", "sessionID", "subscriptionID", "uom"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with this session.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the subscription to which this session pertains.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "sessionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"A (not guaranteed unique) identifier for this session, provided by the user. This, when combined with the subscription ID and unit of measure, uniquely identify a session.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the pricing-component to which this usage session applies\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name of the pricing-component to which this usage session applies\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "uom": {
                    "type": "string",
                    "description": "{ \"description\" : \"Unit-of-measure to which this usage session applies\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"A description provided by the user, to record details about this session.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "sessionix": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The current incarnation of the session. Initially 0, this number increments every time the session is 'cut' without ending. For example, a cut is taken of a session if it outlasts the end date of the billing period it started in. The session reincarnates with an incremented sessionix, in the next billing period (that is, if some period indeed follows the current one).\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The start date of this session, UTC DateTime\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "stop": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The end date of this session, UTC DateTime\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"The type of usage measured within this billing period. Options are '\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }Active', Which refers to a session that is currently running 'Historic', Which refers to a session that has terminated.",
                    "enum": ["Active", "Historic"]
                },
                "uduration": {
                    "type": "integer",
                    "format": "int64",
                    "description": "{ \"description\" : \"The amount of time that elapsed (in milliseconds?) during this session. Initially 0. Presently updated only when a cut is taken of the session (for example if the session or billnig period ends).\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "sessionIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "usageDuration": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "description": "A session of usage",
            "xml": {
                "name": "usage-session"
            }
        },
        "CouponUniqueCodesResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "couponCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"A unique code that can be applied to a subscription.\", \"verbs\":[\"POST\"] }"
                },
                "organizationID": {
                    "type": "string"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Response object containing an available unique coupon code."
        },
        "CreditSubscriptionRequest": {
            "type": "object",
            "required": ["value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "value": {
                    "type": "number",
                    "description": "{ \"description\" : \" Monetary value of the credit-note\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Reference an invoice\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "CreditSubscriptionRequest",
            "xml": {
                "name": "CreditSubscriptionRequest"
            }
        },
        "AuthCaptureRequest": {
            "type": "object",
            "required": ["gateway"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the BillForward Account with which you would like to associate the created payment method.<br>If omitted, BillForward will associate the created PaymentMethod with a newly-created Account, whose Profile details will be populated using billing information from the funding instrument.\",\"verbs\":[\"POST\"]}"
                },
                "gateway": {
                    "type": "string",
                    "description": "{\"description\":\"The gateway with which your funding instrument has been vaulted.\",\"verbs\":[\"POST\"]}",
                    "enum": ["Balanced", "Braintree", "Cybersource", "Paypal", "Stripe", "AuthorizeNet", "Spreedly", "SagePay", "TrustCommerce", "Payvision", "Kash"]
                },
                "companyName": {
                    "type": "string",
                    "description": "{\"description\":\"The name of the company of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                },
                "email": {
                    "type": "string",
                    "description": "{\"description\":\"The email address of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                },
                "firstName": {
                    "type": "string",
                    "description": "{\"description\":\"The first name of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                },
                "lastName": {
                    "type": "string",
                    "description": "{\"description\":\"The last name of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                },
                "mobile": {
                    "type": "string",
                    "description": "{\"description\":\"The mobile phone number of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                },
                "defaultPaymentMethod": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Whether the PaymentMethod produced by this request should be elected as the 'default' payment method for the concerned BillForward Account. Whichever PaymentMethod is elected as an Account's default payment method, will be consulted whenever payment is demanded of that Account (i.e. upon the execution of any of the Account's invoices).\",\"verbs\":[\"POST\"]}",
                    "default": false
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the BillForward Organization within which the requested PaymentMethod should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "[Note: this request can be built automatically by our client-side card capture library, <a href=\"https://github.com/billforward/billforward-js\">BillForward.js</a>; you should not need to interact with this API manually unless you have particularly bespoke requirements] This entity is used for requesting that BillForward produce a PaymentMethod, linked to a funding instrument you have vaulted in some payment gateway. The BillForward PaymentMethod will be associated with a BillForward Account of your choosing (or a newly-created Account, if preferred).",
            "xml": {
                "name": "AuthCaptureRequest"
            }
        },
        "Address": {
            "type": "object",
            "required": ["addressLine1", "city", "country", "postcode", "province"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the address.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "profileID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "addressLine1": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "addressLine2": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "addressLine3": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "city": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "province": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "country": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "postcode": {
                    "type": "string",
                    "description": "{ \"description\" : \"ZIP code or postcode.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "landline": {
                    "type": "string",
                    "description": "{ \"description\" : \"Phone number\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "primaryAddress": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is this the primary, default, address for the associated profile?\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "profile": {
                    "$ref": "#/definitions/Profile"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Address",
            "xml": {
                "name": "address"
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"Friendly name of the role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"Friendly description of the role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }"
                },
                "revoked": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"If a role is deleted it is set as revoked from this date. Any account in the role will no longer have its permissions.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"default\" : \"false\", \"description\" : \"If a role is deleted any account in the role will no longer have its permissions.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "default": false
                },
                "defaultRole": {
                    "type": "boolean",
                    "description": "{ \"default\" : \"false\", \"description\" : \"If set this role will become the default role for the organization. Any accounts without an explicitly set role will have this applied.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "default": false
                },
                "defaultReturned": {
                    "type": "boolean",
                    "description": "{ \"default\" : \"false\", \"description\" : \"When returning the list of roles for an account, this indicates if the role was returned due to defaulting.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "default": false
                },
                "permissions": {
                    "type": "array",
                    "description": "{ \"default\" : \"false\", \"description\" : \"List of permissions in this role.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"] }",
                    "items": {
                        "$ref": "#/definitions/BFPermission"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Role"
        },
        "Refund": {
            "type": "object",
            "required": ["actualRefundedValue", "actualValue", "currency", "nominalRefundedValue", "nominalValue", "refundNature", "refundState"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Identifier of account to refund.\", \"verbs\":[\"GET\"] }"
                },
                "reason": {
                    "type": "string",
                    "description": "{ \"description\" : \"The reason for the refund.\", \"verbs\":[\"GET\"] }"
                },
                "nominalValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "value": {
                    "type": "number",
                    "description": "{ \"description\" : \"Positive decimal representing the total value to refund. This is at most the amount un-refunded on the payment. If amount is the total payment amount is refunded.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "refunded": {
                    "type": "number",
                    "description": "{ \"description\" : \"Value refunded\", \"verbs\":[\"GET\"] }"
                },
                "actualValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "nominalRefundedValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"Nominal value refunded.\", \"verbs\":[] }"
                },
                "actualRefundedValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"Refunded amount\", \"verbs\":[] }"
                },
                "refundState": {
                    "type": "string",
                    "description": "{ \"default\" : \"AwaitingRefund\", \"PUT_description\" : \"<span class=\\\"label label-default\\\">Pending</span> refunds can be set to <span class=\\\"label label-default\\\">AwaitingRefund</span> to initiate the refund or <span class=\\\"label label-default\\\">Cancelled</span> to stop the refund.\", \"description\" : \"Initially a refund is in the <span class=\\\"label label-default\\\">AwaitingRefund</span> state. Once the funds are successfully returned the state is <span class=\\\"label label-default\\\">Refunded</span>. If the refund fails or is rejected is it set as <span class=\\\"label label-default\\\">Failed</span>. Refunds can be set to a <span class=\\\"label label-default\\\">Pending</span> state to support authorization flows, and will leave the refund pending until updated to <span class=\\\"label label-default\\\">AwaitingRefund</span>. <span class=\\\"label label-default\\\">Cancelled</span> is when a refund will not be executed.\", \"verbs\":[\"GET\", \"POST\", \"PUT\"] }",
                    "enum": ["Pending", "AwaitingRefund", "Refunded", "Cancelled", "Failed"]
                },
                "refundNature": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">SingleAttempt</span>\",\"description\":The mechanism by which credit is returned to the customer:<br><span class=\\\"label label-default\\\">Void</span> &mdash; The original authorized payment is voided before capture.<br><span class=\\\"label label-default\\\">Refund</span> &mdash; A refund is issued against an already-captured payment.\",\"verbs\":[\"GET\"]}",
                    "enum": ["Refund", "Void"]
                },
                "refundCompleted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"When the refund was completed\", \"verbs\":[\"GET\"] }"
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the refund specified by a three character ISO 4217 currency code.\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "paymentMethodID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Payment method to refund from\", \"verbs\":[\"GET\"] }"
                },
                "invoicePaymentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Invoice payment to refund\", \"verbs\":[\"POST\", \"GET\"] }"
                },
                "refundInvoicePaymentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "originalPaymentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Original payment being refunded.\", \"verbs\":[\"GET\"] }"
                },
                "originalGatewayPaymentReference": {
                    "type": "string",
                    "description": "{ \"description\" : \"Reference in the gateway to the payment being refunded.\", \"verbs\":[\"GET\"] }"
                },
                "refundPaymentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Identifier for the payment used to refund\", \"verbs\":[\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Invoice to refund.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "receiptID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the receipt for this refund.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "originalReceiptID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the receipt for the successful payment that this entity refunds.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "receipt": {
                    "$ref": "#/definitions/Receipt"
                },
                "originalReceipt": {
                    "$ref": "#/definitions/Receipt"
                },
                "refundPayment": {
                    "$ref": "#/definitions/Payment"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": ["InvoicePayment", "Payment"]
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "account": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "refundedValue": {
                    "type": "number"
                }
            },
            "description": "Refund",
            "xml": {
                "name": "refund"
            }
        },
        "ProductRatePlanMigrationAmendment": {
            "type": "object",
            "required": ["deleted", "dummyField", "internalState", "invoicingType", "pricingBehaviour", "productRatePlanID", "state", "subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "dummyField": {
                    "type": "string",
                    "xml": {
                        "name": "@type"
                    },
                    "description": "{ \"description\" : \"ProductRatePlanMigrationAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscription": {
                    "$ref": "#/definitions/Subscription"
                },
                "amendmentType": {
                    "type": "string",
                    "description": "amendmentType",
                    "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                },
                "actioningTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "actionedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "state",
                    "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                },
                "internalState": {
                    "type": "string",
                    "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                    "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Identifier of the rate-plan the subscription to migrate to\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{ \"description\" : \"<span class=\\\"label label-default\\\">Immediate</span> invoicing will result in an invoice being issued immediately for migration charges. <span class=\\\"label label-default\\\">Aggregated</span> invoicing will generate a charge to be added to the next issued invoice, for example at the current billing period end.\",  \"default\" : \"Immediate\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["Immediate", "Aggregated"]
                },
                "mappings": {
                    "type": "array",
                    "description": "{ \"description\" : \"Mapping  of new rate-plans pricing-components to values\", \"verbs\":[\"POST\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/PricingComponentValueMigrationAmendmentMapping"
                    }
                },
                "previousSubscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the previous subscription.\", \"verbs\":[\"GET\"] }"
                },
                "nextSubscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the next subscription.\", \"verbs\":[\"GET\"] }"
                },
                "nextSubscriptionName": {
                    "type": "string",
                    "description": "{ \"description\" : \"User definable friendly name for the migrated subscription.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "nextSubscriptionDescription": {
                    "type": "string",
                    "description": "{ \"description\" : \"User definable description for the migrated subscription.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "pricingBehaviour": {
                    "type": "string",
                    "description": "{ \"description\" : \"Pricing behaviour defines how migration charges are calculated. <span class=\\\"label label-default\\\">DifferenceProRated</span> calculates the difference between in-advance charges of the existing and new rate-plan, then pro-rates based on time remaining. <span class=\\\"label label-default\\\">None</span> sets the migration charge as zero cost. <span class=\\\"label label-default\\\">Full</span> sets the costs as the total of the new rate-plans in-advance charges.  <span class=\\\"label label-default\\\">Difference</span> is the same calculation as <span class=\\\"label label-default\\\">DifferenceProRated</span> but no pro-ration is applied.  <span class=\\\"label label-default\\\">ProRated</span> differs depending on two cases; when moving to a rate-plan of the same duration it pro-rates the in-advance charges of the new rate-plan. If the duration is different, a credit-note will be issued any remaining time on the existing plans billing period.\", \"default\" : \"DifferenceProRated\",  \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["None", "Full", "Difference", "DifferenceProRated", "ProRated"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "discardableSubsystemObject": {
                    "$ref": "#/definitions/IDiscardable"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "discardable": {
                    "type": "boolean",
                    "default": false
                },
                "discardWarningString": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "amendment"
            }
        },
        "AddTaxationStrategyRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "AddTaxationStrategyRequest",
            "xml": {
                "name": "AddTaxationStrategyRequest"
            }
        },
        "CouponDiscount": {
            "type": "object",
            "required": ["coupon", "organizationID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "pricingComponent": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name or ID of the pricing component to apply the discount to. If not set blank discount is applied at the invoice level.\", \"verbs\":[\"POST\"] }"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "unitOfMeasureName": {
                    "type": "string"
                },
                "unitOfMeasureID": {
                    "type": "string"
                },
                "unitsFree": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Number of units that are free for a pricing-component.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "percentageDiscount": {
                    "type": "number",
                    "description": "{ \"description\" : \"Percentage to be discounted\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "cashDiscount": {
                    "type": "number",
                    "description": "{ \"description\" : \"Fixed monetary amount to be discounted\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string"
                },
                "coupon": {
                    "$ref": "#/definitions/Coupon"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "<p> A coupon discount specifies how and what will be deducted from the subscription's invoices. The target of a discount, i.e. an Unit of Measure, Pricing Component or the Invoice itself, depends on the information received: </p><dl class=\"dl-horizontal\"><dt>Pricing Component</dt><dd>One value must be defined between the name and the identifier of the pricing component. </dd><dt>Unit of Measure</dt><dd>One value must be defined between the name and the identifier of the unit of measure but no values for the pricing component.</dd><dt>Invoice</dt> If no values are defined."
        },
        "CreditNote": {
            "type": "object",
            "required": ["accountID", "actualValue", "currency", "nominalValue", "remainingValue", "type", "value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"References an invoice from this credit note. This has no side-effects, such as limited scope of credit note.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Subscription to apply the credit note to. By default credit notes are owned by the account an can be used on any subscription. Providing this value limits the credit-note to only being used on the specified subscription.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "type": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }",
                    "enum": ["invoice", "manual"]
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the credit-note specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "value": {
                    "type": "number",
                    "description": "{ \"description\" : \" Monetary value of the credit-note\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "nominalValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "actualValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "remainingValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"Remaining value of the payment not used. In the case when a credit-note is used across a range of invoices, each use reducing the available blance of the credit note.\", \"verbs\":[\"GET\"] }"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "CreditNote",
            "xml": {
                "name": "creditNote"
            }
        },
        "FixedTerm": {
            "type": "object",
            "required": ["compoundUplift", "deleted", "expiryBehaviour", "expiryTime", "fixedTermDefinition", "fixedTermDefinitionID", "fixedTermNumber", "organizationID", "periods", "productRatePlanAsOfTime", "startTime", "state", "subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"subscriptionID\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscription": {
                    "$ref": "#/definitions/Subscription"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The ID of the organization associated with the amendment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "fixedTermDefinitionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"fixedTermDefinitionID\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "fixedTermDefinition": {
                    "$ref": "#/definitions/MutableBillingEntity"
                },
                "expiryBehaviour": {
                    "type": "string",
                    "description": "fixedTermExpiryBehaviour",
                    "enum": ["ExpireSubscription", "EvergreenSubscription", "RecurUplift", "RecurLatestPricing"]
                },
                "state": {
                    "type": "string",
                    "description": "state",
                    "enum": ["NeedsAmendments", "Active", "Expired"]
                },
                "productRatePlanAsOfTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "productRatePlanAsOfTime"
                },
                "compoundUplift": {
                    "type": "number",
                    "description": "{ \"description\" : \"compoundUplift\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }The proportional INCREASE in price applied every time the fixed terms recur. e.g. 0.03 is a 3% increase. -0.5 is a 50% decrease. 3 is a 300% increase"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "start_time"
                },
                "expiryTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "expiry_time"
                },
                "periods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of billing periods that this fixed term lasts for.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "fixedTermNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of sequential fixed terms previous to this one for the subscription (i.e. zero indexed 'fixedTermCount').\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is the fixedTerm deleted.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "FixedTerm",
            "xml": {
                "name": "fixedTerm"
            }
        },
        "TieredVolumePricingComponent": {
            "allOf": [{
                "$ref": "#/definitions/PricingComponent"
            }, {
                "type": "object",
                "required": ["chargeModel", "chargeType", "consistentID", "defaultQuantity", "dummyField", "name", "organizationID", "productRatePlan", "productRatePlanID", "unitOfMeasureID", "validFrom"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["TieredPricingComponent", "FlatPricingComponent", "TieredVolumePricingComponent"]
                    },
                    "id": {
                        "type": "string",
                        "xml": {
                            "name": "versionID"
                        },
                        "description": "{ \"description\" : \"Version ID of the pricing-component. Unique ID for each version of a pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "consistentID": {
                        "type": "string",
                        "xml": {
                            "name": "id"
                        },
                        "description": "{ \"description\" : \"ID of the pricing-component. This ID does not change with new versions of the pricing component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] } When associating a pricing component with a product rate plan, this ID should be used."
                    },
                    "productRatePlanID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "unitOfMeasureID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[] }"
                    },
                    "name": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "description": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "chargeType": {
                        "type": "string",
                        "description": "{ \"description\" : \"The charge type of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["setup", "subscription", "arrears", "usage"]
                    },
                    "invoicingType": {
                        "type": "string",
                        "description": "{ \"default\" : \"Aggregated\",  \"description\" : \"For <span class=\\\"label label-default\\\">setup</span> pricing components <span class=\\\"label label-default\\\">Immediate</span> invoicing will result in an invoice being issued on subscription being set to the AwaitingPayment state, irrespective of the subscription start date. <span class=\\\"label label-default\\\">Aggregated</span> invoicing will add a charge to the first invoice of the subscription.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["Immediate", "Aggregated"]
                    },
                    "chargeModel": {
                        "type": "string",
                        "description": "{ \"description\" : \"The charge model of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "enum": ["flat", "tiered", "tiered_volume"]
                    },
                    "upgradeMode": {
                        "type": "string",
                        "description": "{\"default\":\"<span class=\\\"label label-default\\\">immediate</span>\",\"description\":\"Default behaviour when a value is upgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Upgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Upgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                        "enum": ["immediate", "delayed"]
                    },
                    "downgradeMode": {
                        "type": "string",
                        "description": "{\"default\":\"<span class=\\\"label label-default\\\">delayed</span>\",\"description\":\"Default behaviour when a value is downgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Downgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Downgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                        "enum": ["immediate", "delayed"]
                    },
                    "defaultQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The default quantity of the pricing-component. If no value is supplied on a subscription this value will be used. This is useful for setting an expected purchase level of for introducing new pricing components to existing subscriptions and not having to back-fill values\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "minQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"default\" : \"0\", \"description\" : \"The minimum quantity of the pricing-component.\", \"verbs\":[] }"
                    },
                    "maxQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "{ \"description\" : \"The maximum quantity of the pricing-component.\", \"verbs\":[] }"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"default\" : \"current time\", \"description\" : \"The DateTime specifying when the pricing-component is valid from.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "validTill": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{  \"default\" : \"null\", \"description\" : \"The UTC DateTime specifying when the pricing-component is valid till.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "tiers": {
                        "type": "array",
                        "description": "{  \"default\" : \"[]\", \"description\" : \"The pricing-component-tiers associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "items": {
                            "$ref": "#/definitions/PricingComponentTier"
                        }
                    },
                    "productRatePlan": {
                        "description": "{ \"description\" : \"The product-rate-plan associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "$ref": "#/definitions/ProductRatePlan"
                    },
                    "componentValue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "crmid": {
                        "type": "string"
                    },
                    "priceExplanation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceExplanationString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "pricingComponent"
                }
            }]
        },
        "CouponModifierBase": {
            "type": "object",
            "required": ["deleted", "domain", "effect", "effectAdditional", "effectAmount", "operand", "organizationID", "precedence", "specifierAmount"],
            "discriminator": "domain",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-modifier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the coupon-modifier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponDefinitionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The unique ID of the coupon-definition associated with the coupon-modifier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "effectAmount": {
                    "type": "number",
                    "description": "{ \"description\" : \"The effect amount for the coupon-modifier. This is affected by the operand field.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "operand": {
                    "type": "string",
                    "description": "{ \"description\" : \"The operand field affects the effect amount of the coupon-modifier. If the operand is fixed, it is an exact amount of the currency defined by the coupon-definition. If the operand is percent, this means the coupon will be affecting a percentage of the unaltered cost. E.g. a 25% modifier will apply a 25% discount on a subscription or a pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["fixed", "percent", "instance_fixed", "instance_percent"]
                },
                "effect": {
                    "type": "string",
                    "description": "{ \"description\" : \"The effect of the coupon-modifier. The coupon-modifier can affect first, last, and cheapest value of a specific unit-of-measure-id for a subscription. The coupon-modifier can also affect all of the values for a unit-of-measure-id, or can affect all of the subscription cost.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["discount_first_units", "discount_last_units", "discount_cheapest_units", "discount_all"]
                },
                "effectAdditional": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Specifies whether the coupon-modifier will be affecting only additional units. If this field is set, the coupon-instance-existing-values for the coupon-instance are observed, and any units of the unit-of-measure-id defined by the modifier below the coupon-instance-existing-values for that unit-of-measure-id will be ignored.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "specifierAmount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The number of units that will be affected by the coupon-modifier, if the domain is set to uom\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "domain": {
                    "type": "string",
                    "description": "{ \"description\" : \"The domain of the coupon-modifier\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["product", "uom", "PricingComponent"]
                },
                "specifier": {
                    "type": "string",
                    "description": "{ \"description\" : \"The specifier is domain-specific. If the domain is uom, this field is used to limit the coupon-modifier to a specific unit-of-measure-id.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "precedence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The precedence of the coupon-modifier. This is used to order application of coupon-modifiers. Higher precedence means the coupon-modifier will be applied before others.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Has the coupon-modifier been deleted.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A coupon-modifier.",
            "xml": {
                "name": "couponModifier"
            }
        },
        "ServiceEndAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "internalState", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "PeriodType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "CouponDefinition": {
            "type": "object",
            "required": ["currency", "customerCode", "definitionValidFrom", "description", "instanceDuration", "instanceDurationPeriod", "modifiers", "name", "organizationID", "rules", "state", "target"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable name of the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable description of the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "customerCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"The customerCode associated with the organization.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "target": {
                    "type": "string",
                    "description": "{ \"description\" : \"The target of the coupon-definition. Currently coupon-definitions can only target products.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["product", "account"]
                },
                "currency": {
                    "description": "{ \"description\" : \"The currency of the coupon-definition specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "definitionValidFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime that the coupon-definition is valid from.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "definitionValidTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime that the coupon-definition is valid until.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "instanceDurationPeriod": {
                    "type": "string",
                    "description": "{ \"description\" : \"instanceDurationPeriod\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["minutes", "hours", "days", "months", "years", "periods"]
                },
                "instanceDuration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"instanceDuration\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "fixedEndDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime specifying the fixed end date of the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"The current state of the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["development", "production", "deleted"]
                },
                "modifiers": {
                    "type": "array",
                    "description": "{ \"description\" : \"The collection of coupon-modifiers associated with the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/CouponModifierBase"
                    }
                },
                "rules": {
                    "type": "array",
                    "description": "{ \"description\" : \"The collection of coupon-rules associated with the coupon-definition.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/CouponRule"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A coupon-definition.",
            "xml": {
                "name": "couponDefinition"
            }
        },
        "InvoiceLinePayment": {
            "type": "object",
            "required": ["accountID", "actualAmount", "currency", "gateway", "gatewayOriginalPaymentReference", "gatewayRefundPaymentReference", "invoice", "invoiceID", "invoiceLine", "invoiceLineID", "invoicePayment", "invoicePaymentID", "nominalAmount", "organizationID", "paymentID", "periodEnd", "periodStart", "pricingComponentID", "pricingComponentName", "productID", "productName", "productRatePlanID", "productRatePlanName", "refundedAmount", "subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the organization associated with the InvoiceLinePayment.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "paymentID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the Payment used upon this InvoiceLinePayment's invoice line.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "gatewayOriginalPaymentReference": {
                    "type": "string",
                    "description": "{\"description\":\"Reference with which the original payment transaction can be looked up in its gateway.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "gatewayRefundPaymentReference": {
                    "type": "string",
                    "description": "{\"description\":\"Reference with which the refund transaction for the payment can be looked up in its gateway.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the invoice to which this InvoiceLinePayment's invoice line belongs.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "invoiceLineID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the invoice line toward which this InvoiceLinePayment contributes payment.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "invoicePaymentID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the InvoicePayment with which this InvoiceLinePayment is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "currency": {
                    "description": "{\"description\":\"The currency of the payment &mdash; specified by a three-character ISO 4217 currency code.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "$ref": "#/definitions/Currency"
                },
                "gateway": {
                    "type": "string",
                    "description": "{\"description\":\"Payment gateway through which the payment was made.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                },
                "nominalAmount": {
                    "type": "number",
                    "description": "{\"description\":\"The amount paid &mdash; through credit or otherwise &mdash; toward this invoice line.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "actualAmount": {
                    "type": "number",
                    "description": "{\"description\":\"The amount paid &mdash; through real money &mdash; toward this invoice line.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "refundedAmount": {
                    "type": "number",
                    "description": "{\"description\":\"The monetary amount refunded toward this invoice line.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the PricingComponent with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{\"description\":\"Name of the PricingComponent with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the ProductRatePlan with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "productRatePlanName": {
                    "type": "string",
                    "description": "{\"description\":\"Internal name of the ProductRatePlan with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "productID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the Product with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "productName": {
                    "type": "string",
                    "description": "{\"description\":\"Internal name of the Product with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the Subscription with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the Account with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"PeriodStart of the charge with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "periodEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"PeriodEnd of the charge with which this InvoiceLinePayment's invoice line is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "invoice": {
                    "description": "{\"description\":\"The invoice with which this InvoiceLinePayment's InvoiceLine is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "$ref": "#/definitions/Invoice"
                },
                "invoiceLine": {
                    "description": "{\"description\":\"The InvoiceLine with which this InvoiceLinePayment is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "$ref": "#/definitions/InvoiceLine"
                },
                "invoicePayment": {
                    "description": "{\"description\":\"The InvoiceLine with which this InvoiceLinePayment is associated.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "$ref": "#/definitions/InvoicePayment"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "An InvoiceLinePayment specifies the amount of a particular invoice payment used to pay part of &mdash; or the entirety of &mdash; the outstanding balance of the associated invoice line.",
            "xml": {
                "name": "invoiceLinePayments"
            }
        },
        "PricingComponentTier": {
            "type": "object",
            "required": ["componentID", "lowerThreshold", "price", "pricingComponent", "pricingType"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the pricing-component-tier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "crmID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "consistentPricingComponentID": {
                    "type": "string",
                    "xml": {
                        "name": "pricingComponentID"
                    },
                    "description": "{ \"description\" : \"ID of the pricing-component associated with the pricing-component-tier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the pricing-component-tier.\", \"verbs\":[] }"
                },
                "lowerThreshold": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The lower threshold of the tier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "upperThreshold": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{  \"default\" : \"&infin;\",  \"description\" : \"The upper threshold of the tier. If this is left null the tier will be infinite\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingType": {
                    "type": "string",
                    "description": "{ \"description\" : \"Pricing calculation used to price items in this pricing tier. Unit pricing means every distinct value is used in the calculation. Fixed means that the total price of the tier is fixed regardless of the purchased amount.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["unit", "fixed"]
                },
                "price": {
                    "type": "number",
                    "description": "{ \"description\" : \"Cost associated with tier. When the pricingType is fixed this is the total value. When pricingType is unit, this is the cost of each unit. \", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingComponent": {
                    "description": "{ \"description\" : \"The pricing-component associated with the tier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/PricingComponent"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "componentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Version ID of the pricing-component associated with the pricing-component-tier.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                }
            },
            "description": "PricingComponentTier",
            "xml": {
                "name": "pricingComponentTier"
            }
        },
        "PendingComponentValueChange": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "format": "int32"
                },
                "at": {
                    "type": "string",
                    "format": "date-time"
                },
                "discardUrl": {
                    "type": "string"
                },
                "discardHttpVerb": {
                    "type": "string"
                }
            }
        },
        "CreateAggregatingSubscriptionRequest": {
            "type": "object",
            "required": ["accountID", "currency"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the BillForward Account who will own this aggregating subscription. You should ensure beforehand that the customer has had a BillForward Account created for them.\",\"verbs\":[\"POST\"]}"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"default\":\"(Auto-populated using your authentication credentials)\",\"description\":\"ID of the BillForward Organization within which the requested Subscription should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"default\":\"(Subscription will be named after the rate plan to which the subscription subscribes)\",\"description\":\"Name of the created subscription. This is primarily for your benefit &mdash; for example, to enable you to identify subscriptions at a glance in the BillForward web interface (e.g. 'BusinessCorp subscriptions, care of Mr Business (mr@busy.com)').\",\"verbs\":[\"POST\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"default\":\"(null)\",\"description\":\"Description of the created subscription. This is primarily for your benefit &mdash; for example, you could write here the mechanism through which you obtained this customer. (e.g. 'Business signed up using BUSYGUYS coupon, at management trade show').\",\"verbs\":[\"POST\"]}"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"default\":\"(ServerNow upon receiving request)\",\"description\":\"ISO 8601 UTC DateTime (e.g. 2015-06-16T11:58:41Z) describing the date at which the subscription should enter its first service period.\",\"verbs\":[\"POST\"]}"
                },
                "state": {
                    "type": "string",
                    "description": "{\"default\":\"Provisioned\",\"description\":\"The state in which the created subscription will begin.<br><span class=\\\"label label-default\\\">Provisioned</span> &mdash; The subscription will wait (without raising any invoices or beginning its service) until explicit action is taken to change its state.<br><span class=\\\"label label-default\\\">AwaitingPayment</span> &mdash; The subscription is activated. After `start` time is surpassed, it will begin service and raise its first invoice.\",\"verbs\":[\"POST\"]}",
                    "enum": ["Trial", "Provisioned", "Paid", "AwaitingPayment", "Cancelled", "Failed", "Expired"]
                },
                "productRatePlan": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the rate plan to which the subscription will be subscribing. If omitted: it will be assumed you wish to create a new rate plan as part of this request &mdash; this subscription will subscribe to that newly-created rate plan.\",\"verbs\":[\"POST\"]}"
                },
                "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"[Required if and only if `productRatePlan` is omitted] Number of length-measures which constitute the rate plan's period.\",\"verbs\":[\"POST\"]}"
                },
                "durationPeriod": {
                    "type": "string",
                    "description": "{\"description\":\"[Required if and only if `productRatePlan` is omitted] Measure describing the magnitude of the rate plan's period.\",\"verbs\":[\"POST\"]}",
                    "enum": ["minutes", "days", "months", "years"]
                },
                "productType": {
                    "type": "string",
                    "description": "{\"description\":\"[Required if and only if `productRatePlan` is omitted] The frequency of the rate plan &mdash; either recurring or non-recurring.\",\"verbs\":[\"POST\"]}",
                    "enum": ["nonrecurring", "recurring"]
                },
                "aggregatingComponents": {
                    "type": "array",
                    "description": "{\"default\":\"(empty list)\",\"description\":\"[Required if and only if `productRatePlan` is omitted] List of components whose prices should be recalculated upon invoice aggregation. For example: two subscriptions' individual consumptions may neither of them be large enough to achieve bulk buy discounts. When aggregated, though, the same two subscriptions' consumption may add up to a quantity which does merit a bulk buy discount within your tiering system.\",\"verbs\":[\"POST\"]}",
                    "items": {
                        "$ref": "#/definitions/CreateAggregatingComponentRequest"
                    }
                },
                "aggregateAllSubscriptionsOnAccount": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Whether this 'aggregating subscription' should collect charges (starting now) from all other subscriptions (current and future) belonging to this BillForward Account.\",\"verbs\":[\"POST\"]}",
                    "default": false
                },
                "currency": {
                    "description": "{\"description\":\"[Required if and only if `productRatePlan` is omitted] The currency of the product-rate-plan &mdash; as specified by a three-character ISO 4217 currency code (i.e. USD).\",\"verbs\":[\"POST\"]}",
                    "$ref": "#/definitions/Currency"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Entity for requesting that an 'aggregating subscription' (i.e. a 'parent subscription' which collects the charges raised by many 'child subscriptions') be created."
        },
        "DurationFieldType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "IssueInvoiceAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "internalState", "invoiceID", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"IssueInvoiceAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "invoiceID": {
                        "type": "string",
                        "description": "{ \"description\" : \"Identifier of invoice to issue\", \"verbs\":[\"POST\",\"GET\"] }"
                    },
                    "invoices": {
                        "type": "array",
                        "description": "{ \"description\" : \"List of invoices to issue.\", \"verbs\":[] }",
                        "items": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "description": "Issues an invoice.",
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "Product": {
            "type": "object",
            "required": ["createZeroValuedInvoices", "deleted", "description", "duration", "durationPeriod", "name", "productType", "trial", "trialPeriod"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"A unique name &mdash; for your benefit &mdash; used to identify this product within BillForward. It should reflect the fact that this product confers some service to a customer (e.g. \\\"Gold membership\\\").<br>The product can also be defined by the frequency with which it recurs (e.g. \\\"Monthly Gold membership\\\").<br>Remember also that rate plans can override the timing prescribed by their product. If you intend to override that timing, you may consider the product's period duration to be an unimportant factor when it comes to naming it.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "publicName": {
                    "type": "string",
                    "description": "{\"description\":\"A friendly non-unique name used to identify this product\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"description\":\"A description &mdash; for your benefit &mdash; of the product. For example: you could explain what service this product entitles a customer to.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "duration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Number of length-measures which constitute the product's period.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "durationPeriod": {
                    "type": "string",
                    "description": "{\"description\":\"Measure describing the magnitude of the product's period.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["minutes", "days", "months", "years"]
                },
                "trial": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"default\":0,\"description\":\"Number of trial-length-measures which constitute the product's trial period\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "trialPeriod": {
                    "type": "string",
                    "description": "{\"default\":\"none\",\"description\":\"Measure describing the magnitude of the product's trial period.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["none", "minutes", "days", "months"]
                },
                "productType": {
                    "type": "string",
                    "description": "{\"default\":\"recurring\",\"description\":\"The frequency of the product &mdash; either recurring or non-recurring.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["nonrecurring", "recurring"]
                },
                "createZeroValuedInvoices": {
                    "type": "boolean",
                    "description": "{\"default\":\"true\",\"description\":\"Whether invoices are created if they have a zero valued cost before any discounts are applied.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{\"description\":\"\",\"verbs\":[\"GET\"]}",
                    "default": false
                },
                "getstartDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"\",\"verbs\":[]}"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Product",
            "xml": {
                "name": "product"
            }
        },
        "Event": {
            "type": "object",
            "required": ["created", "data", "id", "livemode", "pendingWebhooks", "request", "type", "userId"],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "xml": {
                        "name": "user_id"
                    }
                },
                "livemode": {
                    "type": "boolean",
                    "default": false
                },
                "created": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/EventData"
                },
                "pendingWebhooks": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "name": "pending_webhooks"
                    }
                },
                "request": {
                    "type": "string"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "required": ["accountID", "costExcludingTax", "creditRolledOver", "currency", "deleted", "initialInvoice", "invoiceCost", "nonDiscountedCost", "nonDiscountedCostExcludingTax", "organizationID", "state", "subscriptionVersionID", "type", "versionNumber"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "versionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Version identifier of the invoice.\", \"verbs\":[\"GET\"] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the invoice.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "subscriptionVersionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "parentInvoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"The name of the invoice\", \"verbs\":[] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"The description of the invoice\", \"verbs\":[] }"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"Initially an invoice is set as unpaid. Once payment for the full value of the invoice has been received it is marked as paid. An invoice may be paid from various sources including cards, coupons or manual payments.\", \"verbs\":[\"GET\"] }",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                },
                "issued": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the invoice was first issued.\", \"verbs\":[\"GET\"] }"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"Start of the period being billed by this invoice, UTC DateTime\", \"verbs\":[\"GET\"] }"
                },
                "periodEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"End of the period being billed by this invoice, UTC DateTime.\", \"verbs\":[\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Indicates if an invoice has been retired. If an invoice has been retired it can still be retrieved using the appropriate flag on API requests. Generally invoices will not be retired.\", \"verbs\":[] }",
                    "default": false
                },
                "totalExecutionAttempts": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Number of payment attempts for this invoice. This includes any manual execution attempts.\", \"verbs\":[\"GET\"] }"
                },
                "lastExecutionAttempt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"UTC DateTime of the invoice's last execution attempt. This was the last time an attempt was made to take payment for this invoice.\", \"verbs\":[\"GET\"] }"
                },
                "nextExecutionAttempt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"UTC DateTime of the invoice's next execution attempt. If the next execution attempt is greater than the period end for this invoice, the invoice will not receive another automatic execution attempt.\", \"verbs\":[\"GET\"] }"
                },
                "finalExecutionAttempt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"UTC DateTime of the invoice's final execution attempt. The final execution attempt. This may be less than the next execution attempt if the next execution attempt never occurred.\", \"verbs\":[\"GET\"] }"
                },
                "paymentReceived": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"UTC DateTime specifying when payment was received for the invoice.\", \"verbs\":[\"GET\"] }"
                },
                "currency": {
                    "description": "{ \"description\" : \"Currency of the invoice specified by a three character ISO 4217 currency code.\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "costExcludingTax": {
                    "type": "number",
                    "description": "{ \"description\" : \"Cost of the invoice exclusive of tax.\", \"verbs\":[\"GET\"] }"
                },
                "invoiceCost": {
                    "type": "number",
                    "description": "{ \"description\" : \"Cost of the invoice inclusive of tax.\", \"verbs\":[\"GET\"] }"
                },
                "nonDiscountedCost": {
                    "type": "number",
                    "description": "Cost of the invoice before discounts, inclusive of tax."
                },
                "nonDiscountedCostExcludingTax": {
                    "type": "number",
                    "description": "Cost of the invoice before discounts, inclusive of tax."
                },
                "invoicePaid": {
                    "type": "number",
                    "description": "{ \"description\" : \"Total amount of the invoice currently paid for. As the invoice may be paid by multiple payments, for example partly paid for by a voucher and then paid for by a card, this indicates the current paid amount of the invoice.\", \"verbs\":[\"GET\"] }"
                },
                "discountAmount": {
                    "type": "number",
                    "description": "{ \"description\" : \"The amount of discounts for the invoice.\", \"verbs\":[\"GET\"] }"
                },
                "discountAmountExcludingTax": {
                    "type": "number",
                    "description": "{ \"description\" : \"The amount of discounts for the invoice excluding tax.\", \"verbs\":[\"GET\"] }"
                },
                "invoiceRefunded": {
                    "type": "number",
                    "description": "{ \"description\" : \"Total amount of the invoice refunded.\", \"verbs\":[\"GET\"] }"
                },
                "creditRolledOver": {
                    "type": "number",
                    "description": "{ \"description\" : \"The amount of credit to be returned to the pool.\", \"verbs\":[\"GET\"] }"
                },
                "creditRolledOverExcludingTax": {
                    "type": "number",
                    "description": "{ \"description\" : \"The amount of credit to be returned to the pool excluding tax.\", \"verbs\":[\"GET\"] }"
                },
                "type": {
                    "type": "string",
                    "description": "{ \"description\" : \"The type of the invoice. A subscription invoice is raised every time a subscription recurs. An amendment is created for intra-contract changes. An Adhoc invoice is created for payment that is taken out-of-band of a subscription. Finally the invoice generated for a trial period is marked as Trial.\", \"verbs\":[\"GET\"] }",
                    "enum": ["Subscription", "Trial", "Charge", "FinalArrears", "Amendment", "Aggregated"]
                },
                "locked": {
                    "type": "string",
                    "description": "{ \"description\" : \"If the subscription is locked, it will not be processed by the system\", \"verbs\":[] }"
                },
                "managedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"Which system is responsible for managing the subscription.\", \"verbs\":[] }",
                    "enum": ["BillForward", "Stripe"]
                },
                "initialInvoice": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is this an initial invoice. An initial invoice is the first invoice generated for a subscription. Initial invoices will not have dunning applied to them and as such will only have a single payment attempt. For trial periods, the trial invoice is the initial invoice.\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "versionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The version number of the Invoice.  The first version of an Invoice is version number 1\", \"verbs\":[\"GET\"] }"
                },
                "invoiceLines": {
                    "type": "array",
                    "description": "{ \"description\" : \"The collection of invoice-lines associated with the invoice.\", \"verbs\":[\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/InvoiceLine"
                    }
                },
                "taxLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InsertableBillingEntity"
                    }
                },
                "invoicePayments": {
                    "type": "array",
                    "description": "{ \"description\" : \"Payments used for this invoice. Multiple payments may be associated with the invoice.\", \"verbs\":[\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/InvoicePayment"
                    }
                },
                "charges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubscriptionCharge"
                    }
                },
                "parent": {
                    "$ref": "#/definitions/Invoice"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "zeroCost": {
                    "type": "boolean",
                    "default": false
                },
                "paid": {
                    "type": "boolean",
                    "default": false
                },
                "totalNominalUnpaid": {
                    "type": "number"
                },
                "totalNominalPaid": {
                    "type": "number"
                },
                "totalDiscountAmount": {
                    "type": "number"
                },
                "totalInvoiceCost": {
                    "type": "number"
                }
            },
            "description": "An invoice encapsulates the cumulative charges of a subscription's pricing-components and their respective pricing-component-values for a specific period of time.",
            "xml": {
                "name": "invoice"
            }
        },
        "PaymentMethod": {
            "type": "object",
            "required": ["account", "accountID", "expiryDate", "gateway", "linkID", "name", "state"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "accountID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the account associated with the payment-method.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name of the payment-method.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"Description of the payment-method.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "cardHolderName": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name of the card holder\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "{ \"description\" : \"In the case of card payment methods this is the expiry date of the card, format should be MMYY including leading 0's. For example 0115 for January 2015.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "cardType": {
                    "type": "string",
                    "description": "{ \"description\" : \"Type of the card. In the case of card payment methods this is the payment type, for example VISA, MasterCard.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "country": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "firstSix": {
                    "type": "string"
                },
                "lastFour": {
                    "type": "string"
                },
                "expiryYear": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiryMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "cardExpiry": {
                    "type": "string",
                    "format": "date-time"
                },
                "linkID": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string",
                    "description": "{ \"description\" : \"Gateway type for payment-method.\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                },
                "ipAddress": {
                    "type": "string",
                    "description": "{\"description\":\"IP address associated with this payment method.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "ipAddressCountry": {
                    "type": "string",
                    "description": "{\"description\":\"Country of the IP address associated with this payment method.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"State of the payment-method.\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["Pending", "Active", "Expiring", "Expired"]
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{\"default\" : \"false\", \"description\" : \"Indicates if a payment-method has been retired. If a payment-method has been retired it can still be retrieved using the appropriate flag on API requests. Generally payment-methods will be retired by customers wanting to remove the payment method from their account. Caution should be used when requested deleted payment methods.\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "defaultPaymentMethod": {
                    "type": "boolean",
                    "description": "{\"default\" : \"false\", \"description\" : \"Indicates if this is the default payment method for the account.\", \"verbs\":[\"GET\",\"POST\",\"PUT\"]  }",
                    "default": false
                },
                "account": {
                    "description": "{ \"description\" : \"Account associated with the payment-method.\", \"verbs\":[] }",
                    "$ref": "#/definitions/Account"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "PaymentMethod",
            "xml": {
                "name": "paymentMethod"
            }
        },
        "CreateSubscriptionBatchRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"default\":\"(Auto-populated using your authentication credentials)\",\"description\":\"ID of the BillForward Organization within which the requested Subscriptions should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "subscriptions": {
                    "type": "array",
                    "description": "{\"default\":\"(Empty list)\",\"description\":\"List of entities for requesting that subscriptions be created.\",\"verbs\":[\"POST\"]}",
                    "items": {
                        "$ref": "#/definitions/CreateSubscriptionRequest"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Entity for requesting that a batch of subscriptions be created."
        },
        "PricingComponentMigrationValue": {
            "type": "object",
            "required": ["pricingComponent", "value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "pricingComponent": {
                    "type": "string",
                    "description": "{\"description\":\"ID or name of the pricing component whose migration value is being described.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "value": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Amount consumed of the pricing component whose migration value is being described.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "charge": {
                    "$ref": "#/definitions/SubscriptionCharge"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Entity describing the amount consumed of some pricing component in a migration."
        },
        "IDiscardable": {
            "type": "object",
            "properties": {
                "discardable": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "InvoiceOutstandingChargesAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "internalState", "invoiceID", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "invoiceID": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the Invoice with which the amendment is associated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "invoice": {
                        "description": "{ \"description\" : \"The Invoice with which the amendment is associated. Alternatively you can provide the ID using 'invoice_id'.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                        "$ref": "#/definitions/Invoice"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "UpdateSubscriptionRequest": {
            "type": "object",
            "required": ["subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the Subscription you wish to update.\",\"verbs\":[\"POST\"]}"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"default\":\"(Auto-populated using your authentication credentials)\",\"description\":\"ID of the BillForward Organization within which the requested Subscription should be updated. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"New name to assign to the updated subscription. This is primarily for your benefit &mdash; for example, to enable you to identify subscriptions at a glance in the BillForward web interface (e.g. 'Customer 1425, guy@mail.com, Premium membership').\",\"verbs\":[\"POST\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"description\":\"New description to assign to the updated subscription. This is primarily for your benefit &mdash; for example, you could write here the mechanism through which you obtained this customer. (e.g. 'Customer obtained through Lazy Wednesdays promotion').\",\"verbs\":[\"POST\"]}"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"[Can only be changed if subscription is still in Provisioned state] ISO 8601 UTC DateTime (e.g. 2015-06-16T11:58:41Z) describing the date at which the subscription should enter its first service period.\",\"verbs\":[\"POST\"]}"
                },
                "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"[Can only be changed if subscription is still in Provisioned state] ISO 8601 UTC DateTime (e.g. 2015-06-16T11:58:41Z) describing the date at which the subscription should finish its first service period.\",\"verbs\":[\"POST\"]}"
                },
                "state": {
                    "type": "string",
                    "description": "{\"description\":\"[Can only be changed if subscription is still in Provisioned state] The state into which you wish to move the updated subscription.<br><span class=\\\"label label-default\\\">AwaitingPayment</span> &mdash; The subscription is activated. After `start` time is surpassed, it will begin service and raise its first invoice.\",\"verbs\":[\"POST\"]}",
                    "enum": ["Trial", "Provisioned", "Paid", "AwaitingPayment", "Cancelled", "Failed", "Expired"]
                },
                "parentID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of a parent subscription which will collect the charges raised by this subscription. The parent becomes responsible for paying those charges.\",\"verbs\":[\"POST\"]}"
                },
                "aggregateAllSubscriptionsOnAccount": {
                    "type": "boolean",
                    "description": "{\"description\":\"Whether this subscription should become an 'aggregating subscription', collecting charges (starting now) from all other subscriptions (current and future) belonging to this BillForward Account.\",\"verbs\":[\"POST\"]}",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Entity for requesting that a subscription be updated."
        },
        "PricingComponentValueRequest": {
            "type": "object",
            "required": ["value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "value": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\"></span>\",\"description\":\"Modifies the current value used to calculate the recurring costs of the subscription. This can effectively be thought of as an upsert.Note: altering costs on invoices are made be editing charges.<br><span class=\\\"label label-default\\\">Setup Pricing</span> &mdash; Value changed if initial invoice has not been issued.<br><span class=\\\"label label-default\\\">In-Advance/Subscription Pricing</span> &mdash; Value changed and a charge added. If the change is delayed the current value on the subscription will show the delayed change.<br><span class=\\\"label label-default\\\">Arrears Pricing</span> &mdash; Value updated, and a pro-rated charge added to the subscription if required.<br><span class=\\\"label label-default\\\">Usage Pricing</span> &mdash; Usage created or updated for the current billing cycle.which is generated naturally &mdash; i.e. the invoice raised at the current period's end.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "changeMode": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">as on pricing component</span>\",\"description\":\"Default behaviour when a value is changed by default the change mode from the pricing component is used.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Change will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Change will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["immediate", "delayed"]
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Aggregated</span>\",\"description\":\"If the change results in a charge should it be invoiced straight away or on the next invoice.<br><span class=\\\"label label-default\\\">Immediate</span> &mdash; If the change has a cost associated with it , for example a pro-rated upgrade charge, an invoice will be raised at the time the request is made. If the invoice fails to be paid the upgrade will fail and the invoice will be voided. No credit or refund is issued for immediate downgrades.<br><span class=\\\"label label-default\\\">Aggregated</span> &mdash; If the change has a cost associated with it , for example a pro-rated upgrade charge, the charge will be added to the next invoice raised for this subscription. As no payment is required when the change is request the change always succeeds.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Immediate", "Aggregated"]
                },
                "noCharge": {
                    "type": "boolean",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">false</span>\",\"description\":\"If specified the change will have no cost associated with it. This is useful for immediately changing a value without creating any upgrade charge.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for recalculating an invoice."
        },
        "InvoiceLine": {
            "type": "object",
            "required": ["calculation", "chargeType", "childInvoiceID", "componentValue", "cost", "description", "invoiceID", "name", "organizationID", "periodEnd", "periodStart", "pricingComponentID", "pricingComponentName", "pricingComponentType", "subscriptionChargeID", "tax", "type"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"invoice associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "unitOfMeasureID": {
                    "type": "string",
                    "description": "{ \"description\" : \"unit-of-measure associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"the subscription ID associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{ \"description\" : \"the product rate plan ID associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "productRatePlanName": {
                    "type": "string",
                    "description": "{ \"description\" : \"the product rate plan name associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "productID": {
                    "type": "string",
                    "description": "{ \"description\" : \"the product ID associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "productName": {
                    "type": "string",
                    "description": "{ \"description\" : \"the product name associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "unitOfMeasure": {
                    "description": "{ \"description\" : \"The unit-of-measure associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/MutableBillingEntity"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable name of the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"The human readable description of the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "calculation": {
                    "type": "string",
                    "description": "{ \"description\" : \"A human readable explanation of how the value of the invoice-line was calculated.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "cost": {
                    "type": "number",
                    "description": "{ \"description\" : \"The cost of the invoice-line including tax.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "tax": {
                    "type": "number",
                    "description": "{ \"description\" : \"The cumulative tax of the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "componentValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The component value for the unit-of-measure that is associated with the invoice-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "The ID of the pricing-component that is associated with the invoice-line."
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "The name of the pricing-component that is associated with the invoice-line."
                },
                "subscriptionChargeID": {
                    "type": "string",
                    "description": "The ID of the subscription-charge that is associated with the invoice-line."
                },
                "childInvoiceID": {
                    "type": "string",
                    "description": "The ID of the invoice that is associated with the invoice-line."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the invoice-line.",
                    "enum": ["PricingComponent", "Coupon", "Migration", "AggregatedInvoice"]
                },
                "pricingComponentType": {
                    "type": "string",
                    "description": "{ \"description\" : \"The type of the pricing component associated with the invoice line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["setup", "subscription", "arrears", "usage"]
                },
                "chargeType": {
                    "type": "string",
                    "description": "{ \"description\" : \"charge-type.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Credit", "Debit"]
                },
                "periodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The period start of the charge."
                },
                "periodEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The period end of the charge."
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "discountExcludingTax": {
                    "type": "number"
                },
                "discount": {
                    "type": "number"
                }
            },
            "description": "An invoice-line represents the portion of an invoice specific to one particular pricing-component and its associated pricing-component-value.",
            "xml": {
                "name": "invoiceLines"
            }
        },
        "Subscription": {
            "type": "object",
            "required": ["accountID", "currentTime", "fixedTerms", "id", "initialPeriodStart", "name", "organizationID", "productID", "productRatePlanID", "state", "versionNumber", "versionStart"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"GET\"]}"
                },
                "versionID": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"GET\"]}"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"description\":\"Organization associated with the subscription.\",\"verbs\":[]}"
                },
                "productID": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"GET\"]}"
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{\"description\":\"Identifier of the rate-plan being billed for.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "parentID": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"GET\"]}"
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"User definable friendly name for the subscription.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"description\":\"\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "type": {
                    "type": "string",
                    "description": "{\"default\":\"dependent on product\", \"description\":\"\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Subscription", "FixedTerm", "Trial"]
                },
                "state": {
                    "type": "string",
                    "description": "{\"PUT_description\":\"A <span class=\\\"label label-default\\\">Provisioned</span> subscription can be updated to either <span class=\\\"label label-default\\\">Trial</span> or <span class=\\\"label label-default\\\">AwaitingPayment</span>, this will start the subscription. Any updates to the state of a non-<span class=\\\"label label-default\\\">Provisioned</span> will be ignored. To cancel or otherwise amend a subscription please use the explict amendment calls.\", \"description\":\"A <span class=\\\"label label-default\\\">Provisioned</span> subscription will not begin until marked as <span class=\\\"label label-default\\\">Trial</span> or <span class=\\\"label label-default\\\">AwaitingPayment</span>. Trial subscriptions transition to <span class=\\\"label label-default\\\">AwaitingPayment</span> when the trial period is over. On subscription renewal the state becomes <span class=\\\"label label-default\\\">AwaitingPayment</span>. Once outstanding invoices are paid the state changes to <span class=\\\"label label-default\\\">Paid</span>. A subscription is set as either <span class=\\\"label label-default\\\">Failed</span> or left as <span class=\\\"label label-default\\\">AwaitingPayment</span>, depending on the rate-plan configuration. If a subscription is non-recurring or fixed-term and ends naturally, it will be marked as <span class=\\\"label label-default\\\">Expired</span>. If all payment attempts have failed a subscription is marked as <span class=\\\"label label-default\\\">Cancelled</span> if it has been manually ended. Once a subscription is marked as <span class=\\\"label label-default\\\">Failed</span>, <span class=\\\"label label-default\\\">Expired</span>, or <span class=\\\"label label-default\\\">Cancelled</span> no invoices other than a final invoice will be issued. Note: Updating account card details will not lead to BillForward automatically retrying payment, manual payment attempts can be made.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "enum": ["Trial", "Provisioned", "Paid", "AwaitingPayment", "Cancelled", "Failed", "Expired"]
                },
                "currentPeriodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"Start of the current invoice period. At the end of this period, a new new invoice will be generated\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "currentPeriodEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"End of the current period invoiced for. This can be manually updated to extend trials or delay invoice generation.\",\"verbs\":[\"PUT\",\"GET\"]}"
                },
                "contractStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"start of the contracted period.  This will be after a trial, if one exists\",\"verbs\":[\"GET\"]}"
                },
                "subscriptionEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"When a subscription will end. This may be in the future if the cancellation is at the end of the current period.\",\"verbs\":[\"GET\"]}"
                },
                "currentPeriodEndExplicit": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"Override for the initial subscription period. Allows periods to align to a date or time regardless of purchase date/time.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "initialPeriodStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"Start of the first successful period\",\"verbs\":[\"GET\"]}"
                },
                "successfulPeriods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Number of paid-for periods billing, excluding trials, since the subscription started.\",\"verbs\":[\"GET\"]}"
                },
                "totalPeriods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Total number of subscription periods.\",\"verbs\":[\"GET\"]}"
                },
                "dunning": {
                    "type": "boolean",
                    "description": "{  \"default\":\"false\", \"description\":\"Are there outstanding invoices which are currently in dunning.\",\"verbs\":[\"GET\", \"PUT\", \"POST\"]}",
                    "default": false
                },
                "locked": {
                    "type": "string",
                    "description": "{\"description\":\"If the subscription is locked, it will not be processed by the system\",\"verbs\":[]}"
                },
                "managedBy": {
                    "type": "string",
                    "description": "{\"description\":\"Which system is responsible for managing the subscription.\",\"verbs\":[]}",
                    "enum": ["BillForward", "Stripe"]
                },
                "versionStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"When the current version of the subscription started.\",\"verbs\":[\"GET\"]}"
                },
                "versionEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"When the current version of the subscription ended, null indicates current version.\",\"verbs\":[\"GET\"]}"
                },
                "versionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"Incremental version number of the subscription, starts at 1.\",\"verbs\":[\"GET\"]}"
                },
                "creditEnabled": {
                    "type": "boolean",
                    "description": "{  \"default\":\"true\", \"description\":\"Can credit-notes be used to pay outstanding invoices for this subscription.\",\"verbs\":[\"GET\", \"PUT\", \"POST\"]}",
                    "default": false
                },
                "aggregateAllSubscriptionsOnAccount": {
                    "type": "boolean",
                    "description": "{  \"default\":\"true\", \"description\":\"Whether the subscription will aggregate all other subscriptions on the account.\",\"verbs\":[\"GET\", \"PUT\", \"POST\"]}",
                    "default": false
                },
                "pricingComponentValues": {
                    "type": "array",
                    "description": "{\"description\":\"The quantities for each pricing component of the rate-plan. Values should be set for all pricing components of the rate-plan apart from the usage components. Usage components should be added when the usage is known, this is often after the end of the current billing cycle.\",\"verbs\":[\"GET\", \"POST\"]}",
                    "items": {
                        "$ref": "#/definitions/PricingComponentValue"
                    }
                },
                "paymentMethodSubscriptionLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentMethodSubscriptionLink"
                    }
                },
                "fixedTerms": {
                    "type": "array",
                    "description": "List of fixed terms that have been or are applied to the subscription",
                    "items": {
                        "$ref": "#/definitions/FixedTerm"
                    }
                },
                "currentTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"The current time &mdash; from the point of view of the subscription.\",\"verbs\":[\"GET\"]}"
                },
                "timeOffset": {
                    "type": "integer",
                    "format": "int64",
                    "description": "{\"description\":\"How far in the future is the entity (in seconds) compared to the BillForward server's time.\",\"verbs\":[\"GET\"]}"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "fixedTerm": {
                    "type": "boolean",
                    "default": false
                },
                "currentFixedTerm": {
                    "$ref": "#/definitions/FixedTerm"
                },
                "daysElapsed": {
                    "$ref": "#/definitions/Days"
                },
                "daysRemaining": {
                    "$ref": "#/definitions/Days"
                },
                "minutesElapsed": {
                    "$ref": "#/definitions/Minutes"
                },
                "minutesRemaining": {
                    "$ref": "#/definitions/Minutes"
                },
                "secondsRemaining": {
                    "$ref": "#/definitions/Seconds"
                },
                "newSubscription": {
                    "type": "boolean",
                    "default": false
                }
            },
            "description": "Subscription",
            "xml": {
                "name": "subscription"
            }
        },
        "AuditEntry": {
            "type": "object",
            "required": ["auditAction", "entity", "entityID", "newEntity", "organizationID", "state"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who made the change.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the audit-entry.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "entity": {
                    "type": "string",
                    "description": "{ \"description\" : \"The entity type.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "entityID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the entity.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "auditAction": {
                    "type": "string",
                    "description": "{ \"description\" : \"update, insert\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Accept", "Active", "AwaitingPayment", "AwaitingRefund", "Cancelled", "Completed", "Created", "Error", "Expiring", "Expired", "Failed", "Migrated", "NeedsAmendments", "Paid", "Pending", "Provisioned", "Refunded", "Reject", "Trial", "Unknown", "Unpaid", "Updated", "Voided", "PaymentFailed"]
                },
                "fieldChanges": {
                    "type": "array",
                    "description": "{ \"description\" : \"A description of the changes.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "newEntity": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"The state of the audit entry.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["New", "Processed"]
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "An entry from the audit-log, documenting the set of changes made to an entity during an insert or update.",
            "xml": {
                "name": "auditEntry"
            }
        },
        "Coupon": {
            "type": "object",
            "required": ["couponBookDefinitionID", "couponBookID", "couponCode", "couponDefinitionID", "coupons", "discounts", "name", "organizationID", "uses"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "couponCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"Code used to identify this set of coupons. If unique codes are required this will be used as the prefix to generate individual coupon codes. When a unique code is returned the original couponCode is returned in the parentCouponCode property. For example a single coupon code SUMMER maybe be issued at an event to encourage sign-up, the same code can be redeemed by multiple accounts. In another example you may want to issue unique coupon codes per a customer, for example SUMMER-A4FC, SUMMER-BCQ4, each code can only be calimed once.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "coupons": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"default\" : \"&infin;\", \"description\" : \"Number of times the coupon can be claimed. In the case of generating unique coupon codes this is the maximum quantity that can be genereated. For example set this value to 10 if you want to limit the total number of subscriptions that will use this code to 10.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "uses": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"default\" : \"&infin;\", \"description\" : \"This specifies how many times a discount will be added to a subscription once the coupon is added. For example if the uses is set to 3 it will discount 3 times, set this to a large number, for example 9999999, to give infinite applications, .\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "product": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name or ID of the product this coupon applies to. Requires a specific rate-plan to be set.\", \"verbs\":[\"POST\"] }"
                },
                "productName": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "productID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "productRatePlan": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name or ID of the rate-plan this coupon applies to. \", \"verbs\":[\"POST\"] }"
                },
                "productRatePlanName": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "currency": {
                    "description": "{ \"description\" : \"If the coupon is not for a specific rate-plan, and can apply to any subscription, the currency should be provivded. Currency is specified by a three character ISO 4217 currency code.\", \"verbs\":[\"POST\",\"GET\"] }",
                    "$ref": "#/definitions/Currency"
                },
                "couponDefinitionID": {
                    "type": "string"
                },
                "couponBookDefinitionID": {
                    "type": "string"
                },
                "couponBookID": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "discounts": {
                    "type": "array",
                    "description": "{ \"description\" : \"For each discount item on the coupon, only one discount type should be set between cashDiscount, percentageDiscount and unitsFree. cashDiscount gives a fixed monetary discount, for example $10.00. percentageDiscount gives a percentage discount on the overall invoice cost. unitsFree discounts the pricing by the number of units specified for that component. All discounts are applied against the base cost or units. Discounts are not compound. Discounts will never exceed the value of a pricing component of the overall invoice - thus at most the discount will reduce the cost to zero. If no pricing component is specified the discount will apply to the total invoice cost.\", \"verbs\":[\"POST\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/CouponDiscount"
                    }
                },
                "parentCouponCode": {
                    "type": "string",
                    "description": "{ \"description\" : \"For unique coupon codes this is the original coupon code, for example SUMMER\", \"verbs\":[\"GET\"] }"
                },
                "appliesTo": {
                    "type": "string",
                    "description": "{ \"description\" : \"For unique coupon codes this is what the coupon applies to, usually subscription.\", \"verbs\":[\"GET\"] }",
                    "enum": ["none", "subscription", "account"]
                },
                "appliesToID": {
                    "type": "string",
                    "description": "{ \"description\" : \"For a coupon added to a subscription this is the the ID of the subscription. This can be used to remove the coupon from the target.\", \"verbs\":[\"GET\"] }"
                },
                "remainingUses": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{  \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "used": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{  \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "validUntil": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"If the coupon was removed from the subscription this is the date and time from when it no ceased to be applied.\", \"verbs\":[\"GET\"] }"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "masterCodeRedeemable": {
                    "type": "boolean",
                    "default": false
                }
            },
            "description": "<p>A coupon allows the customer to apply one or more discounts to a subscription.A coupon can be used to generate coupon codes which can then be added or removed from subscription.</p>"
        },
        "DunningLine": {
            "type": "object",
            "required": ["attemptIx", "deleted", "gateway", "minutesDelay", "organization", "organizationID", "type"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the dunning-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the dunning-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "type": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the dunning-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Invoice", "Notification"]
                },
                "attemptIx": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The payment attempt this dunning line applies to, specified as a positive integer. Dunning lines are ZERO indexed.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "minutesDelay": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The time before the next payment attempt in minutes.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "gateway": {
                    "type": "string",
                    "description": "{ \"description\" : \"The payment gateway to use for this payment attempt.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["cybersource_token", "card_vault", "paypal_simple", "locustworld", "free", "coupon", "credit_note", "stripe", "braintree", "balanced", "paypal", "billforward_test", "offline", "trial", "stripeACH", "authorizeNet", "spreedly", "sagePay", "trustCommerce", "payvision", "kash"]
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Has the dunning-line been deleted?\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "organization": {
                    "description": "{ \"description\" : \"organization associated with the dunning-line.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/MutableBillingEntity"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A dunning-line specifies when the next execution attempt of an unpaid invoice should take place given the number of existing execution attempts.",
            "xml": {
                "name": "dunningLine"
            }
        },
        "MutableBillingEntity": {
            "type": "object",
            "required": ["decimalPlaces", "deleted", "displayedAs", "name", "organizationID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "decimalPlaces": {
                    "type": "integer",
                    "format": "int32"
                },
                "displayedAs": {
                    "type": "string",
                    "description": "{ \"description\" : \"Unit of measurement, such as users, pounds, minutes.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "rounding": {
                    "type": "string",
                    "enum": ["UP", "DOWN", "HALF_EVEN", "HALF_ODD"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Mutable entities are those entities that can be updated after their initial creation.",
            "xml": {
                "name": "unitOfMeasure"
            }
        },
        "PaymentMethodSubscriptionLink": {
            "type": "object",
            "required": ["paymentMethodID", "subscription", "subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Subscription to add payment method to.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string"
                },
                "paymentMethodID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Payment method to add to subscription.\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "default": false
                },
                "paymentMethod": {
                    "$ref": "#/definitions/PaymentMethod"
                },
                "subscription": {
                    "description": "{ \"description\" : \"\", \"verbs\":[] }",
                    "$ref": "#/definitions/Subscription"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "PaymentMethodSubscriptionLink",
            "xml": {
                "name": "paymentMethodSubscriptionLink"
            }
        },
        "UserCreationRequest": {
            "type": "object",
            "required": ["companyName", "email", "firstName", "lastName", "organizationID", "password", "roles", "sendEmail"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"description\":\"Organization for which the User is created.\",\"verbs\":[\"GET\",\"POST\"]}"
                },
                "email": {
                    "type": "string",
                    "description": "{\"description\":\"Login E-mail address of the User.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "firstName": {
                    "type": "string",
                    "description": "{\"description\":\"First Name of the User.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "lastName": {
                    "type": "string",
                    "description": "{\"description\":\"Last Name of the User.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "companyName": {
                    "type": "string",
                    "description": "{\"description\":\"User's Company.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "password": {
                    "type": "string",
                    "description": "{\"description\":\"Login Password for the User.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}"
                },
                "roles": {
                    "type": "array",
                    "description": "{\"description\":\"The permission groups the user will belong to.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "items": {
                        "type": "string"
                    }
                },
                "sendEmail": {
                    "type": "boolean",
                    "description": "{\"description\":\"When an email should be sent upon creation.\",\"verbs\":[\"POST\",\"PUT\",\"GET\"]}",
                    "default": false
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Request entity for creating a user."
        },
        "ComponentChange": {
            "type": "object",
            "required": ["newValue"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "amendmentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "pricingComponentValueChangeID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "updatePricingComponentValueID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the updateComponentValueAmendment object that is responsible for actioning the change.\", \"verbs\":[\"GET\"] }"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the pricing component, that will not change with versioning. (Must be provided if pricingComponentName is empty)\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name of the pricing component. (Must be provided if pricingComponentID is empty)\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "enum": ["Failed", "Pending", "Succeeded"]
                },
                "changeMode": {
                    "type": "string",
                    "description": "{ \"description\" : \"<span class=\\\"label label-default\\\">immediate</span> applies the changes to the subscription straight away. <span class=\\\"label label-default\\\">delayed</span> applies the changes to the subscription at the start of the next billing period\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["immediate", "delayed"]
                },
                "valueEffective": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"Date when the value becomes active. For example when an upgrade will come into effect.\", \"verbs\":[\"GET\"] }"
                },
                "newValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Value of the pricing component that the subscription is moving to\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "pricingComponentValueAmendment": {
                    "$ref": "#/definitions/PricingComponentValueChangeAmendment"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            }
        },
        "EventData": {
            "type": "object",
            "required": ["object", "previousAttributes"],
            "properties": {
                "previousAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "object": {
                    "$ref": "#/definitions/StripeObject"
                }
            }
        },
        "SwaggerTypeList": {
            "type": "object",
            "properties": {
                "componentChange": {
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/ComponentChange"
                },
                "mappings": {
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/PricingComponentValueMigrationAmendmentMapping"
                }
            }
        },
        "CouponDiscountEstimate": {
            "type": "object",
            "required": ["affectedSpecifierCount", "discountEndValue", "discountStartValue", "discountValue", "unalteredValue", "unitDiscounts"],
            "properties": {
                "unalteredValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "discountValue": {
                    "type": "number",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponInstance": {
                    "$ref": "#/definitions/CouponInstance"
                },
                "affectedSpecifierCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "discountStartValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "discountEndValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "unitDiscounts": {
                    "type": "array",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/UnitDiscount"
                    }
                },
                "discountedValue": {
                    "type": "number"
                },
                "modifierID": {
                    "type": "string"
                }
            }
        },
        "PricingComponentValueChangeAmendment": {
            "type": "object",
            "required": ["deleted", "dummyField", "internalState", "invoicingType", "state", "subscriptionID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "dummyField": {
                    "type": "string",
                    "xml": {
                        "name": "@type"
                    },
                    "description": "{ \"description\" : \"PricingComponentValueChangeAmendment\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscription": {
                    "$ref": "#/definitions/Subscription"
                },
                "amendmentType": {
                    "type": "string",
                    "description": "amendmentType",
                    "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                },
                "actioningTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "actionedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "state",
                    "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                },
                "internalState": {
                    "type": "string",
                    "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                    "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{ \"description\" : \"<span class=\\\"label label-default\\\">Immediate</span> generates an invoice straight away for any costs arising from this change, for example upgrade charge. <span class=\\\"label label-default\\\">Aggregated</span> add any upgrade charges to the next invoice, generally this would be at the next period end.\",  \"default\" : \"Aggregated\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["Immediate", "Aggregated"]
                },
                "invoiceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Identifer of the invoice with the charges for this change.\", \"verbs\":[\"GET\"] }"
                },
                "invoice": {
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/Invoice"
                },
                "componentChanges": {
                    "type": "array",
                    "description": "{ \"description\" : \"Changes to perform, for example upgrade\", \"verbs\":[\"POST\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/ComponentChange"
                    }
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "discardableSubsystemObject": {
                    "$ref": "#/definitions/IDiscardable"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "discardable": {
                    "type": "boolean",
                    "default": false
                },
                "discardWarningString": {
                    "type": "string"
                }
            },
            "description": "Effects a change in the value of a pricing component on a subscription.",
            "xml": {
                "name": "amendment"
            }
        },
        "Account": {
            "type": "object",
            "required": ["id", "organizationID", "roles"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the account.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated with the account.\", \"verbs\":[] }"
                },
                "userID": {
                    "type": "string",
                    "description": "{ \"description\" : \"User associated with the account. If this is null, no user is currently assocaited with the account. A user is only set when an account is associated with a user account.\", \"verbs\":[] }"
                },
                "successfulSubscriptions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Number of distinct, paid subscriptions associated with this account. Initially the value will be 0 when no successful subscriptions have been taken. A subscription cancelled whilst in trial is counted as successful.\", \"verbs\":[\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{  \"default\" : \"false\",  \"description\" : \"Indicates if an account has been retired. If an account has been retired it can still be retrieved using the appropriate flag on API requests.\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "roles": {
                    "type": "array",
                    "description": "{ \"description\" : \"Roles associated with the account. These are used to govern access privileges.\", \"verbs\":[] }",
                    "items": {
                        "$ref": "#/definitions/InsertableBillingEntity"
                    }
                },
                "paymentMethods": {
                    "type": "array",
                    "description": "{ \"description\" : \"The payment-methods associated with the account.\", \"verbs\":[\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/PaymentMethod"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Account",
            "xml": {
                "name": "account"
            }
        },
        "MigrationRequest": {
            "type": "object",
            "required": ["invoicingType", "pricingBehaviour", "productRatePlan"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "nextSubscriptionName": {
                    "type": "string",
                    "description": "{\"description\":\"Name to which the subscription will change upon successful migration.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "nextSubscriptionDescription": {
                    "type": "string",
                    "description": "{\"description\":\"Description to which the subscription will change upon successful migration.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "product": {
                    "type": "string",
                    "description": "{\"description\":\"The product to which the subscription will be migrated.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "productRatePlan": {
                    "type": "string",
                    "description": "{\"description\":\"The rate plan (of some product) to which the subscription will be migrated.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Aggregated</span>\",\"description\":\"The strategy for how to raise invoices for charges caused by this migration.<br><span class=\\\"label label-default\\\">Immediate</span> &mdash; Generate straight-away an invoice containing these charges.<br><span class=\\\"label label-default\\\">Aggregated</span> &mdash; Add these charges to the next invoice which is generated naturally &mdash; i.e. the invoice raised at the current period's end.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Immediate", "Aggregated"]
                },
                "mappings": {
                    "type": "array",
                    "description": "{\"description\":\"List of pricing components and quantities thereof to be consumed in the new rate plan.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "items": {
                        "$ref": "#/definitions/PricingComponentMigrationValue"
                    }
                },
                "pricingBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"DifferenceProRated\",\"description\":\"Pricing behaviour defines how migration charges are calculated.<br><span class=\\\"label label-default\\\">DifferenceProRated</span> &mdash; Calculate the difference between in-advance charges of the existing and new rate-plan, then pro-rate based on time remaining.<br><span class=\\\"label label-default\\\">None</span> &mdash; Set the migration charge as zero cost.<br><span class=\\\"label label-default\\\">Full</span> &mdash; Set the costs as the total of the new rate-plan's in-advance charges.<br><span class=\\\"label label-default\\\">Difference</span> &mdash; The same calculation as in <span class=\\\"label label-default\\\">DifferenceProRated</span>, but with no pro-ration applied.<br><span class=\\\"label label-default\\\">ProRated</span> &mdash; When moving to a rate-plan of the same duration: Pro-rates the in-advance charges of the new rate-plan.<br>When moving to a rate-plan of a different duration: A credit-note will be issued for the price of any remaining time on the existing plan's billing period.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["None", "Full", "Difference", "DifferenceProRated", "ProRated"]
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":\"false\",\"description\":\"Calculate the effects of migration but do not actually perform a migration.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "inputSubscription": {
                    "$ref": "#/definitions/Subscription"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for producing migrating a subscription."
        },
        "TimeResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "periods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"(Required: one of [`periods`, `to`])<br>The number of period boundaries up to which the subscription should advance.\nA 1-value advances the subscription to the end of its current service period.\nHigher values advance the subscription to subsequent period boundaries.\"verbs\":[\"POST\",\"GET\"]}"
                },
                "to": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"(Required: one of [`periods`, `to`])<br>The time up until which the subscription should be fast-forwarded.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Changes described in the response:<br><span class=\\\"label label-default\\\">true</span> &mdash; Are not actually performed; your subscription remains unchanged, no billing events run, and no invoices are executed.<br><span class=\\\"label label-default\\\">false</span> &mdash; Are actually performed and committed.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "skipIntermediatePeriods": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"As time scrubs forward:<br><span class=\\\"label label-default\\\">true</span> &mdash; Raise no invoice upon advancing over a period boundary.<br><span class=\\\"label label-default\\\">false</span> &mdash; Raise invoices for any period that is entered.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "handleAmendments": {
                    "type": "boolean",
                    "description": "{\"default\":true,\"description\":\"As time scrubs forward:<br><span class=\\\"label label-default\\\">true</span> &mdash; Run any amendments that were scheduled to action.<br><span class=\\\"label label-default\\\">false</span> &mdash; Do not run any amendments that were scheduled to action.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "executionStrategy": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">SingleAttempt</span>\",\"description\":\"What strategy to use when executing any invoices raised as time advances:<br><span class=\\\"label label-default\\\">SingleAttempt</span> &mdash; Execute any invoice just once.<br><span class=\\\"label label-default\\\">FollowDunning</span> &mdash; Apply the existing dunning strategy when executing invoices.<br><span class=\\\"label label-default\\\">None</span>: Do not execute invoices.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["SingleAttempt", "FollowDunning", "None"]
                },
                "freezeOnCompletion": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Once the subscription is advanced through time:<br><span class=\\\"label label-default\\\">true</span> &mdash; Freeze the subscription.<br><span class=\\\"label label-default\\\">false</span> &mdash; Do not freeze the subscription.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "advanceInclusively": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"When advancing onto an instant in time:<br><span class=\\\"label label-default\\\">true</span> &mdash; Action the events scheduled for your destination time. Amendments scheduled at your destined time will be actioned during this time travel. Advancing to a period boundary will promote your subscription to the period on the future side of that boundary.<br><span class=\\\"label label-default\\\">false</span> &mdash; Do not action events scheduled for your destination time. Amendments scheduled at your destined time will not be actioned during this time travel. Advancing to a period boundary will result in your subscription's remaining within the period on the past side of that boundary.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "from": {
                    "type": "string",
                    "format": "date-time"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Response object returned upon advancing a subscription's flow through time."
        },
        "RuleSatisfaction": {
            "type": "object",
            "properties": {
                "satisfied": {
                    "type": "boolean",
                    "default": false
                },
                "accountID": {
                    "type": "string"
                },
                "productRatePlanID": {
                    "type": "string"
                },
                "productID": {
                    "type": "string"
                },
                "couponInstanceBeingInitialised": {
                    "type": "boolean",
                    "default": false
                },
                "newUser": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Amendment": {
            "type": "object",
            "required": ["deleted", "dummyField", "internalState", "state", "subscriptionID"],
            "discriminator": "amendmentType",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "dummyField": {
                    "type": "string",
                    "xml": {
                        "name": "@type"
                    },
                    "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subscription": {
                    "$ref": "#/definitions/Subscription"
                },
                "amendmentType": {
                    "type": "string",
                    "description": "amendmentType",
                    "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                },
                "actioningTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "actionedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                },
                "state": {
                    "type": "string",
                    "description": "state",
                    "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                },
                "internalState": {
                    "type": "string",
                    "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                    "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                    "default": false
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "discardableSubsystemObject": {
                    "$ref": "#/definitions/IDiscardable"
                },
                "discardable": {
                    "type": "boolean",
                    "default": false
                },
                "discardWarningString": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Amendments are used to demand (deferred or immediate) changes from the BillForward engines. For example they can be used to control the subscription and invoice lifecycles.",
            "xml": {
                "name": "amendment"
            }
        },
        "FixedTermExpiryAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["deleted", "dummyField", "fixedTermID", "internalState", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "fixedTermID": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the fixed term to be expired by the amendment.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "RecalculateChargeRequest": {
            "type": "object",
            "required": ["recalculationBehaviour"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "name": {
                    "type": "string",
                    "description": "{\"description\":\"New friendly name given to the charge to help identify it.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "description": {
                    "type": "string",
                    "description": "{\"description\":\"New description given to the charge.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "amount": {
                    "type": "number",
                    "description": "{\"description\":\"(Applicable only if the existing charge has none of [`pricingComponentName`, `pricingComponentID`] defined)<br>New monetary amount for which to charge. Used only for ad-hoc charges (i.e charges not associated with any pricing component).<br>This amount excludes tax.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">Aggregated</span>\",\"description\":\"The strategy for how to raise invoices describing the charges produced by this charge recalculation.<br><span class=\\\"label label-default\\\">Immediate</span> &mdash; Generate straight-away an invoice containing these charges.<br><span class=\\\"label label-default\\\">Aggregated</span> &mdash; Add these charges to the next invoice which is generated naturally &mdash; i.e. the invoice raised at the current period's end.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Immediate", "Aggregated"]
                },
                "pricingComponentValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"(Applicable only if the existing charge has any of [`pricingComponentName`, `pricingComponentID`] defined)<br>The updated value consumed of the pricing component which this charge concerns.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "recalculationBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"RecalculateWithLatestPricing\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["RecalculateWithLatestPricing", "RecalculateWithCurrentPricing"]
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Changes described in the response:<br><span class=\\\"label label-default\\\">true</span> &mdash; Are not actually performed; your subscription remains unchanged, no billing events run, and no invoices are executed.<br><span class=\\\"label label-default\\\">false</span> &mdash; Are actually performed and committed.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for recalculating a charge raised against a subscription or invoice."
        },
        "StripeAuthCaptureRequest": {
            "allOf": [{
                "$ref": "#/definitions/AuthCaptureRequest"
            }, {
                "type": "object",
                "required": ["gateway", "stripeToken"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "accountID": {
                        "type": "string",
                        "description": "{\"description\":\"ID of the BillForward Account with which you would like to associate the created payment method.<br>If omitted, BillForward will associate the created PaymentMethod with a newly-created Account, whose Profile details will be populated using billing information from the funding instrument.\",\"verbs\":[\"POST\"]}"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "{\"description\":\"The gateway with which your funding instrument has been vaulted.\",\"verbs\":[\"POST\"]}",
                        "enum": ["Balanced", "Braintree", "Cybersource", "Paypal", "Stripe", "AuthorizeNet", "Spreedly", "SagePay", "TrustCommerce", "Payvision", "Kash"]
                    },
                    "companyName": {
                        "type": "string",
                        "description": "{\"description\":\"The name of the company of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "email": {
                        "type": "string",
                        "description": "{\"description\":\"The email address of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "{\"description\":\"The first name of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "{\"description\":\"The last name of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "{\"description\":\"The mobile phone number of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "defaultPaymentMethod": {
                        "type": "boolean",
                        "description": "{\"default\":false,\"description\":\"Whether the PaymentMethod produced by this request should be elected as the 'default' payment method for the concerned BillForward Account. Whichever PaymentMethod is elected as an Account's default payment method, will be consulted whenever payment is demanded of that Account (i.e. upon the execution of any of the Account's invoices).\",\"verbs\":[\"POST\"]}",
                        "default": false
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{\"description\":\"ID of the BillForward Organization within which the requested PaymentMethod should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                    },
                    "stripeToken": {
                        "type": "string",
                        "description": "{\"description\":\"Single-use token <a href=\\\"https://stripe.com/docs/stripe.js\\\">provided by Stripe's client-side card capture SDK</a>, in response to your capturing a card into the Stripe vault. This token will be used by BillForward to find the tokenized card within the Stripe vault &mdash; precursory to linking a BillForward PaymentMethod to that tokenized card.\",\"verbs\":[\"POST\"]}"
                    },
                    "cardID": {
                        "type": "string",
                        "description": "{\"description\":\"ID of the captured Card in Stripe. This can be provided as well as &mdash; or instead of &mdash; the one-use `stripeToken`, to lead BillForward to the card tokenized within the Stripe vault.\",\"verbs\":[\"POST\"]}"
                    },
                    "id": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    }
                },
                "description": "[Note: this request can be built automatically by our client-side card capture library, <a href=\"https://github.com/billforward/billforward-js\">BillForward.js</a>; you should not need to interact with this API manually unless you have particularly bespoke requirements] This entity is used for requesting that BillForward produce a PaymentMethod, linked to a funding instrument you have vaulted in Stripe. The BillForward PaymentMethod will be associated with a BillForward Account of your choosing (or a newly-created Account, if preferred).",
                "xml": {
                    "name": "AuthCaptureRequest"
                }
            }]
        },
        "PricingComponentValue": {
            "type": "object",
            "required": ["id", "pricingComponentID", "subscriptionID", "value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "versionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "pricingComponentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name of the pricing-component associated with the pricing-component-value.\", \"verbs\":[\"GET\"] }"
                },
                "subscriptionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Value can be left null if setting the pricing component value on the subscription directly.\", \"verbs\":[\"GET\", \"POST\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "value": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Quantity of a particular pricing component the subscription should have. For example if you have a pricing component for widgets, where $5/widget/month and you set the value to 10 then the customer will be charged $50 ($5 x 10) monthly.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "appliesFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"<p>The appliesFrom can be left null. If appliesFrom is set, it indicates when a value came into effect.</p>\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "appliesTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"<p>For <span class=\\\"label label-default\\\">setup</span>, <span class=\\\"label label-default\\\">subscription</span>, and <span class=\\\"label label-default\\\">arrears</span> pricing components if appliesTill is specificed the value will be used whilst the time has not been reached. If appliesTill is null the pricing component value will be used until a new value is added. When a new value is added appliesTill will be set to the time the new value will take effect.</p><p><span class=\\\"label label-default\\\">usage</span> pricing applies to the previous billing period as it is charged in-arrears. When adding usage a new pricing component value should be added with appliesTill set to the end of the usages billing period. For example a monthly subscription results in an invoice being generated on the 1<sup>st</sup> of March, the previous months usage period ended on the same date. A usage value should be added to the subscription with the appliesTill set to the invoices periodStart, the 1<sup>st</sup> of March.</p>\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "pendingChange": {
                    "$ref": "#/definitions/PendingComponentValueChange"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "PricingComponentValue",
            "xml": {
                "name": "pricingComponentValue"
            }
        },
        "CouponRule": {
            "type": "object",
            "required": ["childRules", "couponDefinitionID", "deleted", "object", "organizationID", "parameter", "polarity", "preposition", "ruleValidationStrategy", "specifier", "subject", "verb"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-rule.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the coupon-rule.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "parentRuleID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the parent of this coupon-rule.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponDefinitionID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the coupon-definition associated with the coupon-rule.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "subject": {
                    "type": "string",
                    "description": "{ \"description\" : \"The subject of the coupon-rule. The coupon-rule can operate on either the user or subscription that the coupon-instance is associated with.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["user", "current_subscription", "child_rules"]
                },
                "polarity": {
                    "type": "string",
                    "description": "{ \"description\" : \"Specifies whether the rule's result will affect the application of the coupon-instance positively or negatively.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["does", "does_not"]
                },
                "verb": {
                    "type": "string",
                    "description": "{ \"description\" : \"The verb of the coupon-rule. coupon-rules can check whether the user or subscription has a certain property.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["have"]
                },
                "preposition": {
                    "type": "string",
                    "description": "{ \"description\" : \"This is the comparison operator of the coupon-rule's parameter and the subject's object.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["less_than", "less_than_or_equal_to", "greater_than", "greater_than_or_equal_to", "equal_to"]
                },
                "parameter": {
                    "type": "string",
                    "description": "{ \"description\" : \"The parameter for the coupon-rule. This specifies the ID or the quantity for the object of the subject.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "object": {
                    "type": "string",
                    "description": "{ \"description\" : \"The property of the subject of the coupon-rule. e.g. When the subject is 'subscription' and the object is 'product-ID', the coupon-rule will observe the product-ID for that subscription.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["subscription", "unit_of_measure", "satisfaction", "product_rate_plan_id", "product_id"]
                },
                "ruleValidationStrategy": {
                    "type": "string",
                    "description": "{ \"description\" : \"The rule-validation-strategy object associated with the coupon-rule.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["only_at_initialisation", "while_recurring_or_initialisation", "only_while_recurring"]
                },
                "specifier": {
                    "type": "string",
                    "description": "{ \"description\" : \"When the subject is subscription, the specifier is used to define which unit of measure the coupon rule will operate on. When the subject is user, the specifier defines which property of the user's account it will operate on.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Has the coupon-modifier been deleted.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "childRules": {
                    "type": "array",
                    "description": "{ \"description\" : \"The collection of child coupon-rules associated with the coupon-rule.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/CouponRule"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "A coupon-rule.",
            "xml": {
                "name": "couponRule"
            }
        },
        "SwaggerTypeListSubs": {
            "type": "object",
            "required": ["addPaymentMethodRequest", "creditSubscriptionRequest"],
            "properties": {
                "creditSubscriptionRequest": {
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/CreditSubscriptionRequest"
                },
                "addPaymentMethodRequest": {
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/AddPaymentMethodRequest"
                }
            },
            "description": "SwaggerTypeListSubs",
            "xml": {
                "name": "SwaggerTypeListSubs"
            }
        },
        "CreateAggregatingComponentRequest": {
            "type": "object",
            "required": ["pricingComponent"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "pricingComponent": {
                    "type": "string",
                    "description": "{\"description\":\"Name of the pricing component upon which to aggregate. The subscriber to the aggregating rate plan (which contains the AggregatingComponent specified here), will consult its children at the end of each billing period, and collect from those children all charges whose pricing component matches the ID of the component identified here. Those charges' quantities will be counted, and used when calculating the price of consuming this AggregatingComponent. The aggregating subscription then raises a discount charge &mdash; to account for the more favourable price tiering that emerges when aggregating.\",\"verbs\":[\"POST\"]}"
                },
                "pricingComponentID": {
                    "type": "string"
                },
                "pricingComponentName": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"default\":\"(Auto-populated using your authentication credentials)\",\"description\":\"ID of the BillForward Organization within which the requested pricing component should be created. If omitted: this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Entity for requesting that an 'aggregating component' (i.e. a component which should be re-priced upon invoice aggregation) be created."
        },
        "Days": {
            "type": "object",
            "properties": {
                "fieldType": {
                    "$ref": "#/definitions/DurationFieldType"
                },
                "days": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodType": {
                    "$ref": "#/definitions/PeriodType"
                }
            }
        },
        "TimeZone": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "dstsavings": {
                    "type": "integer",
                    "format": "int32"
                },
                "rawOffset": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SwaggerTypeListInv": {
            "type": "object",
            "required": ["paymentRetryRequest"],
            "properties": {
                "paymentRetryRequest": {
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }",
                    "$ref": "#/definitions/PaymentRetryRequest"
                }
            },
            "description": "SwaggerTypeListInv",
            "xml": {
                "name": "SwaggerTypeListInv"
            }
        },
        "AmendmentDiscardAmendment": {
            "allOf": [{
                "$ref": "#/definitions/Amendment"
            }, {
                "type": "object",
                "required": ["amendmentToDiscardID", "deleted", "dummyField", "internalState", "state", "subscriptionID"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                    },
                    "dummyField": {
                        "type": "string",
                        "xml": {
                            "name": "@type"
                        },
                        "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                        "enum": ["DefaultQuantityAmendment", "InvoiceOutstandingChargesAmendment", "CreateSubscriptionChargeAmendment", "IssueInvoiceAmendment", "PricingComponentValueAmendment", "GatewayMigrationAmendment", "InvoiceRecalculationAmendment", "CancellationAmendment", "InvoiceNextExecutionAttemptAmendment", "FixedTermExpiryAmendment", "EndTrialAmendment", "ProductRatePlanMigrationAmendment", "AmendmentDiscardAmendment"]
                    },
                    "id": {
                        "type": "string",
                        "description": "id"
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"\"] }"
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "subscription": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "amendmentType": {
                        "type": "string",
                        "description": "amendmentType",
                        "enum": ["InvoiceNextExecutionAttempt", "Cancellation", "PricingComponentValue", "AmendmentDiscard", "Compound", "FixedTermExpiry", "InvoiceRecalculation", "EndTrial", "InvoiceOutstandingCharges", "IssueInvoice", "ProductRatePlanMigration", "UpdateComponentValue", "ServiceEnd", "ResumeSubscription", "CreateSubscriptionCharge"]
                    },
                    "actioningTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"When the amendment will run\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "actionedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The time the amendment completed.\", \"verbs\":[\"GET\"] }"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded"]
                    },
                    "internalState": {
                        "type": "string",
                        "description": "This is a slightly more granular state field, a proper superset of amendmentState unioned with: subsystemInstanceCreated (the amendment has made an object that will have the intended effect) and pendingDiscard (a request has been received to discard the amendment, and discard the subsystem instance). Default: Pending",
                        "enum": ["Pending", "Succeeded", "Failed", "Discarded", "SubsystemInstanceCreated"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "{ \"description\" : \"Is the amendment deleted.\", \"verbs\":[\"GET\"] }",
                        "default": false
                    },
                    "amendmentToDiscardID": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the amendment to discard.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    },
                    "discardableSubsystemObject": {
                        "$ref": "#/definitions/IDiscardable"
                    },
                    "discardable": {
                        "type": "boolean",
                        "default": false
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "discardWarningString": {
                        "type": "string"
                    }
                },
                "description": "Discards an amendment.",
                "xml": {
                    "name": "amendment"
                }
            }]
        },
        "UnitDiscount": {
            "type": "object",
            "properties": {
                "unitValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "tierID": {
                    "type": "string"
                },
                "unalteredValue": {
                    "type": "number"
                },
                "discountValue": {
                    "type": "number"
                },
                "discountedValue": {
                    "type": "number"
                }
            }
        },
        "BraintreeAuthCaptureRequest": {
            "allOf": [{
                "$ref": "#/definitions/AuthCaptureRequest"
            }, {
                "type": "object",
                "required": ["gateway", "paymentMethodNonce"],
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                    },
                    "accountID": {
                        "type": "string",
                        "description": "{\"description\":\"ID of the BillForward Account with which you would like to associate the created payment method.<br>If omitted, BillForward will associate the created PaymentMethod with a newly-created Account, whose Profile details will be populated using billing information from the funding instrument.\",\"verbs\":[\"POST\"]}"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "{\"description\":\"The gateway with which your funding instrument has been vaulted.\",\"verbs\":[\"POST\"]}",
                        "enum": ["Balanced", "Braintree", "Cybersource", "Paypal", "Stripe", "AuthorizeNet", "Spreedly", "SagePay", "TrustCommerce", "Payvision", "Kash"]
                    },
                    "companyName": {
                        "type": "string",
                        "description": "{\"description\":\"The name of the company of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "email": {
                        "type": "string",
                        "description": "{\"description\":\"The email address of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "{\"description\":\"The first name of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "{\"description\":\"The last name of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "mobile": {
                        "type": "string",
                        "description": "{\"description\":\"The mobile phone number of the customer from whose card a PaymentMethod is being produced. If provided: this metadata will be used to populate a Profile &mdash; should a BillForward Account be created by this request.\",\"verbs\":[\"POST\"]}"
                    },
                    "defaultPaymentMethod": {
                        "type": "boolean",
                        "description": "{\"default\":false,\"description\":\"Whether the PaymentMethod produced by this request should be elected as the 'default' payment method for the concerned BillForward Account. Whichever PaymentMethod is elected as an Account's default payment method, will be consulted whenever payment is demanded of that Account (i.e. upon the execution of any of the Account's invoices).\",\"verbs\":[\"POST\"]}",
                        "default": false
                    },
                    "organizationID": {
                        "type": "string",
                        "description": "{\"description\":\"ID of the BillForward Organization within which the requested PaymentMethod should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                    },
                    "paymentMethodNonce": {
                        "type": "string",
                        "description": "{\"description\":\"One-use cryptographic nonce <a href=\\\"https://developers.braintreepayments.com/javascript+node/start/overview\\\">provided by Braintree's client-side card capture SDK</a>, in response to your capturing a card into the Braintree vault. This nonce will be used by BillForward to find the tokenized card within the Braintree vault &mdash; precursory to linking a BillForward PaymentMethod to that tokenized card\",\"verbs\":[\"POST\"]}"
                    },
                    "deviceData": {
                        "type": "string",
                        "description": "{\"description\":\"(Required when vaulting a PayPal payment method; otherwise optional)<br>A JSON string providing information about the device your customer used to fill out the card capture form. This information is inserted into your form by <a href=\\\"https://developers.braintreepayments.com/javascript+node/guides/advanced-fraud-tools/client-side\\\">braintree-data.js</a> &mdash; if and only if you use Braintree's drop-in form integrations. You should ideally provide it if you have one (it aids with fraud detection), but it is only mandatory in the case of PayPal payment method vaulting.\",\"verbs\":[\"POST\"]}"
                    },
                    "id": {
                        "type": "string",
                        "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                    },
                    "billingEntity": {
                        "type": "string",
                        "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                    },
                    "notificationObjectGraph": {
                        "type": "string"
                    }
                },
                "description": "[Note: this request can be built automatically by our client-side card capture library, <a href=\"https://github.com/billforward/billforward-js\">BillForward.js</a>; you should not need to interact with this API manually unless you have particularly bespoke requirements] This entity is used for requesting that BillForward produce a PaymentMethod, linked to a funding instrument you have vaulted in Braintree. The BillForward PaymentMethod will be associated with a BillForward Account of your choosing (or a newly-created Account, if preferred).",
                "xml": {
                    "name": "AuthCaptureRequest"
                }
            }]
        },
        "TimeRequest": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "periods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{\"description\":\"(Required: one of [`periods`, `to`])<br>The number of period boundaries up to which the subscription should advance.\nA 1-value advances the subscription to the end of its current service period.\nHigher values advance the subscription to subsequent period boundaries.\"verbs\":[\"POST\",\"GET\"]}"
                },
                "to": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{\"description\":\"(Required: one of [`periods`, `to`])<br>The time up until which the subscription should be fast-forwarded.\",\"verbs\":[\"POST\",\"GET\"]}"
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Changes described in the response:<br><span class=\\\"label label-default\\\">true</span> &mdash; Are not actually performed; your subscription remains unchanged, no billing events run, and no invoices are executed.<br><span class=\\\"label label-default\\\">false</span> &mdash; Are actually performed and committed.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "skipIntermediatePeriods": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"As time scrubs forward:<br><span class=\\\"label label-default\\\">true</span> &mdash; Raise no invoice upon advancing over a period boundary.<br><span class=\\\"label label-default\\\">false</span> &mdash; Raise invoices for any period that is entered.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "handleAmendments": {
                    "type": "boolean",
                    "description": "{\"default\":true,\"description\":\"As time scrubs forward:<br><span class=\\\"label label-default\\\">true</span> &mdash; Run any amendments that were scheduled to action.<br><span class=\\\"label label-default\\\">false</span> &mdash; Do not run any amendments that were scheduled to action.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "executionStrategy": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">SingleAttempt</span>\",\"description\":\"What strategy to use when executing any invoices raised as time advances:<br><span class=\\\"label label-default\\\">SingleAttempt</span> &mdash; Execute any invoice just once.<br><span class=\\\"label label-default\\\">FollowDunning</span> &mdash; Apply the existing dunning strategy when executing invoices.<br><span class=\\\"label label-default\\\">None</span>: Do not execute invoices.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["SingleAttempt", "FollowDunning", "None"]
                },
                "freezeOnCompletion": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Once the subscription is advanced through time:<br><span class=\\\"label label-default\\\">true</span> &mdash; Freeze the subscription.<br><span class=\\\"label label-default\\\">false</span> &mdash; Do not freeze the subscription.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "advanceInclusively": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"When advancing onto an instant in time:<br><span class=\\\"label label-default\\\">true</span> &mdash; Action the events scheduled for your destination time. Amendments scheduled at your destined time will be actioned during this time travel. Advancing to a period boundary will promote your subscription to the period on the future side of that boundary.<br><span class=\\\"label label-default\\\">false</span> &mdash; Do not action events scheduled for your destination time. Amendments scheduled at your destined time will not be actioned during this time travel. Advancing to a period boundary will result in your subscription's remaining within the period on the past side of that boundary.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "from": {
                    "type": "string",
                    "format": "date-time"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for advancing a subscription's flow through time."
        },
        "BraintreeCaptureRequest": {
            "type": "object",
            "required": ["cardNumber", "cardholderName", "cvv", "expiryMonth", "expiryYear"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the BillForward Organization within which the requested PaymentMethod should be created. If omitted, this will be auto-populated using your authentication credentials.\",\"verbs\":[\"POST\"]}"
                },
                "accountID": {
                    "type": "string",
                    "description": "{\"description\":\"ID of the BillForward Account with which you would like to associate the created payment method.<br>If omitted, BillForward will associate the created PaymentMethod with a newly-created Account, whose Profile details will be populated using billing information from the funding instrument.\",\"verbs\":[\"POST\"]}"
                },
                "defaultPaymentMethod": {
                    "type": "boolean",
                    "description": "{\"default\":false,\"description\":\"Whether the PaymentMethod produced by this request should be elected as the 'default' payment method for the concerned BillForward Account. Whichever PaymentMethod is elected as an Account's default payment method, will be consulted whenever payment is demanded of that Account (i.e. upon the execution of any of the Account's invoices).\",\"verbs\":[\"POST\"]}",
                    "default": false
                },
                "cardholderName": {
                    "type": "string",
                    "description": "{\"description\":\"Name of the person who holds the credit card being captured.\",\"verbs\":[\"POST\"]}"
                },
                "cardNumber": {
                    "type": "string",
                    "description": "{\"description\":\"Number of the credit card being captured.\",\"verbs\":[\"POST\"]}"
                },
                "expiryMonth": {
                    "type": "string",
                    "description": "{\"description\":\"Expiration month of the credit card being captured, formatted MM.\",\"verbs\":[\"POST\"]}"
                },
                "expiryYear": {
                    "type": "string",
                    "description": "{\"description\":\"Expiration year of the credit card being captured, formatted YYYY or YY.\",\"verbs\":[\"POST\"]}"
                },
                "cvv": {
                    "type": "string",
                    "description": "{\"description\":\"3 or 4 digit card verification value assigned to the credit card being captured.\",\"verbs\":[\"POST\"]}"
                },
                "deviceData": {
                    "type": "string",
                    "description": "{\"description\":\"(Required when vaulting a PayPal payment method; otherwise optional)<br>A JSON string providing information about the device your customer used to fill out the card capture form. This information is inserted into your form by <a href=\\\"https://developers.braintreepayments.com/javascript+node/guides/advanced-fraud-tools/client-side\\\">braintree-data.js</a> &mdash; if and only if you use Braintree's drop-in form integrations. You should ideally provide it if you have one (it aids with fraud detection), but it is only mandatory in the case of PayPal payment method vaulting.\",\"verbs\":[\"POST\"]}"
                },
                "merchantAccountId": {
                    "type": "string",
                    "description": "{\"description\":\"Braintree <a href=\\\"https://articles.braintreepayments.com/control-panel/important-gateway-credentials\\\">Merchant account ID</a> with which you wish for the captured funding instrument to transact. Within your Braintree gateway, you can have multiple merchant accounts to process transactions for different businesses or currencies. If you have a single merchant account, it is not necessary to specify a merchant account ID in your API requests. If you have multiple merchant accounts and choose not to specify the merchant account ID, all requests will process through your default merchant account.\",\"verbs\":[\"POST\"]}"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "{\"description\":\"IP address of the customer providing the details of the credit card to be captured.\",\"verbs\":[\"POST\"]}"
                },
                "ipAddressCountry": {
                    "type": "string",
                    "description": "{\"description\":\"Country of the IP address of the customer providing the details of the credit card to be captured.\",\"verbs\":[\"POST\"]}"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "[Warning: for use only in PCI-compliant environments; for more information, <a href=\"mailto:support@billforward.net\">contact us</a> regarding provisioning of your own on-premise BillForward instance] This entity is for specifying raw credit card details, to be captured into the Braintree vault."
        },
        "InvoiceRecalculationRequest": {
            "type": "object",
            "required": ["dryRun", "newState", "onlyInvoiceAssociatedCharges", "recalculationBehaviour"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "recalculationBehaviour": {
                    "type": "string",
                    "description": "{\"default\":\"RecalculateAsLatestSubscriptionVersion\",\"description\":\"On plan change a subscription may have outstanding invoices.If the value of the invoice needs to be changed it can either be calculated via the new or old plan. <span class=\\\"label label-default\\\">RecalculateAsLatestSubscriptionVersion</span> calculates as the original plan and <span class=\\\"label label-default\\\">RecalculateAsCurrentSubscriptionVersion</span> as the new plan\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["RecalculateAsLatestSubscriptionVersion", "RecalculateAsCurrentSubscriptionVersion"]
                },
                "newState": {
                    "type": "string",
                    "description": "{\"default\":\"Pending\",\"description\":\"State of the invoice once recalculated\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["Paid", "Unpaid", "Pending", "Voided"]
                },
                "onlyInvoiceAssociatedCharges": {
                    "type": "boolean",
                    "description": "{\"default\":true,\"description\":\"Only include charges which are already associated with the invoice. For example the subscription may have pending charges which can be added to the invoice on recalculation by setting this value to false. Note settings this value to true may cause new invoice line itemsto the invoice\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "dryRun": {
                    "type": "boolean",
                    "description": "{\"default\":\"false\",\"description\":\"Calculate the invoice but do not store or attempt payment\",\"verbs\":[\"POST\",\"GET\"]}",
                    "default": false
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                }
            },
            "description": "Request object for recalculating an invoice."
        },
        "Alias": {
            "type": "object",
            "required": ["alias", "deleted", "organization", "organizationID"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the alias.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "alias": {
                    "type": "string",
                    "description": "{ \"description\" : \"A string representation of the alias.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "deleted": {
                    "type": "boolean",
                    "description": "{ \"description\" : \"Has this alias been deleted?\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "default": false
                },
                "organization": {
                    "description": "{ \"description\" : \"The organization associated with the alias\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/MutableBillingEntity"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "The alias used to encrypt card details",
            "xml": {
                "name": "alias"
            }
        },
        "PricingComponentValueMigrationAmendmentMapping": {
            "type": "object",
            "required": ["amendmentID", "organizationID", "pricingComponentConsistentID", "value"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "amendmentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\"] }"
                },
                "value": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"Units purchased for pricing-component\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "pricingComponentConsistentID": {
                    "type": "string",
                    "xml": {
                        "name": "pricingComponentID"
                    },
                    "description": "{ \"description\" : \"Identifier for pricing-component in new the new rate-plan\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "pricingComponentName": {
                    "type": "string",
                    "description": "{ \"description\" : \"Name of the pricing component. (Must be provided if pricingComponentID is empty)\", \"verbs\":[\"POST\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "productRatePlanMigrationChargeAmendment": {
                    "$ref": "#/definitions/ProductRatePlanMigrationAmendment"
                }
            },
            "xml": {
                "name": "pricingComponentValueMigrationAmendmentMapping"
            }
        },
        "Username": {
            "type": "object",
            "required": ["organizationID", "user", "userID", "username"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the username.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "userID": {
                    "type": "string",
                    "description": "{ \"description\" : \"User associated with the username.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"Organization associated of the user\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "username": {
                    "type": "string",
                    "description": "{ \"description\" : \"The username.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "user": {
                    "description": "{ \"description\" : \"The user object associated with the username.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/User"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "description": "Username",
            "xml": {
                "name": "username"
            }
        },
        "PricingComponent": {
            "type": "object",
            "required": ["chargeModel", "chargeType", "consistentID", "defaultQuantity", "dummyField", "name", "organizationID", "productRatePlan", "productRatePlanID", "unitOfMeasureID", "validFrom"],
            "discriminator": "chargeModel",
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "dummyField": {
                    "type": "string",
                    "xml": {
                        "name": "@type"
                    },
                    "description": "{ \"description\" : \"\", \"default\" : \"\", \"verbs\":[\"POST\",\"GET\"] }",
                    "enum": ["TieredPricingComponent", "FlatPricingComponent", "TieredVolumePricingComponent"]
                },
                "id": {
                    "type": "string",
                    "xml": {
                        "name": "versionID"
                    },
                    "description": "{ \"description\" : \"Version ID of the pricing-component. Unique ID for each version of a pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "consistentID": {
                    "type": "string",
                    "xml": {
                        "name": "id"
                    },
                    "description": "{ \"description\" : \"ID of the pricing-component. This ID does not change with new versions of the pricing component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] } When associating a pricing component with a product rate plan, this ID should be used."
                },
                "productRatePlanID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "unitOfMeasureID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "name": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "description": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "chargeType": {
                    "type": "string",
                    "description": "{ \"description\" : \"The charge type of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["setup", "subscription", "arrears", "usage"]
                },
                "invoicingType": {
                    "type": "string",
                    "description": "{ \"default\" : \"Aggregated\",  \"description\" : \"For <span class=\\\"label label-default\\\">setup</span> pricing components <span class=\\\"label label-default\\\">Immediate</span> invoicing will result in an invoice being issued on subscription being set to the AwaitingPayment state, irrespective of the subscription start date. <span class=\\\"label label-default\\\">Aggregated</span> invoicing will add a charge to the first invoice of the subscription.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["Immediate", "Aggregated"]
                },
                "chargeModel": {
                    "type": "string",
                    "description": "{ \"description\" : \"The charge model of the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "enum": ["flat", "tiered", "tiered_volume"]
                },
                "upgradeMode": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">immediate</span>\",\"description\":\"Default behaviour when a value is upgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Upgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Upgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["immediate", "delayed"]
                },
                "downgradeMode": {
                    "type": "string",
                    "description": "{\"default\":\"<span class=\\\"label label-default\\\">delayed</span>\",\"description\":\"Default behaviour when a value is downgraded using this pricing component, this behaviour can be overridden when changing the value.<br><span class=\\\"label label-default\\\">immediate</span> &mdash; Downgrade will apply at the time the request is made.<br><span class=\\\"label label-default\\\">delayed</span> &mdash; Downgrade will apply at the end of the current billing cycle.\",\"verbs\":[\"POST\",\"GET\"]}",
                    "enum": ["immediate", "delayed"]
                },
                "defaultQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The default quantity of the pricing-component. If no value is supplied on a subscription this value will be used. This is useful for setting an expected purchase level of for introducing new pricing components to existing subscriptions and not having to back-fill values\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "minQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"default\" : \"0\", \"description\" : \"The minimum quantity of the pricing-component.\", \"verbs\":[] }"
                },
                "maxQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The maximum quantity of the pricing-component.\", \"verbs\":[] }"
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"default\" : \"current time\", \"description\" : \"The DateTime specifying when the pricing-component is valid from.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "validTill": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{  \"default\" : \"null\", \"description\" : \"The UTC DateTime specifying when the pricing-component is valid till.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "tiers": {
                    "type": "array",
                    "description": "{  \"default\" : \"[]\", \"description\" : \"The pricing-component-tiers associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/PricingComponentTier"
                    }
                },
                "productRatePlan": {
                    "description": "{ \"description\" : \"The product-rate-plan associated with the pricing-component.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/ProductRatePlan"
                },
                "componentValue": {
                    "type": "integer",
                    "format": "int32"
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "crmid": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "priceExplanation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priceExplanationString": {
                    "type": "string"
                },
                "notificationObjectGraph": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "pricingComponent"
            }
        },
        "Minutes": {
            "type": "object",
            "properties": {
                "fieldType": {
                    "$ref": "#/definitions/DurationFieldType"
                },
                "minutes": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodType": {
                    "$ref": "#/definitions/PeriodType"
                }
            }
        },
        "PaymentRetryRequest": {
            "type": "object",
            "properties": {
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[] }"
                },
                "retryTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"default\" : \"immediately\", \"description\" : \"When the payment retry will be attempted\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                }
            },
            "description": "PaymentRetryRequest",
            "xml": {
                "name": "PaymentRetryRequest"
            }
        },
        "CouponInstanceExistingValue": {
            "type": "object",
            "required": ["couponInstance", "existingValue", "logicalComponentID", "pricingComponents"],
            "properties": {
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was created.\", \"verbs\":[] }"
                },
                "changedBy": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the user who last updated the entity.\", \"verbs\":[] }"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "{ \"description\" : \"The UTC DateTime when the object was last updated. \", \"verbs\":[] }"
                },
                "id": {
                    "type": "string",
                    "description": "{ \"description\" : \"\", \"verbs\":[\"GET\", \"PUT\"] }"
                },
                "organizationID": {
                    "type": "string",
                    "description": "{ \"description\" : \"ID of the organization associated with the coupon-existing-value.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponInstanceID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The string ID of the coupon-instance associated with the coupon-instance-existing-value.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "logicalComponentID": {
                    "type": "string",
                    "description": "{ \"description\" : \"The consistent string ID of the pricing-component associated with the coupon-instance-existing-value.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "existingValue": {
                    "type": "integer",
                    "format": "int32",
                    "description": "{ \"description\" : \"The existing value\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }"
                },
                "couponInstance": {
                    "description": "{ \"description\" : \"The coupon-instance associated with the coupon-instance-existing-value.\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "$ref": "#/definitions/CouponInstance"
                },
                "pricingComponents": {
                    "type": "array",
                    "description": "{ \"description\" : \"The collection of pricing-component-values associated with pricing-component-existing-value\", \"verbs\":[\"POST\",\"PUT\",\"GET\"] }",
                    "items": {
                        "$ref": "#/definitions/PricingComponent"
                    }
                },
                "billingEntity": {
                    "type": "string",
                    "enum": ["Notification", "Organization", "OrganizationGateway", "Product", "User", "Subscription", "Profile", "ProductRatePlan", "Client", "Invoice", "PricingComponentValue", "Account", "PricingComponentValueChange", "PricingComponentTier", "PricingComponent", "PricingCalculation", "CouponDefinition", "CouponInstance", "CouponModifier", "CouponRule", "CouponBookDefinition", "CouponBook", "InvoiceLine", "Webhook", "SubscriptionCancellation", "NotificationSnapshot", "InvoicePayment", "InvoiceLinePayment", "Payment", "PaymentMethod", "PaymentMethodSubscriptionLink", "DunningLine", "CybersourceToken", "Card", "Alias", "PaypalSimplePaymentReconciliation", "FreePaymentReconciliation", "LocustworldPaymentReconciliation", "CouponInstanceExistingValue", "TaxLine", "TaxationStrategy", "TaxationLink", "Address", "AmendmentPriceNTime", "Authority", "UnitOfMeasure", "SearchResult", "Amendment", "AuditLog", "Password", "Username", "FixedTermDefinition", "FixedTerm", "Refund", "CreditNote", "Receipt", "AmendmentCompoundConstituent", "APIConfiguration", "StripeToken", "BraintreeToken", "BalancedToken", "PaypalToken", "AuthorizeNetToken", "SpreedlyToken", "GatewayRevenue", "AmendmentDiscardAmendment", "CancellationAmendment", "CompoundAmendment", "CompoundAmendmentConstituent", "FixedTermExpiryAmendment", "InvoiceNextExecutionAttemptAmendment", "PricingComponentValueAmendment", "BraintreeMerchantAccount", "WebhookSubscription", "Migration", "CassResult", "CassPaymentResult", "CassProductRatePlanResult", "CassChurnResult", "CassUpgradeResult", "SubscriptionCharge", "CassPaymentPProductResult", "ProductPaymentsArgs", "StripeACHToken", "UsageAmount", "UsageSession", "Usage", "UsagePeriod", "Period", "OfflinePayment", "CreditNotePayment", "CardVaultPayment", "FreePayment", "BraintreePayment", "BalancedPayment", "CybersourcePayment", "PaypalPayment", "PaypalSimplePayment", "LocustWorldPayment", "StripeOnlyPayment", "ProductPaymentsResult", "StripeACHPayment", "AuthorizeNetPayment", "CompoundUsageSession", "CompoundUsage", "UsageRoundingStrategies", "BillforwardManagedPaymentsResult", "PricingComponentValueMigrationChargeAmendmentMapping", "SubscriptionLTVResult", "AccountLTVResult", "ProductRatePlanPaymentsResult", "DebtsResult", "AccountPaymentsResult", "ComponentChange", "QuoteRequest", "Quote", "CouponCharge", "CouponInstanceInvoiceLink", "Coupon", "CouponDiscount", "CouponUniqueCodesRequest", "CouponUniqueCodesResponse", "GetCouponsResponse", "AddCouponCodeRequest", "AddCouponCodeResponse", "RemoveCouponFromSubscriptionRequest", "TokenizationPreAuth", "StripeTokenizationPreAuth", "BraintreeTokenizationPreAuth", "SpreedlyTokenizationPreAuth", "SagePayTokenizationPreAuth", "PayVisionTokenizationPreAuth", "TokenizationPreAuthRequest", "AuthCaptureRequest", "StripeACHBankAccountVerification", "PasswordReset", "PricingRequest", "AddTaxationStrategyRequest", "AddPaymentMethodRequest", "APIRequest", "SagePayToken", "SagePayNotificationRequest", "SagePayNotificationResponse", "SagePayOutstandingTransaction", "SagePayEnabledCardType", "TrustCommerceToken", "SagePayTransaction", "PricingComponentValueResponse", "MigrationResponse", "TimeResponse", "EntityTime", "AggregationLink", "BFPermission", "Role", "PermissionLink", "PayVisionToken", "PayVisionTransaction", "KashToken", "DataSynchronizationJob", "DataSynchronizationJobError", "DataSynchronizationConfiguration", "DataSynchronizationAppConfiguration", "AggregationChildrenResponse", "MetadataKeyValue", "Metadata", "AggregatingComponent", "PricingComponentMigrationValue", "InvoiceRecalculationAmendment", "IssueInvoiceAmendment"]
                },
                "notificationObjectGraph": {
                    "type": "string"
                },
                "pricingComponentWithValue": {
                    "$ref": "#/definitions/PricingComponent"
                }
            },
            "description": "A coupon-instance-existing-value.",
            "xml": {
                "name": "couponInstanceExistingValue"
            }
        }
    }
}
