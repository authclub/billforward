package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
	"github.com/go-swagger/go-swagger/strfmt"
)

/*
SubscriptionCancellationQueryResultWrapper subscription cancellation query result wrapper

swagger:model SubscriptionCancellationQueryResultWrapper
*/
type SubscriptionCancellationQueryResultWrapper struct {

	/* Arguments arguments
	 */
	Arguments []string `json:"arguments,omitempty"`

	/* Entity entity
	 */
	Entity bool `json:"entity,omitempty"`

	/* EntityName entity name
	 */
	EntityName string `json:"entityName,omitempty"`

	/* IncludeRetired include retired
	 */
	IncludeRetired bool `json:"includeRetired,omitempty"`

	/* Offset offset
	 */
	Offset int32 `json:"offset,omitempty"`

	/* OrderBy order by
	 */
	OrderBy string `json:"orderBy,omitempty"`

	/* OrderDirection order direction
	 */
	OrderDirection string `json:"orderDirection,omitempty"`

	/* Organizations organizations
	 */
	Organizations []string `json:"organizations,omitempty"`

	/* Records records
	 */
	Records int32 `json:"records,omitempty"`

	/* Results results
	 */
	Results []*BillingEntityBase `json:"results,omitempty"`

	/* SingleResult single result
	 */
	SingleResult *BillingEntityBase `json:"singleResult,omitempty"`

	/* TotalRecordsReturned total records returned
	 */
	TotalRecordsReturned int32 `json:"totalRecordsReturned,omitempty"`

	/* TypedResults typed results
	 */
	TypedResults []*MutableBillingEntity `json:"typedResults,omitempty"`

	/* TypedSingleResult typed single result
	 */
	TypedSingleResult *MutableBillingEntity `json:"typedSingleResult,omitempty"`

	/* Types types
	 */
	Types []string `json:"types,omitempty"`

	/* Wildcard wildcard
	 */
	Wildcard bool `json:"wildcard,omitempty"`
}

// Validate validates this subscription cancellation query result wrapper
func (m *SubscriptionCancellationQueryResultWrapper) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderDirection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var subscriptionCancellationQueryResultWrapperOrderDirectionEnum []interface{}

func (m *SubscriptionCancellationQueryResultWrapper) validateOrderDirectionEnum(path, location string, value string) error {
	if subscriptionCancellationQueryResultWrapperOrderDirectionEnum == nil {
		var res []string
		if err := json.Unmarshal([]byte(`["ASC","DESC"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			subscriptionCancellationQueryResultWrapperOrderDirectionEnum = append(subscriptionCancellationQueryResultWrapperOrderDirectionEnum, v)
		}
	}
	return validate.Enum(path, location, value, subscriptionCancellationQueryResultWrapperOrderDirectionEnum)
}

func (m *SubscriptionCancellationQueryResultWrapper) validateOrderDirection(formats strfmt.Registry) error {

	if err := m.validateOrderDirectionEnum("orderDirection", "body", m.OrderDirection); err != nil {
		return err
	}

	return nil
}
